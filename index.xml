<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Blog</title>
<link>https://blog.frequentist.org/</link>
<atom:link href="https://blog.frequentist.org/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.7.5</generator>
<lastBuildDate>Fri, 31 Oct 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Propensity Score Matching for Causal Analysis</title>
  <dc:creator>Aleksei Prishchepo</dc:creator>
  <link>https://blog.frequentist.org/posts/20251028-propensity-score-matching/</link>
  <description><![CDATA[ 





<p>In marketing analytics, one of the most common questions is:</p>
<blockquote class="blockquote">
<p>Did our campaign actually cause people to subscribe, or the subscribers were already more likely to do so?</p>
</blockquote>
<p>When we only have observational data — not a randomized experiment — it’s tricky to separate correlation from causation. This is where Propensity Score Matching (PSM) comes in.</p>
<p>In this tutorial, we’ll use the <a href="https://archive.ics.uci.edu/dataset/222/bank+marketing" target="_blank">Bank Marketing dataset</a> from the UCI Machine Learning Repository to estimate the causal effect of being previously contacted on the probability of subscribing to a term deposit.</p>
<p>We’ll use the R package <a href="https://cloud.r-project.org/web/packages/MatchIt/index.html" target="_blank">MatchIt</a> to perform matching and evaluate balance.</p>
<section id="data-overview" class="level2">
<h2 class="anchored" data-anchor-id="data-overview">Data Overview</h2>
<p>First, let’s load the necessary libraries and the dataset.</p>
<section id="load-packages" class="level3">
<h3 class="anchored" data-anchor-id="load-packages">Load Packages</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(MatchIt)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lubridate)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(skimr)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(here)</span></code></pre></div>
</div>
</section>
<section id="load-data" class="level3">
<h3 class="anchored" data-anchor-id="load-data">Load Data</h3>
<p>Here we download the UCI Bank Marketing dataset if it’s not already present in the working directory.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bank-full.csv"</span>))) {</span>
<span id="cb2-2">  dataset <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bank-full.csv"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";"</span>)</span>
<span id="cb2-3">} <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb2-4">  url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://archive.ics.uci.edu/static/public/222/bank+marketing.zip"</span></span>
<span id="cb2-5">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tempfile</span>()</span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">download.file</span>(url, temp)</span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unzip</span>(temp, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bank.zip"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">exdir =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>())</span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unzip</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bank.zip"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bank-full.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">exdir =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>())</span>
<span id="cb2-9">  dataset <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bank-full.csv"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";"</span>)</span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlink</span>(temp)</span>
<span id="cb2-11">}</span>
<span id="cb2-12">dataset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 45,211
Columns: 17
$ age       &lt;int&gt; 58, 44, 33, 47, 33, 35, 28, 42, 58, 43, 41, 29, 53, 58, 57, …
$ job       &lt;chr&gt; "management", "technician", "entrepreneur", "blue-collar", "…
$ marital   &lt;chr&gt; "married", "single", "married", "married", "single", "marrie…
$ education &lt;chr&gt; "tertiary", "secondary", "secondary", "unknown", "unknown", …
$ default   &lt;chr&gt; "no", "no", "no", "no", "no", "no", "no", "yes", "no", "no",…
$ balance   &lt;int&gt; 2143, 29, 2, 1506, 1, 231, 447, 2, 121, 593, 270, 390, 6, 71…
$ housing   &lt;chr&gt; "yes", "yes", "yes", "yes", "no", "yes", "yes", "yes", "yes"…
$ loan      &lt;chr&gt; "no", "no", "yes", "no", "no", "no", "yes", "no", "no", "no"…
$ contact   &lt;chr&gt; "unknown", "unknown", "unknown", "unknown", "unknown", "unkn…
$ day       &lt;int&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, …
$ month     &lt;chr&gt; "may", "may", "may", "may", "may", "may", "may", "may", "may…
$ duration  &lt;int&gt; 261, 151, 76, 92, 198, 139, 217, 380, 50, 55, 222, 137, 517,…
$ campaign  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …
$ pdays     &lt;int&gt; -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, …
$ previous  &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …
$ poutcome  &lt;chr&gt; "unknown", "unknown", "unknown", "unknown", "unknown", "unkn…
$ y         &lt;chr&gt; "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", …</code></pre>
</div>
</div>
</section>
<section id="data-summary" class="level3">
<h3 class="anchored" data-anchor-id="data-summary">Data Summary</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">dataset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">skim</span>()</span></code></pre></div>
<div class="cell-output-display">
<table class="caption-top table table-sm table-striped small">
<caption>Data summary</caption>
<tbody>
<tr class="odd">
<td style="text-align: left;">Name</td>
<td style="text-align: left;">dataset</td>
</tr>
<tr class="even">
<td style="text-align: left;">Number of rows</td>
<td style="text-align: left;">45211</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Number of columns</td>
<td style="text-align: left;">17</td>
</tr>
<tr class="even">
<td style="text-align: left;">_______________________</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Column type frequency:</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;">character</td>
<td style="text-align: left;">10</td>
</tr>
<tr class="odd">
<td style="text-align: left;">numeric</td>
<td style="text-align: left;">7</td>
</tr>
<tr class="even">
<td style="text-align: left;">________________________</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Group variables</td>
<td style="text-align: left;">None</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: character</strong></p>
<table class="caption-top table table-sm table-striped small">
<colgroup>
<col style="width: 19%">
<col style="width: 13%">
<col style="width: 19%">
<col style="width: 5%">
<col style="width: 5%">
<col style="width: 8%">
<col style="width: 12%">
<col style="width: 15%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">min</th>
<th style="text-align: right;">max</th>
<th style="text-align: right;">empty</th>
<th style="text-align: right;">n_unique</th>
<th style="text-align: right;">whitespace</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">job</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">marital</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">8</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">education</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">9</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">default</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">housing</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">loan</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">contact</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">9</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">month</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">poutcome</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">5</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">y</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: numeric</strong></p>
<table class="caption-top table table-sm table-striped small">
<colgroup>
<col style="width: 16%">
<col style="width: 11%">
<col style="width: 16%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 6%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 5%">
<col style="width: 8%">
<col style="width: 6%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">sd</th>
<th style="text-align: right;">p0</th>
<th style="text-align: right;">p25</th>
<th style="text-align: right;">p50</th>
<th style="text-align: right;">p75</th>
<th style="text-align: right;">p100</th>
<th style="text-align: left;">hist</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">age</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">40.94</td>
<td style="text-align: right;">10.62</td>
<td style="text-align: right;">18</td>
<td style="text-align: right;">33</td>
<td style="text-align: right;">39</td>
<td style="text-align: right;">48</td>
<td style="text-align: right;">95</td>
<td style="text-align: left;">▅▇▃▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">balance</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1362.27</td>
<td style="text-align: right;">3044.77</td>
<td style="text-align: right;">-8019</td>
<td style="text-align: right;">72</td>
<td style="text-align: right;">448</td>
<td style="text-align: right;">1428</td>
<td style="text-align: right;">102127</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">day</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">15.81</td>
<td style="text-align: right;">8.32</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">8</td>
<td style="text-align: right;">16</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">31</td>
<td style="text-align: left;">▇▆▇▆▆</td>
</tr>
<tr class="even">
<td style="text-align: left;">duration</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">258.16</td>
<td style="text-align: right;">257.53</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">103</td>
<td style="text-align: right;">180</td>
<td style="text-align: right;">319</td>
<td style="text-align: right;">4918</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">campaign</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">2.76</td>
<td style="text-align: right;">3.10</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">63</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">pdays</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">40.20</td>
<td style="text-align: right;">100.13</td>
<td style="text-align: right;">-1</td>
<td style="text-align: right;">-1</td>
<td style="text-align: right;">-1</td>
<td style="text-align: right;">-1</td>
<td style="text-align: right;">871</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">previous</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0.58</td>
<td style="text-align: right;">2.30</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">275</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
</section>
<section id="correlation-matrix" class="level2">
<h2 class="anchored" data-anchor-id="correlation-matrix">Correlation Matrix</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(PerformanceAnalytics)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb5-4"></span>
<span id="cb5-5">dataset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_n</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select_if</span>(is.numeric) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart.Correlation</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">histogram =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-correlation-matrix" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-correlation-matrix-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251028-propensity-score-matching/index_files/figure-html/fig-correlation-matrix-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-correlation-matrix-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Distributions and correlations of numeric variables in the dataset.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="defining-treatment-and-outcome" class="level2">
<h2 class="anchored" data-anchor-id="defining-treatment-and-outcome">Defining Treatment and Outcome</h2>
<p>Our treatment variable will be whether the client was previously contacted (<code>pdays != -1</code>), and the outcome variable will be whether the client subscribed to a term deposit (<code>y == "yes"</code>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">dataset <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dataset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb6-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">treat =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(pdays <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># previously contacted</span></span>
<span id="cb6-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outcome =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yes"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-5">  )</span></code></pre></div>
</div>
<ul>
<li><p><code>treat = 1</code>: client was previously contacted (pdays != 999);</p></li>
<li><p><code>treat = 0</code>: new client, not contacted before;</p></li>
<li><p><code>outcome = 1</code>: client subscribed to term deposit;</p></li>
<li><p><code>outcome = 0</code>: client did not subscribe.</p></li>
</ul>
<p>Let’s check the basic rates:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">dataset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(treat) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb7-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb7-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subscription_rate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(outcome)</span>
<span id="cb7-6">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 3
  treat     n subscription_rate
  &lt;dbl&gt; &lt;int&gt;             &lt;dbl&gt;
1     0 36954            0.0916
2     1  8257            0.231 </code></pre>
</div>
</div>
<p>We can clearly see that previously contacted clients (treat = 1) have a higher subscription rate — but this might be due to other factors like income or engagement.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">t_test_all <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> treat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dataset)</span>
<span id="cb9-2">t_test_all</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Welch Two Sample t-test

data:  outcome by treat
t = -28.552, df = 10051, p-value &lt; 2.2e-16
alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0
95 percent confidence interval:
 -0.1486926 -0.1295874
sample estimates:
mean in group 0 mean in group 1 
     0.09157331      0.23071333 </code></pre>
</div>
</div>
</section>
<section id="covariates-and-model-formula" class="level2">
<h2 class="anchored" data-anchor-id="covariates-and-model-formula">Covariates and Model Formula</h2>
<p>We include demographic and financial variables that can influence both being re-contacted and subscribing. We need to exclude<code>campaign</code> (number of contacts performed during this campaign and for this client), <code>contact</code> (contact communication type), <code>previous</code> (number of contacts performed before this campaign), and <code>poutcome</code> (outcome of the previous marketing campaign) to avoid leaking information about treatment assignment.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">formula <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> treat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> job <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> marital <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> education <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> default <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-2">  balance <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> housing <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> loan </span></code></pre></div>
</div>
</section>
<section id="estimating-propensity-scores-and-matching" class="level2">
<h2 class="anchored" data-anchor-id="estimating-propensity-scores-and-matching">Estimating Propensity Scores and Matching</h2>
<p>We now fit the PSM model using nearest-neighbor matching:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">psm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matchit</span>(</span>
<span id="cb12-2">  formula,</span>
<span id="cb12-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dataset,</span>
<span id="cb12-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nearest"</span>,</span>
<span id="cb12-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-6">)</span></code></pre></div>
</div>
<p>Let’s inspect the summary. We won’t include the whole output of the summary function, just the number of matched pairs:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(psm)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              Control Treated
All (ESS)       36954    8257
All             36954    8257
Matched (ESS)    8257    8257
Matched          8257    8257
Unmatched       28697       0
Discarded           0       0</code></pre>
</div>
</div>
</section>
<section id="visualizing-balance" class="level2">
<h2 class="anchored" data-anchor-id="visualizing-balance">Visualizing Balance</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(psm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jitter"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-balance-plot" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-balance-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251028-propensity-score-matching/index_files/figure-html/fig-balance-plot-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-balance-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Plot of propensity scores before and after matching.
</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(psm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"density"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb16-2">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">which.xs =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> job <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> marital <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> education <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> default <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> balance <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-3">    housing <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> loan)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-density-plots-1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-density-plots-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251028-propensity-score-matching/index_files/figure-html/fig-density-plots-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-density-plots-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Density plots of variables before and after matching.
</figcaption>
</figure>
</div>
</div>
<div class="cell-output-display">
<div id="fig-density-plots-2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-density-plots-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251028-propensity-score-matching/index_files/figure-html/fig-density-plots-2.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-density-plots-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Density plots of variables before and after matching.
</figcaption>
</figure>
</div>
</div>
<div class="cell-output-display">
<div id="fig-density-plots-3" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-density-plots-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251028-propensity-score-matching/index_files/figure-html/fig-density-plots-3.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-density-plots-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Density plots of variables before and after matching.
</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cobalt)</span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">love.plot</span>(psm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-cobalt-love-plot" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-cobalt-love-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251028-propensity-score-matching/index_files/figure-html/fig-cobalt-love-plot-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-cobalt-love-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: Love plot showing standardized mean differences before and after matching.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="estimating-the-treatment-effect" class="level2">
<h2 class="anchored" data-anchor-id="estimating-the-treatment-effect">Estimating the Treatment Effect</h2>
<p>Extract the matched data and estimate the effect on subscription:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">matched_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">match.data</span>(psm)  </span>
<span id="cb18-2">t_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> treat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> matched_data)</span>
<span id="cb18-3">t_test</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Welch Two Sample t-test

data:  outcome by treat
t = -18.501, df = 15563, p-value &lt; 2.2e-16
alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0
95 percent confidence interval:
 -0.1201447 -0.0971255
sample estimates:
mean in group 0 mean in group 1 
      0.1220782       0.2307133 </code></pre>
</div>
</div>
<p>The difference in means represents the <strong>Average Treatment Effect on the Treated (ATT)</strong> — how much more likely previously contacted customers are to subscribe, compared to similar new customers.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">diff_means <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(t_test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>estimate[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t_test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>estimate[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb20-2">diff_means</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.1086351</code></pre>
</div>
</div>
</section>
<section id="results-and-interpretation" class="level2">
<h2 class="anchored" data-anchor-id="results-and-interpretation">Results and Interpretation</h2>
<p>Before matching, customers who were previously contacted were <img src="https://latex.codecogs.com/png.latex?13.91"> percentage points more likely to subscribe to a term deposit. After controlling for demographics and financial variables via propensity score matching, previously contacted customers were <img src="https://latex.codecogs.com/png.latex?10.86"> percentage points more likely to subscribe than comparable new customers (<img src="https://latex.codecogs.com/png.latex?p%20=%201.3128662%5Ctimes%2010%5E%7B-75%7D">), which is <img src="https://latex.codecogs.com/png.latex?3.05"> percentage points (<img src="https://latex.codecogs.com/png.latex?21.92%5C%25">) less than the initial estimate.</p>
<ul>
<li><p><strong>Before matching</strong>: previously contacted customers have a much higher subscription rate.</p></li>
<li><p><strong>After matching</strong>: the difference decreases, indicating that part of the initial gap was due to selection bias.</p></li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div id="fig-subscription-rates" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-subscription-rates-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251028-propensity-score-matching/index_files/figure-html/fig-subscription-rates-1.png" class="img-fluid figure-img" width="576">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-subscription-rates-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;7: Subscription rates before and after matching.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="discussion-and-limitations" class="level2">
<h2 class="anchored" data-anchor-id="discussion-and-limitations">Discussion and Limitations</h2>
<p><strong>Unobserved confounding</strong>: we only matched on observed variables; factors like personality or spending habits might still bias the result.</p>
<p><strong>Choice of treatment</strong>: we assumed “previous contact” is the cause; other definitions (e.g., contact channel, number of calls) could be explored.</p>
<p><strong>Generalization</strong>: results apply to customers similar to those treated (ATT), not necessarily to all clients.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this tutorial, we’ve demonstrated how to estimate a causal effect using Propensity Score Matching with real marketing data.</p>
<section id="the-key-takeaways" class="level3">
<h3 class="anchored" data-anchor-id="the-key-takeaways">The key takeaways:</h3>
<ul>
<li><p>PSM helps approximate experimental conditions in observational settings.</p></li>
<li><p>Always check covariate balance before interpreting results.</p></li>
<li><p>Proper treatment and covariate definitions are critical.</p></li>
</ul>
<p>The full R code can be easily adapted to other business questions, for example, measuring the effect of marketing emails, app notifications, or loyalty programs when randomization is not possible.</p>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Ho D, Imai K, King G, Stuart E (2011). “MatchIt: Nonparametric Preprocessing for Parametric Causal Inference.” <em>Journal of Statistical Software</em>, <em>42</em>(8), 1-28. doi:10.18637/jss.v042.i08 <a href="https://doi.org/10.18637/jss.v042.i08" class="uri">https://doi.org/10.18637/jss.v042.i08</a>.</p>


</section>

 ]]></description>
  <category>A/B Testing</category>
  <category>Statistics</category>
  <category>R</category>
  <guid>https://blog.frequentist.org/posts/20251028-propensity-score-matching/</guid>
  <pubDate>Fri, 31 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20251028-propensity-score-matching/image.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Building the Analytical Dashboard with Power BI and R</title>
  <dc:creator>Aleksei Prishchepo</dc:creator>
  <link>https://blog.frequentist.org/posts/20251026-cfpb-dashboard/</link>
  <description><![CDATA[ 





<p>In this article I’m going to share the process I followed in developing this analytical dashboard. My goal was to take the Consumer Financial Complaints Dataset and distill it into a set of visualizations, integrating statistical modeling and time series analysis.</p>
<p>For those who enjoy the technical deep dives, the repository containing Exploratory Data Analysis, Time Series Forecasting, and Causal Analysis documents is linked at the end of this post. Here is an overview of how the dashboard came together.</p>
<section id="data-preparation-and-exploratory-data-analysis-eda" class="level2">
<h2 class="anchored" data-anchor-id="data-preparation-and-exploratory-data-analysis-eda">Data Preparation and Exploratory Data Analysis (EDA)</h2>
<p>The entire project started with ensuring the data was robust and ready for analysis. I performed Exploratory Data Analysis (EDA) to check the data structure, look at distributions, and establish correlations.</p>
<ul>
<li><p><strong>Loading and Cleaning:</strong> I loaded two main sheets from the Excel file: the <code>complaints</code> data, which contained 62,516 rows and 19 columns, and the <code>companies</code> data, which contained 1,081 rows and 9 columns.</p></li>
<li><p><strong>Joining Tables:</strong> to create a single comprehensive analytical dataset, I joined the <code>complaints</code> data and the <code>companies</code> data. This resulted in a dataset comprising 62,516 rows and 27 variables.</p></li>
</ul>
<section id="visualizing-distributions-and-relationships" class="level3">
<h3 class="anchored" data-anchor-id="visualizing-distributions-and-relationships">Visualizing Distributions and Relationships</h3>
<p>During EDA, I needed to check the univariate distributions of the numeric variables (Figure 1) and examine correlations between them to identify relationships and potential multicollinearity (Figure 2).</p>
<div id="fig-numeric-distributions-1" class="quarto-float quarto-figure quarto-figure-center anchored" alt="Distributions of Numeric Variables">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-numeric-distributions-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/01_eda_files/figure-html/fig-numeric-distributions-1.svg" class="img-fluid figure-img" alt="Distributions of Numeric Variables">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-numeric-distributions-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Distributions of Numeric Variables
</figcaption>
</figure>
</div>
<div id="fig-corrplot-1" class="quarto-float quarto-figure quarto-figure-center anchored" alt="Distributions of Numeric Variables">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-corrplot-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/01_eda_files/figure-html/fig-corrplot-1.svg" class="img-fluid figure-img" alt="Distributions of Numeric Variables">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-corrplot-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Correlation Matrix of Numeric Variables
</figcaption>
</figure>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>See the document <a href="../../posts/20251026-cfpb-dashboard/01_eda.html" target="_blank">Exploratory Data Analysis</a> for the detailed description of the EDA process.</p>
</div>
</div>
</section>
</section>
<section id="forecasting-complaint-trends-time-series-analysis" class="level2">
<h2 class="anchored" data-anchor-id="forecasting-complaint-trends-time-series-analysis">Forecasting Complaint Trends (Time Series Analysis)</h2>
<p>My next step was to create time series forecasts of complaint volumes segmented by state, which is essential for identifying upcoming trends.</p>
<section id="granularity-adjustment" class="level3">
<h3 class="anchored" data-anchor-id="granularity-adjustment">Granularity Adjustment</h3>
<p>My initial approach using daily granularity proved to be <strong>too slow</strong> for the necessary integration within the Power BI environment using PowerQuery. To achieve faster processing, I switched the analysis to <strong>monthly granularity</strong>.</p>
</section>
<section id="modeling-approach" class="level3">
<h3 class="anchored" data-anchor-id="modeling-approach">Modeling Approach</h3>
<p>I aggregated the data by state and month. The modeling function I used relied on the <code>auto.arima</code> approach for time series analysis, with a fallback to ETS if ARIMA failed, and the forecast horizon was set to 6 months. This produced actual complaint counts, forecasts, and confidence intervals that could be successfully integrated into Power BI.</p>
<p>I aggregated the data to the monthly level before running the forecast models:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">monthly <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dataset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor_date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(date_received), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(state, month) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span>   </span>
<span id="cb1-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">complaints =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span>   </span>
<span id="cb1-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(state, month) </span></code></pre></div>
<p>Using <code>floor_date</code> from the <code>lubridate</code> package, which sets the date to the start of a month, allowed me to create a “many-to-one” relationship between the resulting table and the <code>Calendar</code> table in Power BI, using the <code>month</code> column as the key.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>See the full Time Series Analysis document <a href="../../posts/20251026-cfpb-dashboard/02_time_series_forecast.html" target="_blank">here</a> for details.</p>
</div>
</div>
</section>
<section id="dashboard-visual-complaints-over-time" class="level3">
<h3 class="anchored" data-anchor-id="dashboard-visual-complaints-over-time">Dashboard Visual: Complaints Over Time</h3>
<p>The resulting forecast is presented visually in the dashboard’s “Overview” and “Geography” sections, showing the actual and forecasted complaint volumes over time.</p>
<div id="fig-time-series-by-census-division" class="quarto-float quarto-figure quarto-figure-center anchored" alt="Time series by census division">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-time-series-by-census-division-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/time-series-by-census-division.svg" class="img-fluid figure-img" alt="Time series by census division">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-time-series-by-census-division-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Time series by census division
</figcaption>
</figure>
</div>
</section>
</section>
<section id="factor-analysis-causal-modeling" class="level2">
<h2 class="anchored" data-anchor-id="factor-analysis-causal-modeling">Factor Analysis (Causal Modeling)</h2>
<p>I performed causal analysis to estimate the effect of different company characteristics, such as enforcement history and size, on critical performance metrics like the complaint rate.</p>
<section id="full-linear-model" class="level3">
<h3 class="anchored" data-anchor-id="full-linear-model">Full Linear Model</h3>
<p>I built a linear regression model that included multiple covariates: enforcement status, company size tier, reputation score, and timely response rate, targeting the log of <code>complaints_per_1pct_share</code>.</p>
<ul>
<li><strong>Key Finding:</strong> After running the full model, I determined that <strong>company size</strong> was the only variable that was statistically significant.</li>
</ul>
</section>
<section id="reduced-model" class="level3">
<h3 class="anchored" data-anchor-id="reduced-model">Reduced Model</h3>
<p>I then created a simplified, reduced model using only company size as a predictor. This model exhibited strong quality metrics: adjusted R² of 0.548, and a highly significant p-value of 1.143e-188. This suggested that company size alone explains a significant portion of the variance in the complaint rate, generally indicating that <strong>larger companies tend to experience lower complaint rates</strong> compared to smaller ones.</p>
<p>The model metrics confirmed the quality of the reduced regression model:</p>
<table class="caption-top table">
<caption>Reduced Model Quality Metrics</caption>
<thead>
<tr class="header">
<th>r_squared</th>
<th>adj_r_squared</th>
<th>f_statistic</th>
<th>p_value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0.5487796</td>
<td>0.5483614</td>
<td>1312.292</td>
<td>1.142991e-188</td>
</tr>
</tbody>
</table>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>See the full <a href="../../posts/20251026-cfpb-dashboard/03_causal_inference.html" target="_blank">Causal Analysis</a> document for details.</p>
</div>
</div>
</section>
<section id="dashboard-visuals-model-comparison" class="level3">
<h3 class="anchored" data-anchor-id="dashboard-visuals-model-comparison">Dashboard Visuals: Model Comparison</h3>
<p>The dashboard’s “Factor Analysis” tab transparently presents the modeling results, comparing the full and reduced models and highlighting the significant variable.</p>
<table class="caption-top table">
<caption>Models Comparison Table</caption>
<thead>
<tr class="header">
<th><strong>Variable</strong></th>
<th>Full</th>
<th>Reduced</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>F statistic</td>
<td>3.286E+002</td>
<td>1.312E+003</td>
</tr>
<tr class="even">
<td>p value</td>
<td>9.721E-185</td>
<td>1.143E-188</td>
</tr>
<tr class="odd">
<td>R²</td>
<td>5.498E-001</td>
<td>5.488E-001</td>
</tr>
<tr class="even">
<td>R² adj.</td>
<td>5.482E-001</td>
<td>5.484E-001</td>
</tr>
</tbody>
</table>
</section>
</section>
<section id="advanced-techniques-anomaly-detection-and-clustering" class="level2">
<h2 class="anchored" data-anchor-id="advanced-techniques-anomaly-detection-and-clustering">Advanced Techniques (Anomaly Detection and Clustering)</h2>
<p>I also explored advanced techniques, though I ultimately chose to exclude their visuals from the final report to maintain focus and brevity.</p>
<section id="anomaly-detection" class="level3">
<h3 class="anchored" data-anchor-id="anomaly-detection"><strong>Anomaly Detection</strong></h3>
<p>I used STL decomposition and z-score methods to identify anomalies in the monthly complaint volumes. This approach helped to detect only a couple of anomalies (one spike and one drop). I decided to <strong>skip including this visual in the final Power BI report</strong> because the low number of detected anomalies didn’t add substantial new information to the report at this stage.</p>
<div id="fig-anomaly-plot" class="quarto-float quarto-figure quarto-figure-center anchored" alt="Time Series with Anomalies Highlighted">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-anomaly-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/04_anomaly_detection_files/figure-html/anomaly_plot-1.svg" class="img-fluid figure-img" alt="Time Series with Anomalies Highlighted">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-anomaly-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Time Series with Anomalies Highlighted
</figcaption>
</figure>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>See <a href="../../posts/20251026-cfpb-dashboard/04_anomaly_detection.html" target="_blank">Anomaly Detection</a> for full details.</p>
</div>
</div>
</section>
<section id="clustering-analysis" class="level3">
<h3 class="anchored" data-anchor-id="clustering-analysis"><strong>Clustering Analysis</strong></h3>
<p>I performed K-means clustering on various company features (like enforcement history, size, and complaint rate). I found that the optimal number of clusters was <strong>3</strong>, based on the silhouette scores. These clusters effectively separated companies:</p>
<ul>
<li><p>Cluster 1 (Large/Medium, low complaints, near-zero enforcement),</p></li>
<li><p>Cluster 2 (Small, high complaints, zero enforcement), and</p></li>
<li><p>Cluster 3 (Medium/Small, high complaints, some enforcement history).</p></li>
</ul>
<p>However, since visualizing these clusters simply reinforced the patterns already established by the causal analysis (the importance of size), I chose to <strong>skip the clustering visualizations</strong> in the final dashboard.</p>
<div id="fig-cluster_plot" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-cluster_plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/05_clustering_files/figure-html/cluster_plot-1.svg" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-cluster_plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: The plot of clusters reveals the same patterns observed in the causal analysis
</figcaption>
</figure>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>See <a href="../../posts/20251026-cfpb-dashboard/05_clustering.html" target="_blank">Clustering Analysis</a> for full details.</p>
</div>
</div>
</section>
</section>
<section id="key-dashboard-visuals" class="level2">
<h2 class="anchored" data-anchor-id="key-dashboard-visuals">Key Dashboard Visuals</h2>
<p>The final dashboard provides users with an interactive, clear overview of the financial complaints landscape, structured across tabs for Overview, Geography, Products, Companies, and Factor Analysis.</p>
<section id="overview" class="level3">
<h3 class="anchored" data-anchor-id="overview">Overview</h3>
<p>The dashboard immediately shows key metrics.</p>
<div id="fig-overview" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-overview-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/0001.svg" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-overview-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: Overview Metrics and Complaints by Product
</figcaption>
</figure>
</div>
</section>
<section id="geography-and-product-breakdowns" class="level3">
<h3 class="anchored" data-anchor-id="geography-and-product-breakdowns">Geography and Product Breakdowns</h3>
<p>The geographical tab highlights totals by Census Region, for example, the South region accounted for 4K complaints, the West for 3K, and the Midwest for 1K.</p>
<div id="fig-geography" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-geography-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/0002.svg" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-geography-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;7: Complaints by Region
</figcaption>
</figure>
</div>
<p>In terms of products, corresponding report section provides breakdown of complaints by product, including YoY changes.</p>
<div id="fig-product" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-product-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/0003.svg" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-product-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;8: Complaints by Product Details
</figcaption>
</figure>
</div>
</section>
<section id="companies" class="level3">
<h3 class="anchored" data-anchor-id="companies">Companies</h3>
<p>This report section provides descriptive statistics about companies.</p>
<div id="fig-companies" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-companies-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/0004.svg" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-companies-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;9: Company Statistics
</figcaption>
</figure>
</div>
</section>
<section id="factor-analysis" class="level3">
<h3 class="anchored" data-anchor-id="factor-analysis">Factor Analysis</h3>
<p>This tab presents the results of the causal modeling, comparing the full and reduced models.</p>
<div id="fig-factor-analysis" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-factor-analysis-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/0005.svg" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-factor-analysis-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;10: Factor Analysis
</figcaption>
</figure>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>I hope this overview of the dashboard construction process, from initial data cleaning to final model integration, gives the reader a clear picture of the analytical work involved.</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><p><a href="https://github.com/AxesAccess/DataDNA-Dataset-Challenge-Consumer-Financial-Complaints-Dataset-October-2025" target="_blank">Project Repository</a></p></li>
<li><p><a href="https://app.powerbi.com/view?r=eyJrIjoiYzgwMmRmZTEtZWJiZi00NGIwLWE3YTUtNjJiMDFjZTg2NTU2IiwidCI6ImZmYzg3OTVlLTAxODUtNDg5Yi05ZGE2LTQ5MDI0MTJmMDNhMCIsImMiOjl9" target="_blank">Interactive Dashboard</a></p></li>
</ul>


</section>

 ]]></description>
  <category>BI</category>
  <category>Statistics</category>
  <category>ML</category>
  <category>Visualization</category>
  <category>R</category>
  <guid>https://blog.frequentist.org/posts/20251026-cfpb-dashboard/</guid>
  <pubDate>Sun, 26 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20251026-cfpb-dashboard/0001.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Building a Credit Risk Dashboard with Power BI and R</title>
  <dc:creator>Aleksei Prishchepo</dc:creator>
  <link>https://blog.frequentist.org/posts/20250927-credit-risk-analytics/</link>
  <description><![CDATA[ 





<p>I recently took part in the Credit Risk Analytics Challenge, where the task was to build a dynamic financial risk dashboard using Power BI. Seeing the words “Risk” and “Analytics” in the title, I focused on modeling reality: building a system that could estimate default probabilities, simulate portfolio outcomes, and demonstrate the technical side of credit risk analytics.</p>
<p>In this article, I’ll walk through the ideas behind my approach, the models I built, and how I translated them into an interactive dashboard.</p>
<p>I chose <strong>R</strong> for data processing and modeling due to its efficient handling of statistical modeling for complex datasets with numerous categorical variables. Importantly, I created integrated R scripts that were directly deployed into Power BI report using Power Query with no external data processing — everything in one <strong>.pbix</strong> file which can run <a href="https://app.powerbi.com/view?r=eyJrIjoiNTkzOTc5OTQtYmQxNS00YzlmLWE3OWYtY2JjYWUwNTI3MGEzIiwidCI6ImZmYzg3OTVlLTAxODUtNDg5Yi05ZGE2LTQ5MDI0MTJmMDNhMCIsImMiOjl9" target="_blank">in the Power BI service</a> as well.</p>
<section id="phase-1-data-cleaning-and-engineering" class="level2">
<h2 class="anchored" data-anchor-id="phase-1-data-cleaning-and-engineering">Phase 1: Data Cleaning and Engineering</h2>
<p>The project began with a Credit Risk Dataset composed of <strong>32,581 rows and 29 columns</strong>, split between 12 character (categorical) and 17 numeric variables. My first step, documented in detail in the <a href="01_eda.html" target="_blank">Exploratory Data Analysis of Credit Risk Dataset</a>, was ensuring the data was pristine for modeling.</p>
<section id="variable-selection-and-redundancy" class="level3">
<h3 class="anchored" data-anchor-id="variable-selection-and-redundancy">1. Variable Selection and Redundancy</h3>
<p>I immediately excluded variables that lacked predictive utility or caused issues in regression models. I removed the simple identifier <strong><code>client_ID</code></strong> and the geographical coordinates (<strong><code>city_latitude</code></strong> and <strong><code>city_longitude</code></strong>).</p>
<div id="fig-corrplot" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-corrplot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250927-credit-risk-analytics/fig-corrplot-1.svg" class="img-fluid quarto-figure quarto-figure-center figure-img" width="576">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-corrplot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: The correlation plot shows a strong correlation between some of the numerical variables.
</figcaption>
</figure>
</div>
<p>A key part of cleaning involved addressing redundancy. A correlation check revealed that <strong><code>loan_percent_income</code></strong> and <strong><code>loan_to_income_ratio</code></strong> were nearly perfectly correlated (0.9989417). The decision was made to drop <strong><code>loan_percent_income</code></strong> to eliminate multicollinearity and simplify the feature set.</p>
</section>
<section id="handling-missing-data-and-outliers" class="level3">
<h3 class="anchored" data-anchor-id="handling-missing-data-and-outliers">2. Handling Missing Data and Outliers</h3>
<p>I identified missing values primarily in <strong><code>person_emp_length</code></strong> (97% complete) and <strong><code>loan_int_rate</code></strong> (90% complete). Since no obvious pattern of missingness was found, I employed a simple and robust imputation method: replacing all missing numeric values with the <strong>median</strong> of their respective columns.</p>
<div id="fig-missing-upset" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-missing-upset-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250927-credit-risk-analytics/fig-missing-upset-1.svg" class="img-fluid quarto-figure quarto-figure-center figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-missing-upset-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: The offset plot reveals no noticeable pattern in the missing data.
</figcaption>
</figure>
</div>
<p>Outlier handling required careful judgment. I found extreme values in <strong><code>person_age</code></strong> and <strong><code>person_emp_length</code></strong> that seemed like data entry errors (e.g., ages greater than 100).</p>
<div id="fig-outliers-zoom" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-outliers-zoom-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250927-credit-risk-analytics/fig-outliers-zoom-1.svg" class="img-fluid quarto-figure quarto-figure-center figure-img" width="576">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-outliers-zoom-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: A boxplot displaying numerical variables, with outliers highlighted in red.
</figcaption>
</figure>
</div>
<p>My logic was to replace these anomalies with the median to normalize the distributions without losing valid information. However, extreme values in <strong><code>other_debt</code></strong> and <strong><code>person_income</code></strong> were retained, as they were judged to be genuine observations.</p>
</section>
</section>
<section id="phase-2-building-and-optimizing-predictive-models" class="level2">
<h2 class="anchored" data-anchor-id="phase-2-building-and-optimizing-predictive-models">Phase 2: Building and Optimizing Predictive Models</h2>
<p>The core task was to predict the <strong><code>loan_status</code></strong> variable, where <code>1</code> signifies default and <code>0</code> signifies no default. I explored multiple models, prioritizing predictive power (AUC) and, for deployment, interpretability (Marginal Effects for the dashboard). The process is described in detail in <a href="02_modelling.html" target="_blank">Building Predictive Models for Credit Risk</a>.</p>
<section id="logistic-regression-glm-for-interpretability" class="level3">
<h3 class="anchored" data-anchor-id="logistic-regression-glm-for-interpretability">1. Logistic Regression (GLM) for Interpretability</h3>
<p>I initially built a Logistic Regression model (GLM), which provides easily interpretable coefficient estimates. Due to the nature of the model and to avoid singularity issues, I excluded <strong><code>loan_grade</code></strong> and <strong><code>loan_int_rate</code></strong> (as they are likely set by the bank based on pre-assessment).</p>
<p>For categorical features with high cardinality, such as <code>city</code> and <code>country</code>, I used <strong>one-hot encoding</strong>. I then employed <strong>stepwise selection (MASS::stepAIC)</strong>, an optimization technique that systematically adds or removes variables to minimize the model’s AIC (Akaike Information Criterion), yielding a balance between fit and simplicity.</p>
<p>However, when reviewing the stepwise results, I ensured that if a categorical variable (like <code>person_home_ownership</code>) was implicitly selected via one of its encoded levels (like <code>person_home_ownershipRENT</code>), all levels were included in the final model to maintain structural integrity. The final GLM model using only selected, significant variables (<strong><code>person_home_ownership</code>, <code>person_emp_length</code>, <code>loan_intent</code>, <code>loan_amnt</code>, <code>loan_to_income_ratio</code>, <code>cb_person_default_on_file</code></strong>) showed strong performance, achieving a <strong>Cross-Validated ROC (AUC) of 0.809076</strong>.</p>
<p>The diagnostics also confirmed that the model was well-behaved, with a dispersion parameter less than 1, indicating <strong>no overdispersion</strong>.</p>
</section>
<section id="advanced-modeling-random-forest-and-xgboost" class="level3">
<h3 class="anchored" data-anchor-id="advanced-modeling-random-forest-and-xgboost">2. Advanced Modeling: Random Forest and XGBoost</h3>
<p>To benchmark and potentially surpass the GLM performance, I implemented a <strong>Random Forest</strong> model. Since Random Forests can handle correlated features well, I initially trained this model on the full dataset (excluding only the two variables noted above).</p>
<div id="fig-variable-importance" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-variable-importance-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250927-credit-risk-analytics/rf-variable-importance-1.svg" class="img-fluid quarto-figure quarto-figure-center figure-img" width="576">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-variable-importance-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: The variable importance plot from the Random Forest model trained on the full dataset helps finding the least significant features based on both Accuracy and Gini criteria.
</figcaption>
</figure>
</div>
<p>The initial Random Forest model achieved an AUC of <strong>0.8519</strong>. Using the variable importance metrics (Mean Decrease Accuracy and Mean Decrease Gini), I identified features contributing little to predictive power, such as <code>gender</code>, <code>marital_status</code>, and <code>education_level</code>. After dropping these weak predictors, the simplified Random Forest model improved performance, reaching an AUC of <strong>0.861</strong>.</p>
<p>Finally, I tested <strong>XGBoost (Extreme Gradient Boosting)</strong>, a powerful ensemble technique known for maximizing accuracy. After converting categorical variables to numeric matrices (a necessary step for XGBoost), this model delivered the best result: an AUC of <strong>0.8963</strong>. XGBoost’s feature importance analysis indicated that <strong><code>loan_to_income_ratio</code></strong> and <strong><code>person_income</code></strong> were the most influential predictors, followed by <strong><code>person_home_ownership</code></strong>.</p>
<div id="fig-roc-plot" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-roc-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250927-credit-risk-analytics/xgboost-1.svg" class="img-fluid quarto-figure quarto-figure-center figure-img" width="576">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-roc-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: The ROC plot shows relationship between the true positive rate (sensitivity) and the false positive rate (1 – specificity). The higher the line, the better the model.
</figcaption>
</figure>
</div>
<p>The superior performance of XGBoost led me to select it as the engine for the portfolio simulation component of the dashboard, while the GLM was retained for the interpretable marginal effects calculations.</p>
</section>
</section>
<section id="phase-3-operationalizing-models-via-power-query-r-scripts" class="level2">
<h2 class="anchored" data-anchor-id="phase-3-operationalizing-models-via-power-query-r-scripts">Phase 3: Operationalizing Models via Power Query R Scripts</h2>
<p>A critical technical challenge was integrating these analytical processes so the dashboard could update dynamically. I created R scripts to be embedded directly into Power Query, documented in <a href="03_power_query.html" target="_blank">Scripts for Power Query</a> and <a href="04_synthetic_data.html" target="_blank">Synthetic Data For Simulations</a>.</p>
<section id="calculating-marginal-effects" class="level3">
<h3 class="anchored" data-anchor-id="calculating-marginal-effects">1. Calculating Marginal Effects</h3>
<p>For the <strong>Default Risk Calculator</strong> section of the dashboard, I needed to show how a change in an individual factor affects the probability of default (PD). For this, I used the interpretable Logistic Regression model.</p>
<p>The script calculates <strong>Average Marginal Effects (AMEs)</strong> for standardized (to compare effects) and raw values (for PD calculation). The logic behind AMEs is that they estimate the change in the probability of default (<img src="https://latex.codecogs.com/png.latex?P">) associated with a unit change in a predictor variable (<img src="https://latex.codecogs.com/png.latex?x_j">), calculated as <img src="https://latex.codecogs.com/png.latex?%5Cbeta_j%20%5Ccdot%20p%20%5Ccdot%20(1-p)">, where <img src="https://latex.codecogs.com/png.latex?p"> is the average predicted probability. This output helps users understand the true impact of each driver, not just the raw logistic coefficient (<img src="https://latex.codecogs.com/png.latex?%5Cbeta_j">).</p>
<p>The GLM used for this analysis achieved a Recall of <strong>0.9572</strong> and a Precision of <strong>0.8494</strong>.</p>
</section>
<section id="generating-synthetic-data-for-simulation" class="level3">
<h3 class="anchored" data-anchor-id="generating-synthetic-data-for-simulation">2. Generating Synthetic Data for Simulation</h3>
<p>To implement the <strong>Portfolio Simulation</strong> feature, I needed a massive, realistic dataset capable of reflecting various scenarios. I generated <strong>50,000 synthetic borrowers</strong>.</p>
<p>The generation process involved sampling the original data while ensuring that the proportions of categorical features, such as <code>loan_intent</code> and <code>person_home_ownership</code>, were preserved. To simulate realistic diversity, I added <strong>jitter</strong> (random noise) to numeric features like <code>person_age</code> and <code>loan_amnt</code>. Finally, I applied the pre-trained on the original data XGBoost model to these 50,000 synthetic records to predict a <strong><code>Predicted_PD</code></strong> for each one. This synthetic dataset was also enhanced with categorization bins (e.g., <code>age_bin</code>, <code>income_bin</code>) to enable interactive slicing and scenario testing within the dashboard.</p>
</section>
</section>
<section id="phase-4-building-power-bi-report" class="level2">
<h2 class="anchored" data-anchor-id="phase-4-building-power-bi-report">Phase 4: Building Power BI Report</h2>
<section id="power-query-integration" class="level3">
<h3 class="anchored" data-anchor-id="power-query-integration">1. Power Query Integration</h3>
<p>There are two ways to run R scripts in Power BI: through the R visual or via Power Query. The R visuals are mainly for creating plots and have multiple limitations. Power Query is more versatile as it runs to preprocess data before loading it into the report.</p>
<div id="fig-power-query" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-power-query-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250927-credit-risk-analytics/screenshot-power-query.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="576">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-power-query-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: An R script can be integrated into a Power BI report using Power Query.
</figcaption>
</figure>
</div>
</section>
<section id="dashboard-design" class="level3">
<h3 class="anchored" data-anchor-id="dashboard-design">2. Dashboard Design</h3>
<p>The Power Query R scripts only run when the data is refreshed, making it impossible to adjust parameters interactively. As soon as I couldn’t utilize advanced models such as Gradient Boosting for interactive calculations, in the <strong>Default Risk Calculator</strong> I used coefficients from GLM model trained on the non-standardized data, and converted the sum of the products to a predicted probability of default by applying the inverse-logit function <img src="https://latex.codecogs.com/png.latex?1/(1%20+%20%5Cexp(-(%5Cbeta_0%20+%20%5Cbeta_1x_1%20+...+%5Cbeta_kx_k)))"> in the DAX measure.</p>
<p>In the <strong>Portfolio Simulation</strong> there was no need to interactively calculate PDs, so I created DAX measures and slicers which filter the pre-calculated synthetic dataset, effectively allowing users to simulate different portfolio compositions and see the impact on overall default rates and losses. The underlying XGBoost model metrics demonstrated exceptional classification ability, with a Sensitivity of <strong>0.9831</strong> and a Specificity of <strong>0.7012</strong>.</p>
<p>The final dashboard was structured into three main sections:</p>
<ul>
<li><p><strong>Portfolio Overview:</strong> key statistics such as total borrowers, portfolio value, and overall default rate. The users can use cross-filtering to explore how different segments (e.g., by loan intent) perform.</p></li>
<li><p><strong>Default Risk Calculator:</strong> an interactive tool allowing users to input borrower characteristics and see the predicted probability of default along with marginal effects for each factor.</p></li>
<li><p><strong>Portfolio Simulation:</strong> a scenario analysis tool where users can modify variables, such as the proportions of loans by intent or thresholds based on borrower data like loan-to-income (LTI) ratio, to observe the projected effects on portfolio default rates, losses, and profits.</p></li>
</ul>
<div>

</div>
<div class="quarto-layout-panel" data-layout="[[1,1,1], [1]]">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="September-2025-DataDNA-Credit-Risk-Analytics-Challenge-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Credit Portfolio Overview"><img src="https://blog.frequentist.org/posts/20250927-credit-risk-analytics/September-2025-DataDNA-Credit-Risk-Analytics-Challenge-1.png" class="img-fluid figure-img" alt="Credit Portfolio Overview"></a></p>
<figcaption>Credit Portfolio Overview</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="September-2025-DataDNA-Credit-Risk-Analytics-Challenge-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="Default Risk Calculator"><img src="https://blog.frequentist.org/posts/20250927-credit-risk-analytics/September-2025-DataDNA-Credit-Risk-Analytics-Challenge-2.png" class="img-fluid figure-img" alt="Default Risk Calculator"></a></p>
<figcaption>Default Risk Calculator</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="September-2025-DataDNA-Credit-Risk-Analytics-Challenge-3.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3" title="Portfolio Simulation"><img src="https://blog.frequentist.org/posts/20250927-credit-risk-analytics/September-2025-DataDNA-Credit-Risk-Analytics-Challenge-3.png" class="img-fluid figure-img" alt="Portfolio Simulation"></a></p>
<figcaption>Portfolio Simulation</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This project was a comprehensive exercise in data science, statistical modeling, and business intelligence. By employing R for data processing and modeling, and Power BI for reporting, I created a powerful tool for credit risk analysis.</p>
<section id="key-features" class="level3">
<h3 class="anchored" data-anchor-id="key-features">Key Features</h3>
<ul>
<li><p>All data processing and modeling are done <strong>within Power BI</strong> using embedded R scripts, ensuring a single, portable .pbix file.</p></li>
<li><p>The <strong>Default Risk Calculator</strong> uses a Logistic Regression model for interpretability, allowing users to understand the impact of various factors on default probability.</p></li>
<li><p>The <strong>Portfolio Simulation</strong> utilizes a high-performing XGBoost model to provide realistic scenario analysis based on synthetic data.</p></li>
</ul>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><p><a href="https://datadna.onyxdata.co.uk/challenges/september-2025-datadna-credit-risk-analytics-challenge/" target="_blank">September 2025 DataDNA - Credit Risk Analytics Challenge - Onyx Data</a> — challenge web-page.</p></li>
<li><p><a href="https://github.com/AxesAccess/DataDNA-Challenge-Credit-Risk-Analytics-September-2025" target="_blank">DataDNA Challenge Credit Risk Analytics September 2025</a> — GitHub repository.</p></li>
<li><p><a href="https://app.powerbi.com/view?r=eyJrIjoiNTkzOTc5OTQtYmQxNS00YzlmLWE3OWYtY2JjYWUwNTI3MGEzIiwidCI6ImZmYzg3OTVlLTAxODUtNDg5Yi05ZGE2LTQ5MDI0MTJmMDNhMCIsImMiOjl9" target="_blank">Interactive dashboard running in Power BI service</a>.</p></li>
</ul>


</section>

 ]]></description>
  <category>BI</category>
  <category>Statistics</category>
  <category>ML</category>
  <category>Visualization</category>
  <category>R</category>
  <guid>https://blog.frequentist.org/posts/20250927-credit-risk-analytics/</guid>
  <pubDate>Sat, 27 Sep 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250927-credit-risk-analytics/image.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Time-Series Clustering with R’s dtwclust Package</title>
  <dc:creator>Aleksei Prishchepo</dc:creator>
  <link>https://blog.frequentist.org/posts/20250827-time-series-clustering/</link>
  <description><![CDATA[ 





<p>This article is a practical guide for time-series clustering using the <code>dtwclust</code> package. The <code>dtwclust</code> package in R (see <a href="https://cran.r-project.org/web/packages/dtwclust/vignettes/dtwclust.pdf" target="_blank">vignette</a>) provides a powerful and flexible framework for time-series clustering, allowing you to implement and compare various algorithms, particularly those leveraging Dynamic Time Warping (DTW). This showcase will guide you through a practical example of time-series clustering using <code>dtwclust</code>, including data preparation, clustering execution, visualization, and evaluation.</p>
<section id="what-is-dynamic-time-warping-dtw" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="what-is-dynamic-time-warping-dtw"><span class="header-section-number">1</span> What is Dynamic Time Warping (DTW)</h2>
<p><a href="https://en.wikipedia.org/wiki/Dynamic_time_warping" target="_blank">Dynamic Time Warping (DTW)</a> is a prominent distance measure used in shape-based time-series clustering. Unlike Euclidean distance, which compares points at the same time index, DTW allows for “warping” or stretching/compressing the time axis of one series to find an optimal alignment with another. This enables it to accurately measure similarity between time-series that may vary in speed, length, or have phase shifts, but exhibit similar overall shapes.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250827-time-series-clustering/dtw-alignment.svg" class="img-fluid figure-img" style="width:5in"></p>
<figcaption>Sample alignment performed by the DTW algorithm between two series. The dashed blue lines exemplify how some points are mapped to each other, which shows how they can be warped in time. Note that the vertical position of each series was artificially altered for visualization. Credits: Alexis Sardá-Espinosa</figcaption>
</figure>
</div>
</section>
<section id="data-preparation" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="data-preparation"><span class="header-section-number">2</span> Data Preparation</h2>
<p>We will use daily closing prices of various cryptocurrencies from the dYdX exchange. The data will be fetched using the <code>httr2</code> package.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>dYdX Exchange</strong> is a decentralized finance (DeFi) platform that allows users to trade perpetual derivatives, margin, and spot crypto assets without a centralized intermediary.</p>
</div>
</div>
<p>Let’s start by fetching the list of available perpetual markets from the dYdX API. We will then filter for popular cryptocurrencies and retrieve their daily closing prices.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(httr2)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tibble)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb1-5"></span>
<span id="cb1-6">base_url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://indexer.dydx.trade/v4"</span></span>
<span id="cb1-7">full_url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(base_url, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/perpetualMarkets"</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9">req <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">request</span>(full_url) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">req_headers</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Accept =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"application/json"</span>)</span>
<span id="cb1-11"></span>
<span id="cb1-12">resp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">req_perform</span>(req)</span>
<span id="cb1-13">body <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resp_body_json</span>(resp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simplifyVector =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-14"></span>
<span id="cb1-15">markets <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(body<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>markets) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span>
<span id="cb1-16">markets <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> markets <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">volume24H =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(volume24H))</span>
<span id="cb1-17">markets <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> markets <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(volume24H)) </span>
<span id="cb1-18"></span>
<span id="cb1-19">markets <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(ticker, oraclePrice, priceChange24H, volume24H) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 5 × 4
  ticker   oraclePrice  priceChange24H  volume24H
  &lt;chr&gt;    &lt;chr&gt;        &lt;chr&gt;               &lt;dbl&gt;
1 ETH-USD  4585.44      -10.614039     150676770.
2 BTC-USD  112855.34    2015.74841      43359731.
3 SOL-USD  212.08       7.72            18677423.
4 XRP-USD  2.9988498849 -0.0133507301    3201248.
5 LINK-USD 23.7155      -0.694490999     2551624.</code></pre>
</div>
</div>
<p>Let’s take 30 the most traded markets.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">tickers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(body<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>markets[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>], <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(market) {</span>
<span id="cb3-2">  market<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticker</span>
<span id="cb3-3">})</span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove MATIC-USD due to missing data</span></span>
<span id="cb3-5">tickers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tickers[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>tickers <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MATIC-USD"</span>)]</span>
<span id="cb3-6">tickers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tickers <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array</span>()</span></code></pre></div>
</div>
<p>Below are are helper functions to convert date-times to the required format and to fetch daily candle data from the dYdX API. For some reason at the time of writing this, the API ignores the <code>fromIso</code> parameter, so we will filter the data after fetching it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">to_iso8601_ns_utc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(datetime) {</span>
<span id="cb4-2">  datetime_utc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(datetime, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTC"</span>)</span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(datetime_utc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-%dT%H:%M:%OS9Z"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">usetz =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb4-4">}</span>
<span id="cb4-5"></span>
<span id="cb4-6">get_dydx_daily_candles <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(</span>
<span id="cb4-7">    market,</span>
<span id="cb4-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from_iso =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb4-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to_iso =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb4-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limit =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>) {</span>
<span id="cb4-11">  base_url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://indexer.dydx.trade/v4"</span></span>
<span id="cb4-12">  full_url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(base_url, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/candles/perpetualMarkets/"</span>, market)</span>
<span id="cb4-13"></span>
<span id="cb4-14">  req <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">request</span>(full_url) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">req_headers</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Accept =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"application/json"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">req_url_query</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resolution =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1DAY"</span>)</span>
<span id="cb4-17"></span>
<span id="cb4-18">  from_iso <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(from_iso)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to_iso8601_ns_utc</span>(from_iso) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb4-19">  to_iso <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(to_iso)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to_iso8601_ns_utc</span>(to_iso) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb4-20"></span>
<span id="cb4-21">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(from_iso)) req <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> req <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">req_url_query</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fromIso =</span> from_iso)</span>
<span id="cb4-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(to_iso)) req <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> req <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">req_url_query</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">toIso =</span> to_iso)</span>
<span id="cb4-23">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(limit)) req <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> req <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">req_url_query</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limit =</span> limit)</span>
<span id="cb4-24"></span>
<span id="cb4-25">  resp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">req_perform</span>(req)</span>
<span id="cb4-26">  body <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resp_body_json</span>(resp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simplifyVector =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-27"></span>
<span id="cb4-28">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> body<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>candles</span>
<span id="cb4-29">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb4-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startedAt =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(startedAt,</span>
<span id="cb4-31">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-%dT%H:%M:%OSZ"</span>,</span>
<span id="cb4-32">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTC"</span></span>
<span id="cb4-33">    ),</span>
<span id="cb4-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">open =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(open),</span>
<span id="cb4-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(high),</span>
<span id="cb4-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(low),</span>
<span id="cb4-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">close =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(close)</span>
<span id="cb4-38">  )</span>
<span id="cb4-39">  df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span>
<span id="cb4-40">}</span>
<span id="cb4-41"></span>
<span id="cb4-42"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_dydx_daily_candles</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BTC-USD"</span>,</span>
<span id="cb4-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from_iso =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2025-01-01T00:00:00Z"</span>,</span>
<span id="cb4-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to_iso =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2025-08-26T00:00:00Z"</span></span>
<span id="cb4-45">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 13
  startedAt           ticker  resolution    low   high   open  close
  &lt;dttm&gt;              &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;
1 2025-08-28 00:00:00 BTC-USD 1DAY       110841 113400 111243 112888
2 2025-08-27 00:00:00 BTC-USD 1DAY       110395 112674 111809 111260
3 2025-08-26 00:00:00 BTC-USD 1DAY       108713 112397 110124 111797
4 2025-08-25 00:00:00 BTC-USD 1DAY       109296 113679 113537 110132
5 2025-08-24 00:00:00 BTC-USD 1DAY       110550 115662 115405 113539
6 2025-08-23 00:00:00 BTC-USD 1DAY       114569 117024 116948 115406
# ℹ 6 more variables: baseTokenVolume &lt;chr&gt;, usdVolume &lt;chr&gt;, trades &lt;int&gt;,
#   startingOpenInterest &lt;chr&gt;, orderbookMidPriceOpen &lt;chr&gt;,
#   orderbookMidPriceClose &lt;chr&gt;</code></pre>
</div>
</div>
<p>Now, we will fetch daily closing prices for our selection of popular cryptocurrencies.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">cryptos_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(tickers, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(coin) {</span>
<span id="cb6-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cat("Fetching data for:", coin, "\n")</span></span>
<span id="cb6-3">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_dydx_daily_candles</span>(coin,</span>
<span id="cb6-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from_iso =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2025-01-01T00:00:00Z"</span>,</span>
<span id="cb6-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to_iso =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2025-08-26T00:00:00Z"</span></span>
<span id="cb6-6">  )</span>
<span id="cb6-7">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(startedAt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2025-01-01"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTC"</span>))</span>
<span id="cb6-8">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ds =</span> startedAt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> close) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(ds)</span>
<span id="cb6-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># z-score normalization</span></span>
<span id="cb6-10">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> (y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb6-11">  df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coin <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toupper</span>(coin) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-USD"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, .)</span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(df)</span>
<span id="cb6-13">})</span>
<span id="cb6-14"></span>
<span id="cb6-15">cryptos_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(cryptos_list)</span></code></pre></div>
</div>
<p>Next, we will reshape the data into a wide format suitable for clustering, where each row represents a cryptocurrency and each column represents a daily closing price.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">cryptos_list_wide <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cryptos_list  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> coin, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(ds) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ds) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span>  </span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.list</span>()</span></code></pre></div>
</div>
</section>
<section id="performing-hierarchical-clustering" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="performing-hierarchical-clustering"><span class="header-section-number">3</span> Performing Hierarchical Clustering</h2>
<p>We will perform hierarchical clustering using the DTW distance and the “ward.D2” agglomeration method. Hierarchical clustering builds a hierarchy of groups without requiring a pre-specified number of clusters initially, and the process is deterministic.</p>
<ul>
<li><p><code>k = 4</code> specifies the desired number of clusters.</p></li>
<li><p><code>type = "hierarchical"</code> sets the clustering algorithm type.</p></li>
<li><p><code>distance = "dtw"</code> uses Dynamic Time Warping distance.</p></li>
<li><p><code>seed = 42</code> for reproducibility of random initializations (if applicable).</p></li>
<li><p><code>control = hierarchical_control(method = "ward.D2")</code> specifies the linkage method.</p></li>
<li><p><code>args = tsclust_args(dist = list(window.size = 7))</code> sets DTW window constraint.</p></li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dtwclust)</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform hierarchical clustering</span></span>
<span id="cb8-4">hc_4_ward <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tsclust</span>(cryptos_list_wide,</span>
<span id="cb8-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb8-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hierarchical"</span>,</span>
<span id="cb8-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distance =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dtw"</span>,</span>
<span id="cb8-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>,</span>
<span id="cb8-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hierarchical_control</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ward.D2"</span>),</span>
<span id="cb8-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">args =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tsclust_args</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">window.size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb8-11">)</span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View the clustering summary</span></span>
<span id="cb8-14">hc_4_ward</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>hierarchical clustering with 4 clusters
Using dtw distance
Using PAM (Hierarchical) centroids
Using method ward.D2 

Time required for analysis:
   user  system elapsed 
  2.958   0.047   3.005 

Cluster sizes with average intra-cluster distance:

  size  av_dist
1    4 87.52806
2    2 80.73321
3   12 66.03449
4   12 51.73463</code></pre>
</div>
</div>
<p>The output provides details about the clustering, including the distance measure, centroid method, linkage method, and cluster sizes with their average intra-cluster distances.</p>
</section>
<section id="accessing-clustering-results" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="accessing-clustering-results"><span class="header-section-number">4</span> Accessing Clustering Results</h2>
<p>The <code>tsclust()</code> function returns an S4 object of class <code>TSClusters</code>. You can access its slots, such as the cluster assignments, using the @ operator.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View cluster assignments for each time series</span></span>
<span id="cb10-2">hc_4_ward<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cluster</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> BTC  ETH LINK  CRV  SOL  ADA AVAX  FIL  LTC DOGE ATOM  DOT  UNI  BCH  TRX NEAR 
   1    2    3    2    3    3    3    4    3    3    4    4    3    1    1    4 
 MKR  XLM  ETC COMP  WLD  APE  APT  ARB BLUR  LDO   OP PEPE  SEI SHIB 
   1    3    3    4    4    4    4    3    4    3    4    4    3    4 </code></pre>
</div>
</div>
</section>
<section id="visualizing-clustering-results" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="visualizing-clustering-results"><span class="header-section-number">5</span> Visualizing Clustering Results</h2>
<p>The <code>plot()</code> method for <code>TSClusters</code> objects offers various visualization types.</p>
<section id="dendrogram" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="dendrogram"><span class="header-section-number">5.1</span> Dendrogram</h3>
<p>A dendrogram visually represents the hierarchy of clusters.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust margins for better plot</span></span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hc_4_ward,</span>
<span id="cb12-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sub =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb12-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hierarchical Clustering Dendrogram (DTW, Ward.D2)"</span></span>
<span id="cb12-5">)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-dendrogram-2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-dendrogram-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250827-time-series-clustering/index_files/figure-html/fig-dendrogram-2-1.svg" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-dendrogram-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Dendrogram of hierarchical clustering using DTW distance and Ward.D2 linkage.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="series-and-centroids" class="level3" data-number="5.2">
<h3 data-number="5.2" class="anchored" data-anchor-id="series-and-centroids"><span class="header-section-number">5.2</span> Series and Centroids</h3>
<p>Visualize the time series grouped by cluster, along with their representative prototypes (centroids). By default, prototypes for hierarchical clustering with PAM centroids are actual series from the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hc_4_ward, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sc"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sc = series + centroids</span></span></code></pre></div>
<div class="cell-output-display">
<div id="fig-series-centroids-2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-series-centroids-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250827-time-series-clustering/index_files/figure-html/fig-series-centroids-2-1.svg" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-series-centroids-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Time series clustered with their centroids using DTW distance and Ward.D2 linkage.
</figcaption>
</figure>
</div>
</div>
</div>
<p>You can also plot a specific centroid, and even customize its appearance.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hc_4_ward,</span>
<span id="cb14-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"centroids"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clus =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb14-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb14-4">)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-specific-centroid" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-specific-centroid-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250827-time-series-clustering/index_files/figure-html/fig-specific-centroid-1.svg" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-specific-centroid-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Specific centroid (cluster 1).
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="comparing-multiple-clustering-solutions-and-evaluation" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="comparing-multiple-clustering-solutions-and-evaluation"><span class="header-section-number">6</span> Comparing Multiple Clustering Solutions and Evaluation</h2>
<p>In practice, choosing the optimal number of clusters (<code>k</code>) and other parameters is crucial. <code>dtwclust</code> allows you to test multiple configurations simultaneously and evaluate them using Cluster Validity Indices (CVIs).</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>Cluster Validity Indices</strong> are quantitative metrics used to assess the quality and “purity” of clustering results. Since clustering is often an unsupervised process, CVIs provide an objective way to evaluate performance, especially when comparing different clustering algorithms or configurations.</p>
</div>
</div>
<p>To accelerate the process, especially when testing many combinations, parallelization is highly recommended. <code>dtwclust</code> integrates with the <code>foreach</code> and <code>doParallel</code> packages for this purpose.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(bigmemory)</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(doParallel)</span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a range of k values and agglomeration methods to test</span></span>
<span id="cb15-5">k_values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb15-6">linkage_methods <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ward.D2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"average"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"single"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"complete"</span>)</span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize a parallel backend</span></span>
<span id="cb15-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use detectCores() - 1 to leave one core free</span></span>
<span id="cb15-10">num_cores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detectCores</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb15-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (num_cores <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) num_cores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure at least one core is used</span></span>
<span id="cb15-12"></span>
<span id="cb15-13">cl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">makeCluster</span>(num_cores)</span>
<span id="cb15-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">registerDoParallel</span>(cl)</span>
<span id="cb15-15"></span>
<span id="cb15-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform multiple hierarchical clusterings in parallel</span></span>
<span id="cb15-17">hc_par <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tsclust</span>(cryptos_list_wide,</span>
<span id="cb15-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> k_values,</span>
<span id="cb15-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hierarchical"</span>,</span>
<span id="cb15-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distance =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dtw"</span>,</span>
<span id="cb15-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>,</span>
<span id="cb15-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hierarchical_control</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> linkage_methods),</span>
<span id="cb15-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">args =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tsclust_args</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">window.size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)),</span>
<span id="cb15-24">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb15-25">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Calculating distance matrix...
Performing hierarchical clustering...
Extracting centroids...

    Elapsed time is 13.749 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stop the parallel cluster and revert to sequential computation</span></span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopCluster</span>(cl)</span>
<span id="cb17-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">registerDoSEQ</span>()</span></code></pre></div>
</div>
<section id="evaluate-the-results-using-internal-cvis" class="level3" data-number="6.1">
<h3 data-number="6.1" class="anchored" data-anchor-id="evaluate-the-results-using-internal-cvis"><span class="header-section-number">6.1</span> Evaluate the results using internal CVIs</h3>
<p>We’ll use <a href="https://en.wikipedia.org/wiki/Silhouette_(clustering)" target="_blank">Silhouette (Sil)</a>, <a href="https://en.wikipedia.org/wiki/Dunn_index" target="_blank">Dunn (D)</a>, and <a href="https://en.wikipedia.org/wiki/Calinski%E2%80%93Harabasz_index" target="_blank">Calinski-Harabasz (CH)</a> indices. Higher values generally indicate better clustering for these indices.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">cvi_results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(hc_par, cvi, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sil"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CH"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(rbind, .)</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the configuration that maximizes each CVI</span></span>
<span id="cb18-5">optimal_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(cvi_results, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">MARGIN =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> which.max)</span></code></pre></div>
</div>
<section id="display-cvi-results-and-optimal-configurations" class="level4" data-number="6.1.1">
<h4 data-number="6.1.1" class="anchored" data-anchor-id="display-cvi-results-and-optimal-configurations"><span class="header-section-number">6.1.1</span> Display CVI results and optimal configurations</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(cvi_results)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Sil         D        CH
 [1,] 0.3463459 0.1355412 21.828708
 [2,] 0.5144728 0.3810831  9.673635
 [3,] 0.1888799 0.2514864  2.709671
 [4,] 0.3369159 0.2050711 18.657689
 [5,] 0.2989078 0.1745498 13.778813
 [6,] 0.3477774 0.3091404  8.406351
 [7,] 0.3689743 0.3451739  6.165031
 [8,] 0.3290618 0.2245861 14.349598
 [9,] 0.2838572 0.2257579 12.063620
[10,] 0.3054947 0.3091404  6.059278
[11,] 0.3441495 0.4739975  5.473468
[12,] 0.2518630 0.2031676 11.466633
[13,] 0.2731625 0.2257579 10.492873
[14,] 0.3439047 0.3098938 10.261007
[15,] 0.2602655 0.4210699  7.605540
[16,] 0.2297632 0.2559787  9.802860</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(optimal_indices)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Sil   D  CH 
  2  11   1 </code></pre>
</div>
</div>
</section>
<section id="retrieve-the-best-clustering-based-on-silhouette-index" class="level4" data-number="6.1.2">
<h4 data-number="6.1.2" class="anchored" data-anchor-id="retrieve-the-best-clustering-based-on-silhouette-index"><span class="header-section-number">6.1.2</span> Retrieve the best clustering based on Silhouette index</h4>
<p>Let’s extract the clustering that achieved the highest Silhouette score.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">best_clustering_sil <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> hc_par[[optimal_indices[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sil"</span>]]]</span>
<span id="cb23-2">best_clustering_sil</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>hierarchical clustering with 3 clusters
Using dtw distance
Using PAM (Hierarchical) centroids
Using method average 

Time required for analysis:
   user  system elapsed 
  1.364   0.122  13.749 

Cluster sizes with average intra-cluster distance:

  size  av_dist
1    4 80.06529
2   25 84.14893
3    1  0.00000</code></pre>
</div>
</div>
</section>
<section id="retrieve-the-best-clustering-based-on-dunn-index" class="level4" data-number="6.1.3">
<h4 data-number="6.1.3" class="anchored" data-anchor-id="retrieve-the-best-clustering-based-on-dunn-index"><span class="header-section-number">6.1.3</span> Retrieve the best clustering based on Dunn index</h4>
<p>Similarly, we can extract the clustering that achieved the highest Dunn score.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">best_clustering_dunn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> hc_par[[optimal_indices[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>]]]</span>
<span id="cb25-2">best_clustering_dunn</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>hierarchical clustering with 5 clusters
Using dtw distance
Using PAM (Hierarchical) centroids
Using method single 

Time required for analysis:
   user  system elapsed 
  1.364   0.122  13.749 

Cluster sizes with average intra-cluster distance:

  size  av_dist
1    3 62.58062
2    1  0.00000
3   24 78.78400
4    1  0.00000
5    1  0.00000</code></pre>
</div>
</div>
</section>
<section id="retrieve-the-best-clustering-based-on-calinski-harabasz-index" class="level4" data-number="6.1.4">
<h4 data-number="6.1.4" class="anchored" data-anchor-id="retrieve-the-best-clustering-based-on-calinski-harabasz-index"><span class="header-section-number">6.1.4</span> Retrieve the best clustering based on Calinski-Harabasz index</h4>
<p>Finally, we can extract the clustering that achieved the highest Calinski-Harabasz score.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">best_clustering_ch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> hc_par[[optimal_indices[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CH"</span>]]]</span>
<span id="cb27-2">best_clustering_ch</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>hierarchical clustering with 3 clusters
Using dtw distance
Using PAM (Hierarchical) centroids
Using method ward.D2 

Time required for analysis:
   user  system elapsed 
  1.364   0.122  13.749 

Cluster sizes with average intra-cluster distance:

  size   av_dist
1    6 106.59632
2   12  66.03449
3   12  51.73463</code></pre>
</div>
</div>
<p>This output helps you objectively compare different clustering outcomes and select the most suitable solution for your data based on various validity metrics.</p>
</section>
</section>
</section>
<section id="performing-clustering-with-optimal-configuration" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="performing-clustering-with-optimal-configuration"><span class="header-section-number">7</span> Performing Clustering with Optimal Configuration</h2>
<p>Let’s take a look at the clustering configuration that achieved the maximum results according to the Calinski-Harabasz index.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">hc_3_ward <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tsclust</span>(cryptos_list_wide,</span>
<span id="cb29-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb29-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hierarchical"</span>,</span>
<span id="cb29-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distance =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dtw"</span>,</span>
<span id="cb29-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>,</span>
<span id="cb29-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hierarchical_control</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ward.D2"</span>),</span>
<span id="cb29-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">args =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tsclust_args</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">window.size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb29-8">)</span>
<span id="cb29-9"></span>
<span id="cb29-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View the clustering summary</span></span>
<span id="cb29-11">hc_3_ward</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>hierarchical clustering with 3 clusters
Using dtw distance
Using PAM (Hierarchical) centroids
Using method ward.D2 

Time required for analysis:
   user  system elapsed 
  2.910   0.106   3.017 

Cluster sizes with average intra-cluster distance:

  size   av_dist
1    6 106.59632
2   12  66.03449
3   12  51.73463</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View cluster assignments for each time series</span></span>
<span id="cb31-2">hc_3_ward<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cluster</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> BTC  ETH LINK  CRV  SOL  ADA AVAX  FIL  LTC DOGE ATOM  DOT  UNI  BCH  TRX NEAR 
   1    1    2    1    2    2    2    3    2    2    3    3    2    1    1    3 
 MKR  XLM  ETC COMP  WLD  APE  APT  ARB BLUR  LDO   OP PEPE  SEI SHIB 
   1    2    2    3    3    3    3    2    3    2    3    3    2    3 </code></pre>
</div>
</div>
<p>Plot the dendrogram for this clustering.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the dendrogram</span></span>
<span id="cb33-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb33-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hc_3_ward,</span>
<span id="cb33-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sub =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb33-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hierarchical Clustering Dendrogram (DTW, Ward.D2)"</span></span>
<span id="cb33-6">)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250827-time-series-clustering/index_files/figure-html/plot-dendrogram-1.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>The line plots of the time series grouped by cluster show very distinct patterns.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot time series and their centroids</span></span>
<span id="cb34-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hc_3_ward, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sc"</span>) </span></code></pre></div>
<div class="cell-output-display">
<div id="fig-series-centroids-optimal" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-series-centroids-optimal-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250827-time-series-clustering/index_files/figure-html/fig-series-centroids-optimal-1.svg" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-series-centroids-optimal-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Time series clustered using DTW distance and Ward.D2 linkage.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="conclusion" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="conclusion"><span class="header-section-number">8</span> Conclusion</h2>
<p><code>dtwclust</code> provides a modular and efficient framework for time-series clustering in R, implementing various algorithms (especially DTW-related ones) and allowing for customization and comparison. It serves as a strong starting point for time-series clustering tasks.</p>


</section>

 ]]></description>
  <category>Time-Series</category>
  <category>Clustering</category>
  <category>R</category>
  <guid>https://blog.frequentist.org/posts/20250827-time-series-clustering/</guid>
  <pubDate>Wed, 27 Aug 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250827-time-series-clustering/image.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Minimum Detectable Effect (MDE) Calculation</title>
  <dc:creator>Aleksei Prishchepo</dc:creator>
  <link>https://blog.frequentist.org/posts/20250807-mde/</link>
  <description><![CDATA[ 





<p>Minimum Detectable Effect (MDE) is defined as the smallest difference between a control and a test group that your A/B test can reliably identify as statistically significant. It’s a critical concept because it helps in determining the necessary sample size for an experiment and in interpreting the results.</p>
<section id="how-mde-is-calculated-in-experimental-design" class="level2">
<h2 class="anchored" data-anchor-id="how-mde-is-calculated-in-experimental-design">How MDE is calculated in experimental design</h2>
<p>The MDE calculation depends on several key parameters:</p>
<ul>
<li>Sample size (<img src="https://latex.codecogs.com/png.latex?n"> for the test group, <img src="https://latex.codecogs.com/png.latex?m"> for the control group).</li>
<li>Significance level (alpha, <img src="https://latex.codecogs.com/png.latex?%5Calpha">): This is the probability of a&nbsp;Type I error (falsely rejecting the null hypothesis), typically set at 0.05.</li>
<li>Statistical power (1-beta, <img src="https://latex.codecogs.com/png.latex?1-%5Cbeta">): This is the probability of correctly detecting an effect when one truly exists, commonly set at 0.8 (or 80%).</li>
<li>Variance (<img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2">) of the metric being measured in the population, often estimated from historical data.</li>
<li>Ratio of control to test group sizes (<img src="https://latex.codecogs.com/png.latex?k%20=%20m/n">).</li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250807-mde/index_files/figure-html/plot-normal-distribution-1.svg" class="img-fluid figure-img"></p>
<figcaption>Control and test distributions with critical values, alpha, beta, and power shaded.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="calculating-mde-for-a-given-sample-size" class="level2">
<h2 class="anchored" data-anchor-id="calculating-mde-for-a-given-sample-size">Calculating MDE for a given sample size</h2>
<p>If you have a fixed number of users (n) or a defined sample size (m or n), you can determine the smallest effect (e) that your test can reliably detect:</p>
<p><img src="https://latex.codecogs.com/png.latex?e%20%3E%20%5Csqrt%7B%5Cdfrac%7B(z_%7B1-%5Calpha/2%7D%20+%20z_%7B1-%5Cbeta%7D)%5E2%20(1%20+%20k)%5Csigma%5E2%7D%7Bm%7D%7D"></p>
<p><img src="https://latex.codecogs.com/png.latex?z_%7B1-%5Calpha/2%7D"> and <img src="https://latex.codecogs.com/png.latex?z_%7B1-%5Cbeta%7D"> are the Z-scores corresponding to the desired significance level and&nbsp;power, respectively.</p>
<p><img src="https://latex.codecogs.com/png.latex?k=%5Cfrac%7Bm%7D%7Bn%7D"> is the ratio of the control group size to the test group size (e.g., <img src="https://latex.codecogs.com/png.latex?k=1"> for a 1:1 split).</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2"> is the estimated variance of the metric.</p>
<p><img src="https://latex.codecogs.com/png.latex?e"> is the minimal effect.</p>
<section id="how-to-calculate-mde-in-r" class="level3">
<h3 class="anchored" data-anchor-id="how-to-calculate-mde-in-r">How to calculate MDE in R</h3>
<p>For instance, with 100,000 total users, a sigma of 500, a k-ratio of 2, alpha = 0.05, and beta = 0.2, the minimum detectable effect would be approximately 9.397 units, which translates to a 1.88% change from the mean of 500.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to calculate MDE</span></span>
<span id="cb1-2">calculate_mde <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb1-3">  z_alpha <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> alpha <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-4">  z_beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> beta)</span>
<span id="cb1-5">  m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (k <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-6">  e <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>((z_alpha <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z_beta)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sigma<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> m)</span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(e)</span>
<span id="cb1-8">}</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calculate_mde</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 9.396802</code></pre>
</div>
</div>
</section>
<section id="interactive-mde-calculator" class="level3">
<h3 class="anchored" data-anchor-id="interactive-mde-calculator">Interactive MDE calculator</h3>
<p>Below is an interactive calculator for finding the MDE based on your sample size, alpha, beta, sigma, and k-ratio. Adjust the parameters to see how they affect the MDE.</p>
<iframe src="https://a13ks3i.shinyapps.io/mde-calculator/" width="100%" height="600" title="MDE Calculator">
</iframe>
</section>
</section>
<section id="finding-the-required-sample-size-for-a-given-mde" class="level2">
<h2 class="anchored" data-anchor-id="finding-the-required-sample-size-for-a-given-mde">Finding the required sample size for a given MDE</h2>
<p>The formula used to determine the necessary sample size (e.g., for the control group, <img src="https://latex.codecogs.com/png.latex?m">) to detect a&nbsp;specific MDE (<img src="https://latex.codecogs.com/png.latex?e">) is:</p>
<p><img src="https://latex.codecogs.com/png.latex?m%20%3E%20%5Cdfrac%7B(z_%7B1-%5Calpha/2%7D%20+%20z_%7B1-%5Cbeta%7D)%5E2%20(1%20+%20k)%5Csigma%5E2%7D%7Be%5E2%7D"></p>
<section id="how-to-calculate-sample-size-in-r" class="level3">
<h3 class="anchored" data-anchor-id="how-to-calculate-sample-size-in-r">How to calculate sample size in R</h3>
<p>Example: if a monetary metric has a mean of 500 and a standard deviation (sigma) of 500, and you want to detect a 2% effect (MDE = 10) with alpha = 0.05 and beta = 0.2, and a test-to-control ratio of k = 2, the required sample size would be approximately 29,434 users in the test group and 58,867 users in the control group, totaling 88,301 users.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to calculate required sample size</span></span>
<span id="cb3-2">calculate_sample_size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(e, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb3-3">  z_alpha <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> alpha <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-4">  z_beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> beta)</span>
<span id="cb3-5">  m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (z_alpha <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z_beta)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sigma<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(m))</span>
<span id="cb3-7">}</span>
<span id="cb3-8">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calculate_sample_size</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">e =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-9">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-10">total_users <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(m, n, total_users)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 58867 29434 88301</code></pre>
</div>
</div>
</section>
<section id="interactive-sample-size-calculator" class="level3">
<h3 class="anchored" data-anchor-id="interactive-sample-size-calculator">Interactive sample size calculator</h3>
<p>Below is an interactive calculator that allows you to input your desired MDE, alpha, beta, sigma, and k-ratio to compute the required sample size. Adjust the parameters to see how they affect the sample size needed for your A/B test.</p>
<iframe src="https://a13ks3i.shinyapps.io/sample-size-calculator/" width="100%" height="600" title="Sample Size Calculator">
</iframe>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>A/B testing is a powerful tool for product development, and understanding the concept of Minimal Detectable Effect (MDE) is crucial for designing effective experiments. By calculating the required sample size or MDE, you can ensure that your tests are statistically sound and capable of providing meaningful insights into user behavior and product performance.</p>


</section>

 ]]></description>
  <category>A/B Testing</category>
  <category>Product</category>
  <category>Statistics</category>
  <category>R</category>
  <guid>https://blog.frequentist.org/posts/20250807-mde/</guid>
  <pubDate>Thu, 07 Aug 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250807-mde/image.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>A/B Testing: Concepts and Techniques</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20250729-ab-testing/</link>
  <description><![CDATA[ 





<p>This article is a short recap of intensive course <a href="https://shad.yandex.ru/abweek" target="_blank">A/B Week by YSDA</a>, providing an overview of A/B testing, focusing on its key components, common metrics, types of errors, and advanced techniques like CUPED. It also discusses the challenges of peeking at results, the problem of multiple testing, and how to validate statistical criteria using A/A tests.</p>
<section id="what-is-ab-testing-and-what-are-its-key-components" class="level2">
<h2 class="anchored" data-anchor-id="what-is-ab-testing-and-what-are-its-key-components">1. What is A/B testing and what are its key components?</h2>
<p>A/B testing is a method used to determine the impact of implemented changes on a product by isolating external factors. It involves dividing users into two groups: a control group (A) that experiences no changes, and a test group (B) that is exposed to a new feature.</p>
<p>The key components of an A/B test include:</p>
<ul>
<li><p><strong>Infrastructure:</strong> A robust system is required to conduct and manage experiments.</p></li>
<li><p><strong>Customer Base:</strong> A large user base is necessary to ensure statistically significant results.</p></li>
<li><p><strong>Time:</strong> Sufficient time is needed for the experiment to run and for the data to be analyzed.</p></li>
<li><p><strong>Metrics:</strong> Carefully selected metrics are used to measure the effect of the changes. These can be “value metrics” (e.g., total cost of successful trips, number of unique completed orders) or “ratio metrics” (e.g., acceptance rate, completed rate, tips as a share of GMV).</p></li>
<li><p><strong>User Aggregation:</strong> Data is typically aggregated per user rather than per event to ensure independent observations, which is crucial for valid statistical analysis. Comparing raw event-level data can introduce dependencies that invalidate standard statistical tests.</p></li>
</ul>
<div id="5a082831" class="cell" data-execution_count="3">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250729-ab-testing/index_files/figure-html/cell-4-output-1.svg" class="img-fluid figure-img"></p>
<figcaption>User aggregation vs Event-level data</figcaption>
</figure>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The figures in this article were created using code from the <a href="https://github.com/dakhakimova/YSDA_ABweek" target="_blank">dakhakimova/YSDA_ABweek</a> repository.</p>
</div>
</div>
</section>
<section id="what-are-the-common-types-of-metrics-used-in-ab-testing-and-how-are-they-handled" class="level2">
<h2 class="anchored" data-anchor-id="what-are-the-common-types-of-metrics-used-in-ab-testing-and-how-are-they-handled">2. What are the common types of metrics used in A/B testing and how are they handled?</h2>
<p>Metrics in A/B testing are broadly categorized into:</p>
<ul>
<li><p><strong>Value Metrics:</strong> These represent absolute values or sums, such as Gross Merchandise Value (GMV), total number of impressions, or total dwell time. For these metrics, the average (mean) is commonly compared between test and control groups.</p></li>
<li><p><strong>Ratio Metrics:</strong> These represent a proportion or ratio, such as Acceptance Rate (accepted offers to seen offers) or CTR (number of clicks to the number of views). These are more complex because they involve both a numerator and a denominator, and the simple t-test for means may not be appropriate due to the inherent correlation between the numerator and denominator within each user.</p></li>
</ul>
<p>For ratio metrics, several advanced methods are used:</p>
<ul>
<li><p><strong>Delta Method:</strong> This statistical technique estimates the variance of a ratio by using the variances and covariance of its numerator and denominator. It approximates the distribution of the ratio using a <a href="https://en.wikipedia.org/wiki/Taylor_series" target="_blank">Taylor series</a> expansion.</p></li>
<li><p><strong>Linearization:</strong> This method transforms the ratio into a linear approximation, allowing the use of standard t-tests on the transformed data. There are different types of linearization, typically involving a reference value (e.g., the control group’s ratio) to define the linear terms.</p>
<div class="callout callout-style-default callout-note callout-titled" title="More information">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
More information
</div>
</div>
<div class="callout-body-container callout-body">
<p><a href="https://www.researchgate.net/publication/322969314_Consistent_Transformation_of_Ratio_Metrics_for_Efficient_Online_Controlled_Experiments" target="_blank">Consistent Transformation of Ratio Metrics for Efficient Online Controlled Experiments</a> (<a href="http://dx.doi.org/10.1145/3159652.3159699" target="_blank">DOI:10.1145/3159652.3159699</a>).</p>
</div>
</div></li>
<li><p><strong>Bucketization (Bucketing):</strong> Instead of analyzing individual user data, users (or their aggregated events) are grouped into “buckets”. The ratio is then calculated for each bucket, and a t-test is performed on the bucket-level ratios. This can help normalize the distribution and reduce the impact of outliers but may lead to loss of information or reduced power with too few buckets.</p></li>
</ul>
<div id="5deb04e4" class="cell" data-execution_count="4">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250729-ab-testing/index_files/figure-html/cell-5-output-1.svg" class="img-fluid figure-img"></p>
<figcaption>Bucketing vs Uniform (without effect)</figcaption>
</figure>
</div>
</div>
</div>
<ul>
<li><strong>Bootstrap:</strong> A non-parametric resampling technique that involves repeatedly drawing samples with replacement from the observed data to create an empirical distribution of the statistic of interest (e.g., the difference in ratios). This distribution is then used to construct confidence intervals and calculate p-values, making it robust to distributional assumptions. Poisson bootstrap is a variant suitable for large datasets, allowing parallelization.</li>
</ul>
</section>
<section id="what-are-type-i-and-type-ii-errors-in-ab-testing-and-how-do-they-relate-to-mde" class="level2">
<h2 class="anchored" data-anchor-id="what-are-type-i-and-type-ii-errors-in-ab-testing-and-how-do-they-relate-to-mde">3. What are Type I and Type II errors in A/B testing, and how do they relate to MDE?</h2>
<p>In hypothesis testing:</p>
<ul>
<li><p><strong>Null Hypothesis (H0):</strong> States there is no effect or difference between groups (e.g., the new feature has no impact).</p></li>
<li><p><strong>Alternative Hypothesis (H1):</strong> States there is an effect or difference.</p></li>
</ul>
<p>The two types of errors are:</p>
<ul>
<li><p><strong>Type I Error</strong> <img src="https://latex.codecogs.com/png.latex?(%5Calpha)">: Rejecting the null hypothesis when it is actually true. This is also known as the “level of significance” and represents the probability of falsely concluding that an effect exists when it doesn’t.</p></li>
<li><p><strong>Type II Error</strong> <img src="https://latex.codecogs.com/png.latex?(%5Cbeta)">: Failing to reject the null hypothesis when the alternative hypothesis is true. This means failing to detect an effect that actually exists.</p></li>
</ul>
<p>There’s an inverse relationship between Type I and Type II errors: decreasing alpha (making it harder to find an effect) will increase beta (making it harder to detect a real effect), and vice-versa.</p>
<p><strong>Minimal Detectable Effect (MDE)</strong> is the smallest true difference between the control and test groups that an A/B test can reliably detect as statistically significant, given predefined values for:</p>
<ul>
<li><p><strong>Sample Size</strong> <img src="https://latex.codecogs.com/png.latex?(n)">: The number of users in each group.</p></li>
<li><p><strong>Significance Level</strong> <img src="https://latex.codecogs.com/png.latex?(%5Calpha)">: The probability of a Type I error (e.g., 0.05).</p></li>
<li><p><strong>Statistical Power</strong> <img src="https://latex.codecogs.com/png.latex?(1%20-%20%5Cbeta)">: The probability of correctly detecting a true effect (e.g., 0.8 or 80%).</p></li>
</ul>
<p>MDE is crucial for experiment design, helping to estimate the required sample size and understand the sensitivity of the test to detect meaningful changes.</p>
<div id="f64bc6a8" class="cell" data-execution_count="5">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250729-ab-testing/index_files/figure-html/cell-6-output-1.svg" class="img-fluid figure-img"></p>
<figcaption>Dependency of MDE on <img src="https://latex.codecogs.com/png.latex?m"></figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="how-can-the-validity-of-a-statistical-criterion-be-checked-using-aa-tests" class="level2">
<h2 class="anchored" data-anchor-id="how-can-the-validity-of-a-statistical-criterion-be-checked-using-aa-tests">4. How can the validity of a statistical criterion be checked using A/A tests?</h2>
<p>A/A testing is a method where two identical groups are compared to each other, with no actual changes introduced. Since no effect is expected, an A/A test helps validate the statistical criterion used in A/B tests.</p>
<p>The primary principle for validation is that if the null hypothesis is true (i.e., there is no actual difference between the groups), the p-values obtained from the statistical tests should be uniformly distributed between 0 and 1.</p>
<p>Validation steps involve:</p>
<ol type="1">
<li><p><strong>Synthetic Data Generation:</strong> Create simulated datasets for test and control groups where no effect is present.</p></li>
<li><p><strong>Repeated Testing:</strong> Run the statistical criterion (e.g., t-test) many times (e.g., 10,000 times) on these synthetic A/A datasets.</p></li>
</ol>
<ul>
<li><p><strong>P-value Distribution Analysis: Histogram of P-values:</strong> If the p-values are uniformly distributed, the histogram should appear flat. Any peaks or skews indicate issues with the criterion.</p></li>
<li><p><strong>QQ-plot (Quantile-Quantile Plot):</strong> This plot compares the observed p-values’ quantiles against the theoretical quantiles of a uniform distribution. Points should fall approximately along a 45-degree line. Deviations suggest the p-values are not uniformly distributed.</p></li>
<li><p><strong>Empirical Cumulative Distribution Function (ECDF):</strong> Plotting the ECDF of the p-values against the theoretical CDF of a uniform distribution (which is a straight line from 0,0 to 1,1). Similar to QQ-plots, a close fit indicates uniformity.</p></li>
<li><p><a href="https://en.wikipedia.org/wiki/Kolmogorov%E2%80%93Smirnov_test" target="_blank"><strong>Kolmogorov-Smirnov (KS) Test</strong></a><strong>:</strong> A non-parametric statistical test that formally assesses whether the observed p-values significantly differ from a uniform distribution. A high p-value from the KS test (e.g., &gt; 0.05) would suggest uniformity.</p></li>
</ul>
<ol type="1">
<li><strong>Confidence Interval for Type I Error:</strong> Calculate a confidence interval for the proportion of times the null hypothesis was incorrectly rejected (Type I error rate). This observed error rate should ideally be close to the chosen alpha level (e.g., 0.05) and fall within its confidence interval.</li>
</ol>
<p>If any of these checks fail, it indicates that the chosen statistical criterion is not valid for the given data and experiment setup, even before considering any actual effects.</p>
<div id="6b9a35c3" class="cell" data-execution_count="6">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250729-ab-testing/index_files/figure-html/cell-7-output-1.svg" class="img-fluid figure-img"></p>
<figcaption>User aggregation vs Uniform (A/A test without effect)</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="sec-5.-what-are-the-challenges-with-peeking-at-ab-test-results-and-how-can-they-be-addressed" class="level2">
<h2 class="anchored" data-anchor-id="sec-5.-what-are-the-challenges-with-peeking-at-ab-test-results-and-how-can-they-be-addressed">5. What are the challenges with “peeking” at A/B test results and how can they be addressed?</h2>
<p>“Peeking” or “p-hacking” refers to the practice of repeatedly checking the results of an A/B test as data accumulates and stopping the experiment as soon as a statistically significant result is observed.</p>
<p><strong>Challenges:</strong></p>
<ul>
<li><p><strong>Increased Type I Error (False Positives):</strong> Every time you “peek” at the data and run a statistical test, you increase the probability of encountering a false positive (Type I error). If you test multiple times, the cumulative probability of making at least one Type I error across all checks dramatically inflates beyond the chosen alpha level (e.g., 0.05). This leads to unreliable and irreproducible findings.</p></li>
<li><p><strong>Misinterpretation of P-values:</strong> The p-value’s interpretation relies on the assumption of a single, pre-specified test. Continuous monitoring violates this.</p></li>
</ul>
<p><strong>Solutions to Address Peeking:</strong></p>
<ul>
<li><p><strong>Group Sequential Testing (GST):</strong> This approach allows for multiple interim analyses (peeks) while controlling the overall Family-Wise Error Rate (FWER). It achieves this by adjusting the significance thresholds for each sequential look. Common methods for setting these boundaries include:</p>
<ul>
<li><p><strong>O’Brien-Fleming (OBF) Boundaries:</strong> These set very stringent (hard-to-cross) thresholds at early stages of the experiment, which gradually become less strict as more data accumulates, approaching the traditional alpha level at the final analysis.</p></li>
<li><p><strong>Pocock Boundaries:</strong> These set constant (but higher than traditional alpha) thresholds for all interim analyses.</p></li>
<li><p><strong>Fixed Sample Size:</strong> Pre-determining the sample size and running the experiment until that size is reached, then performing a single statistical test. This avoids the temptation to peek and minimizes Type I error inflation.</p></li>
<li><p><strong>Sequential Testing with Alpha Spending Functions:</strong> More flexible methods that distribute the total Type I error rate across multiple analyses, allowing for adaptive monitoring of experiments.</p></li>
</ul></li>
</ul>
<div id="25ea53cc" class="cell" data-execution_count="7">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250729-ab-testing/index_files/figure-html/cell-8-output-1.svg" class="img-fluid figure-img"></p>
<figcaption>GST: dynamic thresholds for z-statistic</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="what-is-the-problem-of-multiple-testing-and-how-can-it-be-mitigated" class="level2">
<h2 class="anchored" data-anchor-id="what-is-the-problem-of-multiple-testing-and-how-can-it-be-mitigated">6. What is the problem of multiple testing and how can it be mitigated?</h2>
<p>The “multiple testing problem” arises when multiple statistical hypotheses are tested simultaneously. If you perform m independent A/B tests, each with a Type I error rate (alpha) of, say, 0.05, the probability of making at least one false positive (Family-Wise Error Rate, FWER) increases significantly with m.</p>
<p><strong>How FWER grows:</strong> For m independent tests, the probability of <em>not</em> making a Type I error in any single test is <img src="https://latex.codecogs.com/png.latex?1%20-%20%5Calpha">. Therefore, the probability of <em>not</em> making any Type I error across all <img src="https://latex.codecogs.com/png.latex?m"> tests is <img src="https://latex.codecogs.com/png.latex?(1%20-%20%5Calpha)%5Em">. Consequently, the FWER (probability of at least one Type I error) is <img src="https://latex.codecogs.com/png.latex?1%20-%20(1%20-%20%5Calpha)%5Em">. This value quickly exceeds the nominal <img src="https://latex.codecogs.com/png.latex?%5Calpha"> as <img src="https://latex.codecogs.com/png.latex?m"> increases.</p>
<p><strong>Mitigation Strategies:</strong> To control the FWER when performing multiple comparisons, adjusted p-value thresholds or methods are used:</p>
<ul>
<li><p><strong>Bonferroni Correction:</strong> A very conservative method that divides the original alpha by the number of tests <img src="https://latex.codecogs.com/png.latex?%5Calpha_%7Badjusted%7D%20=%20%5Calpha/m">. While effective at controlling FWER, it often severely reduces statistical power, making it harder to detect true effects.</p></li>
<li><p><strong>Šidák Correction:</strong> A slightly less conservative method than Bonferroni, calculating the adjusted alpha as <img src="https://latex.codecogs.com/png.latex?%5Calpha_%7Badjusted%7D%20=%201%20-%20(1%20-%5Calpha)%5E%7B%5Cfrac%7B%5Calpha%7D%7Bm%7D%7D">.</p></li>
<li><p><strong>Holm-Bonferroni Method (Holm):</strong> A stepwise procedure that is less conservative than Bonferroni while still controlling FWER. It sorts p-values and adjusts them iteratively.</p></li>
<li><p><strong>False Discovery Rate (FDR) Control (e.g., Benjamini-Hochberg):</strong> Instead of controlling FWER (the probability of <em>any</em> false positive), FDR methods control the expected proportion of false positives among <em>all</em> rejected hypotheses. This approach is less stringent than FWER control, leading to higher statistical power, and is often preferred in exploratory research or when many tests are performed.</p></li>
</ul>
<p>Choosing the right correction depends on the specific goals: if avoiding <em>any</em> false positive is paramount (e.g., clinical trials), FWER control is chosen. If a higher number of true positives is desired even with some false positives (e.g., feature development), FDR control might be more appropriate.</p>
</section>
<section id="what-is-cuped-and-how-does-it-improve-ab-test-sensitivity" class="level2">
<h2 class="anchored" data-anchor-id="what-is-cuped-and-how-does-it-improve-ab-test-sensitivity">7. What is CUPED and how does it improve A/B test sensitivity?</h2>
<p><strong>CUPED (Controlled-experiment Using Pre-Experiment Data)</strong> is a technique designed to improve the sensitivity (power) of A/B tests by reducing the variance of the metrics being analyzed. It achieves this by leveraging pre-experiment data (covariates) for each user.</p>
<p><strong>How it works:</strong> CUPED works by creating an adjusted metric (<img src="https://latex.codecogs.com/png.latex?Z_i">) for each user (<img src="https://latex.codecogs.com/png.latex?i">): <img src="https://latex.codecogs.com/png.latex?Z_i%20=%20Y_i%20-%20%CE%B8X_i%20+%20%CE%B8E%5BX%5D">, where:</p>
<ul>
<li><p><img src="https://latex.codecogs.com/png.latex?Y_i"> is the observed metric value for user <img src="https://latex.codecogs.com/png.latex?i"> in the experiment.</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?X_i"> is a pre-experiment covariate for user <img src="https://latex.codecogs.com/png.latex?i"> (e.g., the same metric’s value during a period <em>before</em> the experiment began).</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?E%5BX%5D"> is the expected value of the covariate across the entire population (or both groups combined).</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Ctheta"> is a coefficient calculated as <img src="https://latex.codecogs.com/png.latex?Cov(X,%20Y)%20/%20Var(X)">, which maximizes variance reduction.</p></li>
</ul>
<p>By using this adjusted metric <img src="https://latex.codecogs.com/png.latex?Z_i">, the variance of the difference between the test and control groups <img src="https://latex.codecogs.com/png.latex?Var(%5Cbar%20Z)"> can be significantly reduced, specifically by a factor of <img src="https://latex.codecogs.com/png.latex?(1%20-%20r%5E2)">, where <img src="https://latex.codecogs.com/png.latex?r"> is the Pearson correlation coefficient between <img src="https://latex.codecogs.com/png.latex?X"> and <img src="https://latex.codecogs.com/png.latex?Y">. A higher correlation between pre-experiment and in-experiment metrics leads to a greater reduction in variance.</p>
<div class="callout callout-style-default callout-note callout-titled" title="More information">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
More information
</div>
</div>
<div class="callout-body-container callout-body">
<p><a href="https://www.researchgate.net/publication/237838291_Improving_the_Sensitivity_of_Online_Controlled_Experiments_by_Utilizing_Pre-Experiment_Data" target="_blank">Improving the Sensitivity of Online Controlled Experiments by Utilizing Pre-Experiment Data</a> (<a href="http://dx.doi.org/10.1145/2433396.2433413" target="_blank">DOI:10.1145/2433396.2433413</a>).</p>
</div>
</div>
<p><strong>Benefits:</strong></p>
<ul>
<li><strong>Increased Sensitivity/Power:</strong> By reducing variance, CUPED allows the A/B test to detect smaller effects (lower MDE) with the same sample size, or to achieve the same power with a smaller sample size (thus saving time and resources).</li>
</ul>
<div id="10c3c234" class="cell" data-execution_count="8">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250729-ab-testing/index_files/figure-html/cell-9-output-1.svg" class="img-fluid figure-img"></p>
<figcaption>CUPED vs T-test power comparison</figcaption>
</figure>
</div>
</div>
</div>
<ul>
<li><strong>Applicability:</strong> It’s particularly useful when pre-experiment data is available and correlates well with the outcome metric.</li>
</ul>
<p><strong>Limitations/Considerations:</strong></p>
<ul>
<li><p>Requires pre-experiment data for all users in both groups.</p></li>
<li><p>Needs to handle new users or those with no pre-experiment data (e.g., by imputing the mean).</p></li>
</ul>
</section>
<section id="what-are-the-key-differences-between-frequentist-and-bayesian-ab-testing-approaches" class="level2">
<h2 class="anchored" data-anchor-id="what-are-the-key-differences-between-frequentist-and-bayesian-ab-testing-approaches">8. What are the key differences between frequentist and Bayesian A/B testing approaches?</h2>
<p><strong>Frequentist (Classical) A/B Testing:</strong></p>
<ul>
<li><p><strong>Core Idea:</strong> Focuses on the probability of observing the data given a specific hypothesis (typically the null hypothesis H0). It uses p-values to determine statistical significance.</p></li>
<li><p><strong>Hypothesis:</strong> Formulates a null hypothesis (e.g., no difference between groups) and an alternative hypothesis H1.</p></li>
<li><p><strong>P-value:</strong> The probability of obtaining results as extreme as, or more extreme than, the observed results, assuming the null hypothesis is true.</p></li>
<li><p><strong>Decision Rule:</strong> Compare the p-value to a pre-defined significance level (alpha, e.g., 0.05). If p-value &lt; alpha, reject H0.</p></li>
<li><p><strong>Interpretation:</strong> “There is a X% chance of observing this data if there’s no effect.” Does NOT directly state the probability that H1 is true.</p></li>
<li><p><strong>Stopping Rules:</strong> Requires pre-defined sample sizes or sequential testing methods to control Type I error. Peeking is a major concern.</p></li>
</ul>
<p><strong>Bayesian A/B Testing:</strong></p>
<ul>
<li><p><strong>Core Idea:</strong> Updates beliefs about parameters (e.g., conversion rates, average revenue) based on observed data. It uses probability distributions to represent knowledge.</p></li>
<li><p><strong>Prior Distribution:</strong> Represents initial beliefs about the parameter before the experiment (e.g., prior knowledge that average conversion is around 5%).</p></li>
<li><p><strong>Likelihood:</strong> The probability of observing the data given different possible parameter values.</p></li>
<li><p><strong>Posterior Distribution:</strong> The updated probability distribution of the parameter after incorporating the observed data. Calculated as <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BPosterior%7D%20%5Cpropto%20%5Ctext%7BLikelihood%7D%20%5Ctimes%20%5Ctext%7BPrior%7D">.</p></li>
<li><p><strong>Decision Rule:</strong> Directly calculates the probability that one variant is better than another (e.g., P(Variant B &gt; Variant A)). A common threshold is 95% or 98%.</p></li>
<li><p><strong>Interpretation:</strong> “There is a X% probability that Variant B is better than Variant A.” This is more intuitive for business stakeholders.</p></li>
<li><p><strong>Stopping Rules:</strong> Allows for continuous monitoring and stopping tests early without inflating Type I error rates, as the posterior distribution continuously updates with new data.</p></li>
</ul>
<div id="1297a292" class="cell" data-execution_count="9">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250729-ab-testing/index_files/figure-html/cell-10-output-1.svg" class="img-fluid figure-img"></p>
<figcaption>Bayesian A/B testing simulation</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250729-ab-testing/index_files/figure-html/cell-10-output-2.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p><strong>Key Advantages of Bayesian:</strong></p>
<ul>
<li><p><strong>Intuitive Interpretation:</strong> Directly provides probabilities of hypotheses (e.g., “B is better than A”).</p></li>
<li><p><strong>Flexibility:</strong> Easily incorporates prior knowledge, handles unequal sample sizes, and can be used for complex models.</p></li>
<li><p><strong>No Peeking Problem:</strong> Interim analyses are natural, as beliefs are simply updated.</p></li>
</ul>
<p><strong>Key Disadvantages of Bayesian:</strong></p>
<ul>
<li><p><strong>Computational Cost:</strong> Can be more intensive for complex models (though straightforward for common A/B test scenarios).</p></li>
<li><p><strong>Prior Selection:</strong> Requires choosing a prior distribution, which can sometimes be subjective, though with large datasets, the choice of a “non-informative” prior typically has minimal impact.</p></li>
</ul>


</section>

 ]]></description>
  <category>A/B Testing</category>
  <category>Product</category>
  <category>Statistics</category>
  <guid>https://blog.frequentist.org/posts/20250729-ab-testing/</guid>
  <pubDate>Tue, 29 Jul 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250729-ab-testing/image.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Animation of Spatial Data</title>
  <dc:creator>Aleksei Prishchepo</dc:creator>
  <link>https://blog.frequentist.org/posts/20250704-animation/</link>
  <description><![CDATA[ 





<p>This is an example of how to create an animated visualization of spatial data using R. The data is sourced from the German Weather Service (Deutscher Wetterdienst, DWD) and includes cloud coverage and density observations from various weather stations across Germany.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="banner.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Image credits: Author"><img src="https://blog.frequentist.org/posts/20250704-animation/banner.png" class="img-fluid figure-img" alt="Image credits: Author"></a></p>
<figcaption>Image credits: Author</figcaption>
</figure>
</div>
<section id="load-the-stations-data" class="level2">
<h2 class="anchored" data-anchor-id="load-the-stations-data">Load the stations data</h2>
<p>Here we will download the stations data from the DWD website. The data contains information about weather stations, including their IDs, names, locations, and the time period they were active.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://opendata.dwd.de/climate_environment/CDC/observations_germany/climate/subdaily/cloudiness/historical/"</span></span>
<span id="cb1-2">stations_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N_Terminwerte_Beschreibung_Stationen.txt"</span></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)) {</span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.create</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb1-5">}</span>
<span id="cb1-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/"</span>, stations_file))) {</span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">download.file</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(url, stations_file), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20250704-animation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, stations_file), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>)</span>
<span id="cb1-8">}</span></code></pre></div>
</div>
<p>Let’s read the stations data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">col_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb2-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STATIONS_ID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"von_datum"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bis_datum"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stationshoehe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat"</span>,</span>
<span id="cb2-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stationsname"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bundesland"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Abgabe"</span></span>
<span id="cb2-4">)</span>
<span id="cb2-5"></span>
<span id="cb2-6">stations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.fwf</span>(</span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(</span>
<span id="cb2-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20250704-animation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>,</span>
<span id="cb2-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N_Terminwerte_Beschreibung_Stationen.txt"</span></span>
<span id="cb2-10">  ),</span>
<span id="cb2-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">widths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">skip =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb2-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fileEncoding =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Windows-1252"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> col_names</span>
<span id="cb2-13">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.table</span>()</span>
<span id="cb2-14"></span>
<span id="cb2-15"></span>
<span id="cb2-16">stations[, von_datum <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_trim</span>(von_datum), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y%m%d"</span>)]</span>
<span id="cb2-17">stations[, bis_datum <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_trim</span>(bis_datum), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y%m%d"</span>)]</span>
<span id="cb2-18">stations[, lon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(lon)]</span>
<span id="cb2-19">stations[, lat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(lat)]</span></code></pre></div>
</div>
</section>
<section id="read-the-links-to-the-data-files" class="level2">
<h2 class="anchored" data-anchor-id="read-the-links-to-the-data-files">Read the links to the data files</h2>
<p>We will read the HTML content of the DWD website to extract the links to the cloudiness data files. The links will be filtered to include only those that contain the term “terminwerte”.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">page_content <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_html</span>(url)</span>
<span id="cb3-2"></span>
<span id="cb3-3">links <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> page_content <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_nodes</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"href"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7">links <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> links[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(links) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(links, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"terminwerte"</span>)]</span>
<span id="cb3-8">links <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> links <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>()</span>
<span id="cb3-9">links <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                                            links
                                           &lt;char&gt;
1: terminwerte_N_00001_19370101_19860630_hist.zip
2: terminwerte_N_00003_18910101_20110331_hist.zip
3: terminwerte_N_00044_19710301_20111231_hist.zip
4: terminwerte_N_00052_19730101_20011231_hist.zip
5: terminwerte_N_00061_19750701_19780831_hist.zip
6: terminwerte_N_00070_19730601_19860930_hist.zip</code></pre>
</div>
</div>
<p>Extract the station IDs from the links. The station IDs are 5-digit numbers that are part of the file names.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">links[, STATIONS_ID <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_extract</span>(links, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[0-9]{5}"</span>)]</span>
<span id="cb5-2">links[, STATIONS_ID <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(STATIONS_ID)]</span></code></pre></div>
</div>
</section>
<section id="filter-the-stations-data" class="level2">
<h2 class="anchored" data-anchor-id="filter-the-stations-data">Filter the stations data</h2>
<p>We will download only those stations data that were active during the specified time period.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">stations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stations[von_datum <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-12-01"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> bis_datum <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2025-01-01"</span>]</span>
<span id="cb6-2">links <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> links[stations, on <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STATIONS_ID"</span>]</span></code></pre></div>
</div>
</section>
<section id="download-and-process-the-data-files" class="level2">
<h2 class="anchored" data-anchor-id="download-and-process-the-data-files">Download and process the data files</h2>
<p>In this section, we will download the data files from the DWD website and process them to extract the cloud coverage and density observations. The data will be stored in a DuckDB database which is useful if we need to reuse the data later without downloading and parsing it again.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check if the files exist</span></span>
<span id="cb7-2">files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb7-3">files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> files[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(files, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"produkt_n_termin"</span>)]</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(files) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb7-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (link <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> links<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>links) {</span>
<span id="cb7-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">download.file</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(url, link), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(</span>
<span id="cb7-8">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20250704-animation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, link</span>
<span id="cb7-9">    ), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>)</span>
<span id="cb7-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unzip</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/"</span>, link), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">exdir =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb7-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlink</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/Metadaten*"</span>)</span>
<span id="cb7-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlink</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/*.html"</span>)</span>
<span id="cb7-13">  }</span>
<span id="cb7-14">}</span>
<span id="cb7-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlink</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/*.zip"</span>)</span></code></pre></div>
</div>
<p>Here is where parsing is done.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>(),</span>
<span id="cb8-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dbdir =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20250704-animation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"db"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weather.duckdb"</span>)</span>
<span id="cb8-3">)</span>
<span id="cb8-4">tables <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbGetQuery</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SHOW ALL TABLES;"</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>]</span>
<span id="cb8-5">start_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-12-01"</span></span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cloudiness"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> tables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name)) {</span>
<span id="cb8-8">  files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb8-9">  files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> files[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(files, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"produkt_n_termin"</span>)]</span>
<span id="cb8-10"></span>
<span id="cb8-11">  observations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>()</span>
<span id="cb8-12"></span>
<span id="cb8-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (file <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> files) {</span>
<span id="cb8-14">    temp_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(file, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.table</span>()</span>
<span id="cb8-15">    temp_data[, MESS_DATUM <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_trim</span>(MESS_DATUM), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y%m%d"</span>)]</span>
<span id="cb8-16">    temp_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp_data[MESS_DATUM <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> start_date]</span>
<span id="cb8-17">    observations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(</span>
<span id="cb8-18">      observations,</span>
<span id="cb8-19">      temp_data</span>
<span id="cb8-20">    )</span>
<span id="cb8-21">  }</span>
<span id="cb8-22"></span>
<span id="cb8-23">  observations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> observations[N_TER <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>]</span>
<span id="cb8-24">  observations[, CD_TER <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(CD_TER <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, CD_TER)]</span>
<span id="cb8-25"></span>
<span id="cb8-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"db"</span>)) {</span>
<span id="cb8-27">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.create</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"db"</span>)</span>
<span id="cb8-28">  }</span>
<span id="cb8-29"></span>
<span id="cb8-30">  con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>(),</span>
<span id="cb8-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dbdir =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(</span>
<span id="cb8-32">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20250704-animation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"db"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weather.duckdb"</span></span>
<span id="cb8-33">    )</span>
<span id="cb8-34">  )</span>
<span id="cb8-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbWriteTable</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cloudiness"</span>, observations, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">overwrite =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb8-36">}</span>
<span id="cb8-37"></span>
<span id="cb8-38">observations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbGetQuery</span>(</span>
<span id="cb8-39">  con,</span>
<span id="cb8-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELECT * FROM cloudiness WHERE MESS_DATUM &gt;= '%s'"</span>, start_date)</span>
<span id="cb8-41">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.table</span>()</span>
<span id="cb8-43"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(con)</span>
<span id="cb8-44"></span>
<span id="cb8-45">observations <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 231,108
Columns: 6
$ STATIONS_ID &lt;int&gt; 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024…
$ MESS_DATUM  &lt;date&gt; 2023-12-01, 2023-12-01, 2023-12-01, 2023-12-02, 2023-12-0…
$ QN_4        &lt;int&gt; 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9…
$ N_TER       &lt;int&gt; 4, 5, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 7, 8, 8, 8, 7, 8, 8, 8…
$ CD_TER      &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…
$ eor         &lt;chr&gt; "eor", "eor", "eor", "eor", "eor", "eor", "eor", "eor", "e…</code></pre>
</div>
</div>
<p>As the data contains multiple observations per day for each station, we will aggregate the data to get the average cloud coverage and density per day per station.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">observations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> observations[, .(</span>
<span id="cb10-2">  .N,</span>
<span id="cb10-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cloud_coverage =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(N_TER, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb10-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cloud_density =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(CD_TER, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb10-5">), by <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STATIONS_ID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MESS_DATUM"</span>)]</span></code></pre></div>
</div>
<p>Let’s plot the cloud coverage for a specific station as a time series to visualize the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">observations[MESS_DATUM <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-01"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> STATIONS_ID <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">433</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> MESS_DATUM, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> cloud_coverage)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rollapply</span>(cloud_coverage,</span>
<span id="cb11-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> mean, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">partial =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-6">  )), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cloud Coverage"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_gray</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250704-animation/index_files/figure-html/plot-cloud-coverage-1.png" class="img-fluid figure-img" width="2100"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="add-h3-addresses" class="level2">
<h2 class="anchored" data-anchor-id="add-h3-addresses">Add H3 addresses</h2>
<p>To visualize the data on a map, we will convert the latitude and longitude coordinates of the stations into H3 addresses. H3 is a geospatial indexing system that allows us to represent geographic locations as hexagonal cells.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stations[, .(lon, lat)] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>()</span>
<span id="cb12-2"></span>
<span id="cb12-3">points[, h3_address <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">point_to_cell</span>(points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">res =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)]</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Assuming columns 1 and 2 contain x, y coordinates in EPSG:4326</code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">stations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stations[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb14-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STATIONS_ID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"von_datum"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bis_datum"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stationshoehe"</span>,</span>
<span id="cb14-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stationsname"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bundesland"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Abgabe"</span></span>
<span id="cb14-4">)]</span>
<span id="cb14-5"></span>
<span id="cb14-6">stations[points, on <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> .(lon, lat), h3_address <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> h3_address]</span>
<span id="cb14-7"></span>
<span id="cb14-8">stations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stations[, geometry <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cell_to_polygon</span>(h3_address, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simple =</span> F)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span></code></pre></div>
</div>
<p>Load the boundaries of Germany to use as a background for the map.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">boundaries <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geoboundaries</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Germany"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">release_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gbOpen"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adm_lvl =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adm1"</span>)</span></code></pre></div>
</div>
<p>Join the stations data with the observations data to have the geometry of the stations in the observations data. Calculate mean for each H3 address and drop duplicates.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">observations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> observations[stations, on <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STATIONS_ID"</span>]</span>
<span id="cb16-2">observations[, coud_coverage <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(cloud_coverage, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), by <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> h3_address]</span>
<span id="cb16-3">observations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> observations <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"h3_address"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MESS_DATUM"</span>))</span></code></pre></div>
</div>
</section>
<section id="create-animations-of-cloud-coverage-in-germany" class="level2">
<h2 class="anchored" data-anchor-id="create-animations-of-cloud-coverage-in-germany">Create animations of cloud coverage in Germany</h2>
<p>In the following section, we will create animations of cloud coverage in Germany using the observations data in 2024. This code creates a series of maps showing the average cloud coverage for each day in 2024, with a rolling average of 7 days to smooth the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">min_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> observations[, MESS_DATUM] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb17-2">max_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> observations[, MESS_DATUM] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb17-3"></span>
<span id="cb17-4">min_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(min_date, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-01"</span>)))</span>
<span id="cb17-5">max_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(max_date, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-12-31"</span>)))</span>
<span id="cb17-6"></span>
<span id="cb17-7">max_coverage <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> observations[(MESS_DATUM <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> min_date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb17-8">  (MESS_DATUM <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> max_date), cloud_coverage] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb17-9">min_coverage <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> observations[(MESS_DATUM <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> min_date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb17-10">  (MESS_DATUM <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> max_date), cloud_coverage] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb17-11"></span>
<span id="cb17-12">table_dates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(min_date <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, max_date <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb17-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.table</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb17-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">MESS_DATUM =</span> V1)</span>
<span id="cb17-15">observations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> table_dates[observations, on <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MESS_DATUM"</span>]</span>
<span id="cb17-16"></span>
<span id="cb17-17">observations[, cloud_coverage_r7 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rollapply</span>(cloud_coverage,</span>
<span id="cb17-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> mean, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">partial =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb17-19">),</span>
<span id="cb17-20">by <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> STATIONS_ID</span>
<span id="cb17-21">]</span>
<span id="cb17-22"></span>
<span id="cb17-23">dates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(min_date, max_date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb17-24"></span>
<span id="cb17-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures"</span>)) {</span>
<span id="cb17-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.create</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures"</span>)</span>
<span id="cb17-27">}</span>
<span id="cb17-28"></span>
<span id="cb17-29"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (d <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(dates)) {</span>
<span id="cb17-30">  p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> cloud_coverage_r7),</span>
<span id="cb17-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> observations[MESS_DATUM <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> d] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>()</span>
<span id="cb17-32">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-33">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> boundaries, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray78"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray54"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-34">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geometry =</span> geometry), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray78"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-35">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_whitebox_c</span>(</span>
<span id="cb17-36">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deep"</span>,</span>
<span id="cb17-37">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb17-38">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(min_coverage, max_coverage)</span>
<span id="cb17-39">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-40">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">default_crs =</span> sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4326</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-41">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-42">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb17-43">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb17-44">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>),</span>
<span id="cb17-45">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.width =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>),</span>
<span id="cb17-46">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb17-47">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb17-48">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb17-49">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb17-50">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray35"</span>)</span>
<span id="cb17-51">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-52">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cloud Coverage"</span>)</span>
<span id="cb17-53"></span>
<span id="cb17-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(</span>
<span id="cb17-55">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(</span>
<span id="cb17-56">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20250704-animation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures"</span>,</span>
<span id="cb17-57">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cloudiness-"</span>, d, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".png"</span>)</span>
<span id="cb17-58">    ),</span>
<span id="cb17-59">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot =</span> p,</span>
<span id="cb17-60">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"px"</span>,</span>
<span id="cb17-61">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>,</span>
<span id="cb17-62">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>,</span>
<span id="cb17-63">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span></span>
<span id="cb17-64">  )</span>
<span id="cb17-65">}</span></code></pre></div>
</div>
</section>
<section id="create-a-gif-animation" class="level2">
<h2 class="anchored" data-anchor-id="create-a-gif-animation">Create a GIF animation</h2>
<p>Finally, we will create a GIF animation from the generated PNG files. The GIF will show the cloud coverage in Germany over the course of 2024, with each frame representing a day.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">png_files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(</span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20250704-animation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures"</span>),</span>
<span id="cb18-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cloudiness.+</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span></span>
<span id="cb18-4">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb18-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb18-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>()</span>
<span id="cb18-7"></span>
<span id="cb18-8">gif_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(</span>
<span id="cb18-9">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20250704-animation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"animation-cloudiness.gif"</span></span>
<span id="cb18-10">)</span>
<span id="cb18-11"></span>
<span id="cb18-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gifski</span>(png_files, gif_file, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">delay =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">loop =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "/mnt/Projects/Blog/posts/20250704-animation/animation-cloudiness.gif"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlink</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20250704-animation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cloudiness*"</span>))</span></code></pre></div>
</div>
<p><img src="https://blog.frequentist.org/posts/20250704-animation/animation-cloudiness.gif" class="img-fluid"></p>
<p>The resulting GIF animation shows the cloud coverage in Germany for each day in 2024, with a rolling average of 7 days to smooth the data. The animation provides a clear visual representation of how cloud coverage changed over time across different regions in Germany.</p>
<p>Source code available in the repository: <a href="https://github.com/AxesAccess/Animations-in-R" target="_blank">Animations-in-R</a></p>


</section>

 ]]></description>
  <category>Visualization</category>
  <category>Spatial</category>
  <category>Animation</category>
  <category>R</category>
  <guid>https://blog.frequentist.org/posts/20250704-animation/</guid>
  <pubDate>Fri, 04 Jul 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250704-animation/image.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Product Cards Creation Application</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20250531-content-mate/</link>
  <description><![CDATA[ 





<p>This application is designed to create product cards for an online store. It utilizes a large language model (LLM) and programming libraries to generate detailed descriptions based on product specifications, images, and files. This allows a business to streamline the process of crafting informative and engaging product listings with minimal manual effort. This enhances both productivity and content quality.</p>
<iframe src="https://www.linkedin.com/embed/feed/update/urn:li:ugcPost:7350848934489063424?collapsed=1" height="568" width="100%" frameborder="0" allowfullscreen="1" title="How I created an AI application from scratch">
</iframe>



 ]]></description>
  <category>App</category>
  <category>LLM</category>
  <category>Python</category>
  <guid>https://blog.frequentist.org/posts/20250531-content-mate/</guid>
  <pubDate>Sat, 31 May 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250531-content-mate/mark-konig-Tl8mDaue_II-unsplash_square.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Creating Anki Flashcards From List of Words</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20250503-anki-part-1/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>This notebook demonstrates how to create Anki flashcards from a list of words. The example uses a list of German words related to “Die Stadt” (The City) and translates them into English. It also generates audio files for the words using Google Text-to-Speech.</p>
<div id="fig-banner" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-banner-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20250503-anki-part-1/banner.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-banner-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="install-required-libraries" class="level2">
<h2 class="anchored" data-anchor-id="install-required-libraries">Install Required Libraries</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install pandas googletrans gtts genanki</span></code></pre></div>
</section>
<section id="set-parameters" class="level2">
<h2 class="anchored" data-anchor-id="set-parameters">Set Parameters</h2>
<div id="afd4545b" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">SRC_LANG <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"de"</span></span>
<span id="cb2-2">DST_LANG <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"en"</span></span>
<span id="cb2-3">DATA_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span></span>
<span id="cb2-4">SRC_FILE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"die Stadt.txt"</span></span>
<span id="cb2-5">AUDIO_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/audio"</span></span></code></pre></div>
</div>
</section>
<section id="load-words-list" class="level2">
<h2 class="anchored" data-anchor-id="load-words-list">Load Words List</h2>
<p>Here we load the list of words from a text file. The file should contain one word per line, and we will remove any empty lines.</p>
<div id="a0dd4ad2" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>DATA_DIR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>SRC_FILE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb3-4">    lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.readlines()</span>
<span id="cb3-5">lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [line.strip() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lines <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> line.strip()]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove empty lines</span></span>
<span id="cb3-6"></span>
<span id="cb3-7">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(lines, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Word"</span>])</span>
<span id="cb3-8">df.tail(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Word</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">113</td>
<td>das Kreuzfahrtschiff / die Kreuzfahrtschiffe</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">114</td>
<td>zu Fuß</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">115</td>
<td>die Fahrkarte / die Fahrkarten</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">116</td>
<td>der Fahrplan / die Fahrpläne</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">117</td>
<td>die Endstation / die Endstationen</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>In the particular example, the words are in the format “Word / Plural”. For example, “die Stadt / die Städte” means “the city / the cities (plural)”. Let’s split singular and plural forms into separate rows.</p>
<div id="beb7ed6d" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Word"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Word"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" / "</span>)</span>
<span id="cb4-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.explode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Word"</span>).reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-3">df.tail(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Word</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">228</td>
<td>die Fahrkarten</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">229</td>
<td>der Fahrplan</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">230</td>
<td>die Fahrpläne</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">231</td>
<td>die Endstation</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">232</td>
<td>die Endstationen</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="translate-words" class="level2">
<h2 class="anchored" data-anchor-id="translate-words">Translate Words</h2>
<p>We will use the <code>googletrans</code> library to translate the words from German to English. The library provides an asynchronous interface for translation, which is useful for bulk processing.</p>
<div id="768de64e" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> googletrans <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Translator</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> translate_bulk(texts: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>):</span>
<span id="cb5-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> Translator() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> translator:</span>
<span id="cb5-5">        translations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> translator.translate(texts, src<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SRC_LANG, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DST_LANG)</span>
<span id="cb5-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [translation.text <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> translation <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> translations]</span>
<span id="cb5-7"></span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> translate_bulk(</span>
<span id="cb5-10">    [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"die Polizei"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"die Motorräder"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"die Krankenhäuser"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"die Bahnhöfe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"die Flugzeuge"</span>]</span>
<span id="cb5-11">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>['the police',
 'The motorcycles',
 'The hospitals',
 'The train stations',
 'The aircraft']</code></pre>
</div>
</div>
<p>In the next chunk of code, we will create list of words to translate, then will apply the <code>translate_bulk</code> function to this list.</p>
<div id="db5da064" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Word"</span>].to_list()</span>
<span id="cb7-2"></span>
<span id="cb7-3">translations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> translate_bulk(texts)</span>
<span id="cb7-4"></span>
<span id="cb7-5">translations[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>['the city', 'the cities', 'the village', 'The villages', 'the street']</code></pre>
</div>
</div>
<p>The <code>googletrans</code> library employs undocumented Google Translate API, which may lead to rate limiting or blocking. We will hope that it will work for our case. If you encounter issues, consider using a paid translation service or API.</p>
<p>Next, we will add the translations to the DataFrame.</p>
<div id="66366cb8" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Translation"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> translations</span></code></pre></div>
</div>
</section>
<section id="generate-audio-files" class="level2">
<h2 class="anchored" data-anchor-id="generate-audio-files">Generate Audio Files</h2>
<p>We will use the <code>gtts</code> library to generate audio files for the words. This library uses Google Text-to-Speech API and it’s free. The generated audio files will be saved in the <code>AUDIO_DIR</code> directory. The filenames will be generated using a hash of the word.</p>
<div id="e1c34ce6" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> gtts <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gTTS</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> hashlib</span>
<span id="cb10-4"></span>
<span id="cb10-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gen_audio(sentence):</span>
<span id="cb10-6">    h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hashlib.shake_128(sentence.encode()).hexdigest(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb10-7">    filename <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>h<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.mp3"</span></span>
<span id="cb10-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> filename <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [f <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> os.listdir(AUDIO_DIR)]:</span>
<span id="cb10-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> filename</span>
<span id="cb10-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb10-11">        gTTS(text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sentence, lang<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SRC_LANG, slow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).save(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>AUDIO_DIR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filename<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb10-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb10-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> filename</span>
<span id="cb10-15"></span>
<span id="cb10-16"></span>
<span id="cb10-17">sample_audio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gen_audio(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"die Krankenhäuser"</span>)</span>
<span id="cb10-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Audio file saved as: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_audio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Audio file saved as: 308d817b87e2.mp3</code></pre>
</div>
</div>
<p>The <code>gen_audio</code> function generates a hash of the word and checks if the audio file already exists in the <code>AUDIO_DIR</code>. If it does, it returns the filename. If not, it generates the audio file and saves it.</p>
<audio controls="1" src="https://github.com/AxesAccess/Blog/raw/refs/heads/main/posts/20250503-anki-part-1/data/audio/308d817b87e2.mp3" preload="auto">
</audio>
</section>
<section id="add-audio-file-paths-to-dataframe" class="level2">
<h2 class="anchored" data-anchor-id="add-audio-file-paths-to-dataframe">Add Audio File Paths to DataFrame</h2>
<div id="b465fe5c" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Audio"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Word"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(gen_audio)</span></code></pre></div>
</div>
</section>
<section id="shuffle-dataframe" class="level2">
<h2 class="anchored" data-anchor-id="shuffle-dataframe">Shuffle DataFrame</h2>
<p>We will shuffle the DataFrame to randomize the order of the flashcards.</p>
<div id="aa3a8f37" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.sample(frac<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
</section>
<section id="set-up-anki-deck-and-model" class="level2">
<h2 class="anchored" data-anchor-id="set-up-anki-deck-and-model">Set Up Anki Deck and Model</h2>
<p>We will use the <code>genanki</code> library to create an Anki deck and model. The model defines the structure of the flashcards, while the deck contains the flashcards themselves. To get unique IDs for the model and deck, we will use random numbers. We will set seed for reproducibility.</p>
<div id="a253480a" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb14-2"></span>
<span id="cb14-3">random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb14-4"></span>
<span id="cb14-5">MODEL_NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vocabulary"</span></span>
<span id="cb14-6">DECK_NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Die Stadt"</span></span>
<span id="cb14-7">MODEL_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.randrange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>)</span>
<span id="cb14-8">DECK_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.randrange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>)</span></code></pre></div>
</div>
</section>
<section id="add-cards-to-anki-deck" class="level2">
<h2 class="anchored" data-anchor-id="add-cards-to-anki-deck">Add Cards to Anki Deck</h2>
<p>Next, will create a model for the flashcards and add the cards to the Anki deck.</p>
<div id="c83e4292" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> genanki</span>
<span id="cb15-2"></span>
<span id="cb15-3">my_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genanki.Model(</span>
<span id="cb15-4">    MODEL_ID,</span>
<span id="cb15-5">    MODEL_NAME,</span>
<span id="cb15-6">    fields<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb15-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Question"</span>},</span>
<span id="cb15-8">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Answer"</span>},</span>
<span id="cb15-9">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Audio"</span>},</span>
<span id="cb15-10">    ],</span>
<span id="cb15-11">    templates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb15-12">        {</span>
<span id="cb15-13">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Question</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb15-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qfmt"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;div class="head"&gt;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Question</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/div&gt;'</span>,</span>
<span id="cb15-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"afmt"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;div class="head"&gt;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Question</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/div&gt;&lt;hr id="answer"&gt; </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb15-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                &lt;div class="head"&gt;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Answer</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/div&gt; </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Audio</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb15-17">        },</span>
<span id="cb15-18">    ],</span>
<span id="cb15-19">    css<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb15-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        .head {font-size: x-large;} </span></span>
<span id="cb15-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        .spot {text-decoration: underline;} </span></span>
<span id="cb15-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        .sentence {font-style: italic; font-size: normal!important;}</span></span>
<span id="cb15-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span>,</span>
<span id="cb15-24">)</span>
<span id="cb15-25"></span>
<span id="cb15-26">my_deck <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genanki.Deck(</span>
<span id="cb15-27">    DECK_ID,</span>
<span id="cb15-28">    DECK_NAME,</span>
<span id="cb15-29">)</span>
<span id="cb15-30"></span>
<span id="cb15-31"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df.iterrows():</span>
<span id="cb15-32">    my_note <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genanki.Note(</span>
<span id="cb15-33">        model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_model,</span>
<span id="cb15-34">        fields<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb15-35">            row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Translation"</span>],</span>
<span id="cb15-36">            row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Word"</span>],</span>
<span id="cb15-37">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"[sound:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Audio'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">]"</span>,</span>
<span id="cb15-38">        ],</span>
<span id="cb15-39">    )</span>
<span id="cb15-40">    my_deck.add_note(my_note)</span></code></pre></div>
</div>
</section>
<section id="export-anki-deck" class="level2">
<h2 class="anchored" data-anchor-id="export-anki-deck">Export Anki Deck</h2>
<p>Finally, we will export the Anki deck to a file. The file will be saved in the <code>DATA_DIR</code> directory with the name <strong>Die Stadt.apkg</strong>. The audio files will be included in the package.</p>
<div id="0850616b" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">my_package <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genanki.Package(my_deck)</span>
<span id="cb16-2">my_package.media_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>AUDIO_DIR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filename<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> filename <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Audio"</span>].values]</span>
<span id="cb16-3">my_package.write_to_file(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>DATA_DIR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>DECK_NAME<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.apkg"</span>)</span></code></pre></div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this notebook, we learned how to create Anki flashcards from a list of words. We used the <code>googletrans</code> library to translate the words from German to English and the <code>gtts</code> library to generate audio files for the words. Finally, we used the <code>genanki</code> library to create an Anki deck and export it to a file. The generated Anki deck can be imported into Anki app and used for studying the vocabulary.</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://apps.ankiweb.net/" target="_blank">Anki apps</a></li>
<li><a href="https://ankiweb.net/shared/decks" target="_blank">Shared Decks - AnkiWeb</a></li>
</ul>
</section>
<section id="next-steps" class="level2">
<h2 class="anchored" data-anchor-id="next-steps">Next Steps</h2>
<p>In the next notebook we will create Anki flashcards from an arbitrary document like an article or a book.</p>


</section>

 ]]></description>
  <category>NLP</category>
  <category>Python</category>
  <guid>https://blog.frequentist.org/posts/20250503-anki-part-1/</guid>
  <pubDate>Sat, 03 May 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250503-anki-part-1/image.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Implementing a Local Retrieval-Augmented Generation System</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20250321-rag/</link>
  <description><![CDATA[ 





<section id="what-is-rag" class="level2">
<h2 class="anchored" data-anchor-id="what-is-rag">What is RAG?</h2>
<p>RAG (Retrieval-Augmented Generation) is a technology that combines the search external sources and generation using large language models. It allows for more accurate and informative responses by leveraging the information retrieved from a corpus of text to generate contextually relevant answers. RAG is particularly useful for question-answering tasks where the answer requires external knowledge beyond what is present in the training data of the language model.</p>
</section>
<section id="how-does-rag-work" class="level2">
<h2 class="anchored" data-anchor-id="how-does-rag-work">How does RAG work?</h2>
<p>RAG consists of two main components: a retriever and a generator. The retriever is responsible for searching a corpus of text to find relevant information based on the input query. The generator then uses the retrieved information to generate a response. By combining these two components, RAG can produce more informative and contextually relevant responses compared to traditional language models.</p>
<div class="cell" data-file="diagrams/rag.mmd" data-layout-align="default">
<div class="cell-output-display">
<div id="fig-rag" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-rag-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div>
<pre class="mermaid mermaid-js" data-label="fig-rag">---
config:
  theme: default
  look: classic
---
flowchart LR
    A["Reference&lt;br&gt;documents&lt;br&gt;📄📄📄"] --&gt; n1["Embedding&lt;br&gt;🔢🔢🔢"]
    n1 --&gt; n3["Vector database&lt;br&gt;🗄️🗄️🗄️"]
    n3 --&gt; n4["Retriever&lt;br&gt;🔎"]
    n5["User query&lt;br&gt;👤💬"] --&gt; n6["Embedding&lt;br&gt;🔢🔢🔢"]
    n5 -- 💬 --&gt; n8["Augmented&lt;br&gt;query 📄💬&lt;br&gt;"]
    n6 --&gt; n4
    n8 --&gt; n9["Large Language&lt;br&gt;Model 🧠"]
    n9 --&gt; n10["Response&lt;br&gt;🗨️"]
    n4 -- 📄 --&gt; n8

</pre>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-rag-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: RAG process overview
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="how-to-implement-a-rag-system" class="level2">
<h2 class="anchored" data-anchor-id="how-to-implement-a-rag-system">How to Implement a RAG System</h2>
<p>In this tutorial, we will implement a simple RAG system using a large language model (LLM) and a text retrieval system. We will use the Hugging Face Transformers library to load a pre-trained LLM and the Faiss library to build a vector database for text retrieval. We will then combine these components to create a question-answering system that retrieves relevant information from a corpus of text and generates responses based on the retrieved information.</p>
<p>Let’s get started by installing the necessary libraries and setting up the components for our RAG system.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install bitsandbytes faiss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>cpu langchain langchain_community <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-2">langchain_huggingface sentence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>transformers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>quiet</span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pickle</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> bs4 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BeautifulSoup, SoupStrainer</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformer</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb2-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.embeddings <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> HuggingFaceEmbeddings</span>
<span id="cb2-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_core.documents <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Document</span>
<span id="cb2-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.vectorstores.faiss <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> FAISS</span>
<span id="cb2-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_community.document_loaders <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> WebBaseLoader</span>
<span id="cb2-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.text_splitter <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RecursiveCharacterTextSplitter</span></code></pre></div>
<section id="data-collection" class="level3">
<h3 class="anchored" data-anchor-id="data-collection">Data Collection</h3>
<p>We will parse the Wikipedia category page to extract links to articles.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> urllib.parse <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urlparse</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> fetch_links(url):</span>
<span id="cb3-4">    links <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-5">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(url)</span>
<span id="cb3-6">    soup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BeautifulSoup(response.text, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'html.parser'</span>)</span>
<span id="cb3-7">    domain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> urlparse(url).netloc</span>
<span id="cb3-8"></span>
<span id="cb3-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ul <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> soup.find_all(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ul'</span>):</span>
<span id="cb3-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> li <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ul.find_all(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'li'</span>):</span>
<span id="cb3-11">            link <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> li.find(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>)</span>
<span id="cb3-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> link <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"href"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> link.attrs:</span>
<span id="cb3-13">                href <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> link.attrs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"href"</span>]</span>
<span id="cb3-14">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/wiki"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> href[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]:</span>
<span id="cb3-15">                    links.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>domain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>href<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-16"></span>
<span id="cb3-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> links</span></code></pre></div>
<p>Set the <code>url</code> variable and get the links.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://en.wikipedia.org/wiki/Category:Machine_learning_algorithms'</span></span>
<span id="cb4-2">links <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fetch_links(url)</span></code></pre></div>
<p>Next, we will download articles as the docs.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"USER_AGENT"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb5-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) "</span></span>
<span id="cb5-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AppleWebKit/537.36 (KHTML, like Gecko) "</span></span>
<span id="cb5-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chrome/134.0.0.0 Safari/537.36 Edg/134.0.0.0"</span></span>
<span id="cb5-5">)</span>
<span id="cb5-6"></span>
<span id="cb5-7">loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WebBaseLoader(</span>
<span id="cb5-8">    links[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>:],</span>
<span id="cb5-9">    bs_kwargs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb5-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parse_only"</span>: SoupStrainer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"div"</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mw-body-content"</span>}),</span>
<span id="cb5-11">    },</span>
<span id="cb5-12">    bs_get_text_kwargs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"separator"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"strip"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>},</span>
<span id="cb5-13">)</span>
<span id="cb5-14">docs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> loader.load()</span></code></pre></div>
</section>
<section id="text-splitting-and-embedding" class="level3">
<h3 class="anchored" data-anchor-id="text-splitting-and-embedding">Text Splitting and Embedding</h3>
<p>Here we break documents into shorter chunks—overlapping parts that should be provided to the LLM as context.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">text_splitter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RecursiveCharacterTextSplitter(chunk_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, chunk_overlap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)</span>
<span id="cb6-2">split_docs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text_splitter.split_documents(docs)</span></code></pre></div>
<p>We need to perform quick search for relevant information, so let’s transform texts to embeddings and load them into vector database.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_huggingface <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> HuggingFaceEmbeddings</span>
<span id="cb7-2"></span>
<span id="cb7-3">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence-transformers/paraphrase-multilingual-mpnet-base-v2"</span></span>
<span id="cb7-4">model_kwargs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"device"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>}</span>
<span id="cb7-5">encode_kwargs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normalize_embeddings"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>}</span>
<span id="cb7-6">embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HuggingFaceEmbeddings(</span>
<span id="cb7-7">    model_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_name, model_kwargs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_kwargs, encode_kwargs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>encode_kwargs</span>
<span id="cb7-8">)</span></code></pre></div>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">vector_store <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FAISS.from_documents(split_docs, embedding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding)</span></code></pre></div>
</section>
<section id="question-answering-pipeline" class="level3">
<h3 class="anchored" data-anchor-id="question-answering-pipeline">Question-Answering Pipeline</h3>
<p>Here we define function for retrieving relevant documents from the database.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> retrieve(query, top_k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb9-2">    documents <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vector_store.search(query, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"similarity"</span>)</span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> documents[:top_k]</span></code></pre></div>
<p>We will use local LLM. Let’s authorize on HuggingFace which is mandatory for downloading certain models.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> huggingface_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> login</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> google.colab <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> userdata</span>
<span id="cb10-3"></span>
<span id="cb10-4">login(token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> userdata.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HF_TOKEN"</span>))</span></code></pre></div>
<p>Download model, define tokenizer and create config.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoModelForCausalLM, AutoTokenizer</span>
<span id="cb11-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb11-3"></span>
<span id="cb11-4">MODEL_NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Qwen/Qwen2.5-7B"</span></span>
<span id="cb11-5"></span>
<span id="cb11-6">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForCausalLM.from_pretrained(</span>
<span id="cb11-7">    MODEL_NAME,</span>
<span id="cb11-8">    load_in_8bit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb11-9">    torch_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.bfloat16,</span>
<span id="cb11-10">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>,</span>
<span id="cb11-11">)</span>
<span id="cb11-12">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb11-13"></span>
<span id="cb11-14">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(MODEL_NAME)</span></code></pre></div>
<p>Let’s put context retrieval and generation pipeline into a function.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">gen_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(</span>
<span id="cb12-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-generation"</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model, tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer, return_full_text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb12-3">)</span>
<span id="cb12-4"></span>
<span id="cb12-5"></span>
<span id="cb12-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_response(query):</span>
<span id="cb12-7">    relevant_texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> retrieve(query)</span>
<span id="cb12-8">    context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>.join([t.model_dump()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"page_content"</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> relevant_texts])</span>
<span id="cb12-9">    prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""Answer question using only information provided in the context.</span></span>
<span id="cb12-10"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    If the context contains no relevant information, say "I couldn't find the information".</span></span>
<span id="cb12-11"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    Context: '''</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>context<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb12-12"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    Question: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-13"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    Answer:</span></span>
<span id="cb12-14"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb12-15">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gen_pipeline(prompt)</span>
<span id="cb12-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> response[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span></code></pre></div>
</section>
</section>
<section id="testing-the-rag-system" class="level2">
<h2 class="anchored" data-anchor-id="testing-the-rag-system">Testing the RAG System</h2>
<p>Here starts our Q&amp;A session.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What is the Actor-critic algorithm in reinforcement learning?"</span></span>
<span id="cb13-2"></span>
<span id="cb13-3">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_response(query)</span>
<span id="cb13-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(answer)</span></code></pre></div>
<pre><code>The actor-critic algorithm (AC) is a family of reinforcement learning (RL) algorithms that combine policy-based RL algorithms such as policy gradient methods, and value-based RL algorithms such as value iteration, Q-learning, SARSA, and TD learning. An AC algorithm consists of two main components: an "actor" that determines which actions to take according to a policy function, and a "critic" that evaluates those actions according to a value function. Some AC algorithms are on-policy, some are off-policy. Some apply to either continuous or discrete action spaces. Some work in both cases.</code></pre>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What is the purpose of backpropagation in neural networks?"</span></span>
<span id="cb15-2"></span>
<span id="cb15-3">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_response(query)</span>
<span id="cb15-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(answer)</span></code></pre></div>
<pre><code>The purpose of backpropagation in neural networks is to adjust the weights of the connections between neurons in order to minimize the error between the predicted output and the actual output. This is done by propagating the error backwards through the network, starting from the output layer and moving towards the input layer, hence the name "backpropagation." The goal is to find the optimal set of weights that will allow the network to make accurate predictions on new, unseen data.</code></pre>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Explain the concept of Curriculum learning in machine learning."</span></span>
<span id="cb17-2"></span>
<span id="cb17-3">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_response(query)</span>
<span id="cb17-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(answer)</span></code></pre></div>
<pre><code>Curriculum learning in machine learning is a technique that involves gradually introducing more complex concepts or data to a model as it learns. This approach is inspired by the way humans learn, starting with simple concepts and building upon them. In the context provided, it is mentioned that this technique has its roots in the early study of neural networks, particularly in Jeffrey Elman's 1993 paper. Bengio et al. demonstrated successful application of curriculum learning in image classification tasks, such as identifying geometric shapes with increasingly complex forms, and language modeling tasks, such as training with a gradually expanding vocabulary. The authors conclude that curriculum strategies can be beneficial for machine learning models, especially when dealing with complex or large-scale problems.</code></pre>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"How does K-nearest neighbors (K-NN) algorithm classify data?"</span></span>
<span id="cb19-2"></span>
<span id="cb19-3">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_response(query)</span>
<span id="cb19-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(answer)</span></code></pre></div>
<pre><code>The K-nearest neighbors (K-NN) algorithm classifies data by a plurality vote of its neighbors, with the object being assigned to the class most common among its K nearest neighbors (K is a positive integer, typically small). If K = 1, then the object is simply assigned to the class of that single nearest neighbor.</code></pre>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What is Federated Learning of Cohorts and how does it improve data privacy?"</span></span>
<span id="cb21-2"></span>
<span id="cb21-3">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_response(query)</span>
<span id="cb21-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(answer)</span></code></pre></div>
<pre><code>Federated Learning of Cohorts (FLoC) is a type of web tracking that groups people into "cohorts" based on their browsing history for the purpose of interest-based advertising. It was being developed as a part of Google's Privacy Sandbox initiative, which includes several other advertising-related technologies with bird-themed names. FLoC was being tested in Chrome 89 as a replacement for third-party cookies. Despite "federated learning" in the name, FLoC does not utilize any federated learning. FLoC improves data privacy by grouping people into cohorts based on their browsing history, rather than tracking individual users. This means that advertisers can still target users based on their interests, but without the need for individual user data.</code></pre>
<p>Looks good. Let’s ask something that is not in the context. For instance, there was no articles on Transformer architecture among wiki articles.</p>
<section id="out-of-context-questions" class="level3">
<h3 class="anchored" data-anchor-id="out-of-context-questions">Out-of-Context Questions</h3>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"How does the Transformer architecture improve upon traditional RNNs and LSTMs in NLP tasks?"</span></span>
<span id="cb23-2"></span>
<span id="cb23-3">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_response(query)</span>
<span id="cb23-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(answer)</span></code></pre></div>
<pre><code>The Transformer architecture improves upon traditional RNNs and LSTMs in NLP tasks by using self-attention mechanisms to capture long-range dependencies between words in a sentence. This allows the model to process entire sentences at once, rather than sequentially like RNNs and LSTMs. Additionally, the Transformer architecture uses a fixed-size attention mechanism, which makes it more efficient and scalable than RNNs and LSTMs.</code></pre>
<p>That’s interesting. To be sure that there’s no information on this topic, let’s check context.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">retrieve(query)</span></code></pre></div>
<pre><code>[
    Document(
        id='a2ae5aee-3b78-4804-a983-25d08fb8f5d3', 
        metadata={'source': 'https://en.wikipedia.org/wiki/Loss_functions_for_classification'}, 
        page_content='Andrew Ng Fei-Fei Li Alex Krizhevsky Ilya Sutskever Demis Hassabis David Silver Ian Goodfellow Andrej Karpathy Architectures Neural Turing machine Differentiable neural computer Transformer Vision transformer (ViT) Recurrent neural network (RNN) Long short-term memory (LSTM) Gated recurrent unit (GRU) Echo state network Multilayer perceptron (MLP) Convolutional neural network (CNN) Residual neural network (RNN) Highway network Mamba Autoencoder Variational autoencoder (VAE) Generative adversarial network (GAN) Graph neural network (GNN) Portals Technology Category Artificial neural networks Machine learning List Companies Projects Retrieved from " https://en.wikipedia.org/w/index.php?title=Loss_functions_for_classification&amp;oldid=1261562183 "'
    ),
    Document(
        id='b267b523-9330-4b33-bc3a-b4e6edec109f',
        metadata={'source': 'https://en.wikipedia.org/wiki/Policy_gradient_method'}, 
        page_content='neural computer Transformer Vision transformer (ViT) Recurrent neural network (RNN) Long short-term memory (LSTM) Gated recurrent unit (GRU) Echo state network Multilayer perceptron (MLP) Convolutional neural network (CNN) Residual neural network (RNN) Highway network Mamba Autoencoder Variational autoencoder (VAE) Generative adversarial network (GAN) Graph neural network (GNN) Portals Technology Category Artificial neural networks Machine learning List Companies Projects Retrieved from " https://en.wikipedia.org/w/index.php?title=Policy_gradient_method&amp;oldid=1280215280 "'
    )
]</code></pre>
<p>It appears that the query retrieved random parts of pages mentioning transformers. However, as they contained no valuable information, the answer was fully generated by the LLM. Although the response was accurate, we may want to enhance the retrieval function by setting a threshold for relevancy to minimize the risk of hallucinations.</p>
<p>Let’s ask a question from the completely different domain.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"How does the process of photosynthesis work in plants?"</span></span>
<span id="cb27-2"></span>
<span id="cb27-3">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_response(query)</span>
<span id="cb27-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(answer)</span></code></pre></div>
<pre><code>I couldn't find the information.</code></pre>
<p>This question left unanswered. What about another one?</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"How does blockchain technology ensure security and decentralization?"</span></span>
<span id="cb29-2"></span>
<span id="cb29-3">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_response(query)</span>
<span id="cb29-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(answer)</span></code></pre></div>
<pre><code>Blockchain technology ensures security and decentralization through its decentralized nature and cryptographic algorithms. It operates on a distributed network of nodes, where each node maintains a copy of the entire blockchain. This means that no single entity has control over the entire system, making it resistant to tampering and censorship. Additionally, blockchain uses cryptographic algorithms to secure transactions and data, ensuring that only authorized parties can access and modify the information. This combination of decentralization and cryptographic security makes blockchain technology highly secure and decentralized.</code></pre>
<p>Unexpectedly, one of the documents contained information on this topic, so the answer was generated based on the retrieved context.</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">retrieve(query)</span></code></pre></div>
<pre><code>[
    Document(
        id='3d968d3b-1889-4435-b329-c9081400e8c4', 
        metadata={'source': 'https://en.wikipedia.org/wiki/Augmented_Analytics'}, 
        page_content='to democratising data: Data Parameterisation and Characterisation. Data Decentralisation using an OS of blockchain and DLT technologies, as well as an independently governed secure data exchange to enable trust. Consent Market-driven Data Monetisation. When it comes to connecting assets, there are two features that will accelerate the adoption and usage of data democratisation: decentralized identity management and business data object monetization of data ownership. It enables multiple individuals and organizations to identify, authenticate, and authorize participants and organizations, enabling them to access services, data or systems across multiple networks, organizations, environments, and use cases. It empowers users and enables a personalized, self-service digital onboarding system so that users can self-authenticate without relying on a central administration function to process their information. Simultaneously, decentralized identity management ensures the user is authorized'
    ),
    Document(
    id='98578608-2a8d-4533-a655-b556202dda7d', 
    metadata={'source': 'https://en.wikipedia.org/wiki/Augmented_Analytics'}, 
    page_content='so that users can self-authenticate without relying on a central administration function to process their information. Simultaneously, decentralized identity management ensures the user is authorized to perform actions subject to the system’s policies based on their attributes (role, department, organization, etc.) and/ or physical location. [ 10 ] Use cases [ edit ] Agriculture  – Farmers collect data on water use, soil temperature, moisture content and crop growth, augmented analytics can be used to make sense of this data and possibly identify insights that the user can then use to make business decisions. [ 11 ] Smart Cities  – Many cities across the United States, known as Smart Cities collect large amounts of data on a daily basis. Augmented analytics can be used to simplify this data in order to increase effectiveness in city management (transportation, natural disasters, etc.). [ 11 ] Analytic Dashboards  – Augmented analytics has the ability to take large data sets and create'
    )
]</code></pre>
<p>One more question from another domain.</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What are the fundamental principles of classical mechanics?"</span></span>
<span id="cb33-2"></span>
<span id="cb33-3">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_response(query)</span>
<span id="cb33-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(answer)</span></code></pre></div>
<pre><code>I couldn't find the information.</code></pre>
<p>This question was left unanswered as expected.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this tutorial, we implemented a simple RAG system using a large language model and a text retrieval system. We collected articles from Wikipedia, split them into shorter chunks, and transformed them into embeddings for quick search. We then used a local LLM to generate responses based on the retrieved information. The RAG system successfully answered questions related to machine learning algorithms and reinforcement learning. The RAG system demonstrates the potential of combining retrieval and generation techniques to produce informative and contextually relevant answers.</p>
<p>Source code for this tutorial is available on <a href="https://github.com/AxesAccess/Implementing-a-Local-Retrieval-Augmented-Generation-System/blob/main/Implementing_a_Local_Retrieval_Augmented_Generation_System.ipynb">GitHub</a>.</p>


</section>

 ]]></description>
  <category>RAG</category>
  <category>NLP</category>
  <category>LLM</category>
  <category>Python</category>
  <guid>https://blog.frequentist.org/posts/20250321-rag/</guid>
  <pubDate>Fri, 21 Mar 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250321-rag/image.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Nerdy Valentine’s in Python, R, and Matlab</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20250214-valentines/</link>
  <description><![CDATA[ 





<p>Let’s celebrate Valentine’s Day with some nerdy love! In this post, we will create heart-shaped plots using Python, R, and Matlab. These heart-shaped plots are a fun and creative way to express your love for programming and data visualization. Let’s get started!</p>
<section id="python" class="level2">
<h2 class="anchored" data-anchor-id="python">Python</h2>
<p>Here is a Python code snippet to plot a 3D heart shape using Matplotlib:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> mpl_toolkits.mplot3d <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Axes3D</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cm</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib.ticker <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearLocator, FormatStrFormatter</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-6"></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> heart_3d(x, y, z):</span>
<span id="cb1-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb1-10">        (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-11">    )</span>
<span id="cb1-12"></span>
<span id="cb1-13"></span>
<span id="cb1-14">bbox <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)</span>
<span id="cb1-15"></span>
<span id="cb1-16">xmin, xmax, ymin, ymax, zmin, zmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bbox <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-17">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb1-18"></span>
<span id="cb1-19">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>, projection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3d"</span>)</span>
<span id="cb1-20">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(xmin, xmax, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># resolution of the contour</span></span>
<span id="cb1-21">B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(xmin, xmax, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of slices</span></span>
<span id="cb1-22">A1, A2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(A, A)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grid on which the contour is plotted</span></span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> z <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> B:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot contours in the XY plane</span></span>
<span id="cb1-25">    X, Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A1, A2</span>
<span id="cb1-26">    Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> heart_3d(X, Y, z)</span>
<span id="cb1-27">    cset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.contour(X, Y, Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, [z], zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>, colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>,))</span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> y <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> B:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot contours in the XZ plane</span></span>
<span id="cb1-30">    X, Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A1, A2</span>
<span id="cb1-31">    Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> heart_3d(X, y, Z)</span>
<span id="cb1-32">    cset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.contour(X, Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y, Z, [y], zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>,))</span>
<span id="cb1-33"></span>
<span id="cb1-34"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> B:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot contours in the YZ plane</span></span>
<span id="cb1-35">    Y, Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A1, A2</span>
<span id="cb1-36">    X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> heart_3d(x, Y, Z)</span>
<span id="cb1-37">    cset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.contour(X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, Y, Z, [x], zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>,))</span>
<span id="cb1-38"></span>
<span id="cb1-39">_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.set_zlim3d(zmin, zmax)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-40">_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.set_xlim3d(xmin, xmax)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-41">_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.set_ylim3d(ymin, ymax)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-42"></span>
<span id="cb1-43">ax.xaxis.set_pane_color((<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>))</span>
<span id="cb1-44">ax.yaxis.set_pane_color((<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>))</span>
<span id="cb1-45">ax.zaxis.set_pane_color((<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>))</span>
<span id="cb1-46"></span>
<span id="cb1-47"></span>
<span id="cb1-48">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250214-valentines/index_files/figure-html/py-heart-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="r" class="level2">
<h2 class="anchored" data-anchor-id="r">R</h2>
<p>In R, we can use the <code>rgl</code> and <code>misc3d</code> packages to create 3D mesh plots. Here is the R code to plot a heart shape:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rgl.useNULL =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use NULL device if display is not available</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(misc3d)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rgl)</span>
<span id="cb2-5"></span>
<span id="cb2-6">heart_3d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x, y, z) {</span>
<span id="cb2-7">  (x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb2-8">}</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a grid of points in 3D space</span></span>
<span id="cb2-11">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb2-12">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb2-13">z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate 3D grid of function values</span></span>
<span id="cb2-16">grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> z)</span>
<span id="cb2-17">values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span>(grid, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">heart_3d</span>(x, y, z))</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reshape to 3D array for contour3d</span></span>
<span id="cb2-20">dim_values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(x), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(z))</span>
<span id="cb2-21">values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array</span>(values, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dim =</span> dim_values)</span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create 3D contour plot</span></span>
<span id="cb2-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contour3d</span>(values,</span>
<span id="cb2-25">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">level =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb2-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> z, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.mesh =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">engine =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grid"</span></span>
<span id="cb2-27">)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250214-valentines/index_files/figure-html/unnamed-chunk-2-3.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="matlab" class="level2">
<h2 class="anchored" data-anchor-id="matlab">Matlab</h2>
<p>The code for plotting 3D shape in Matlab is much more laconic than in Python or R. Here is how to plot a heart shape in Matlab:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode matlab code-with-copy"><code class="sourceCode matlab"><span id="cb3-1"></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% volume data</span></span>
<span id="cb3-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">step</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4">[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">X</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Z</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meshgrid</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">step</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">step</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">step</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">F</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">X</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Z</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Z</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>((<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">X</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Z</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% wireframe</span></span>
<span id="cb3-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">patch</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">isosurface</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">X</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Z</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">F</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'FaceColor'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'EdgeColor'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb3-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">daspect</span>([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb3-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">view</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb3-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">axis</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tight</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">equal</span></span>
<span id="cb3-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">set</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gcf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'Color'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250214-valentines/matlab-heart.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:4in"></p>
</figure>
</div>
<p>Now you have three beautiful heart-shaped plots created using Python, R, and Matlab. Share these plots with your loved ones and spread the nerdy love this Valentine’s Day!</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>R</category>
  <category>Matlab</category>
  <guid>https://blog.frequentist.org/posts/20250214-valentines/</guid>
  <pubDate>Fri, 14 Feb 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250214-valentines/image.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Run Docker Containers Remotely with Airflow</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20250114-airflow-remote-docker/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Airflow is a powerful tool for automating workflows. Once you start using it, you’ll likely find it a great replacement for cron jobs on Linux machines. One common use case is running Docker containers on a remote machine—a valuable feature for executing data processing tasks or deploying applications.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20250114-airflow-remote-docker/AirflowLogo.png" class="img-fluid figure-img" alt="Apache AirFlow Logo"></p>
<figcaption>Apache AirFlow Logo</figcaption>
</figure>
</div>
<p>Setting up Airflow to run Docker containers on a remote machine is a straightforward process. While many guides are available online, they often lack complete and up-to-date instructions. Based on my experience, I decided to write this guide. Let’s walk through the necessary steps to get it running.</p>
</section>
<section id="remote-host-setup" class="level2">
<h2 class="anchored" data-anchor-id="remote-host-setup">Remote Host Setup</h2>
<p>Assuming you have a remote Linux machine with Docker installed, you will need to configure it to allow remote access through ssh.</p>
<section id="create-a-dedicated-user" class="level3">
<h3 class="anchored" data-anchor-id="create-a-dedicated-user">1. Create a Dedicated User</h3>
<p>For the security reasons, it is recommended to use a dedicated user for running remote commands. You can create a new user like this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> useradd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> airflow</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> usermod <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-aG</span> docker airflow</span></code></pre></div>
<p>The last command will add the user to the <code>docker</code> group, allowing it to run Docker commands without <code>sudo.</code></p>
<p>Note, that if you will run <code>sudo</code> as the <code>airflow</code> user, you will need to add the user to the <code>sudoers</code> file. You can do this by adding the <code>/etc/sudoers.d/airflow</code> file with the following content:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">airflow</span> ALL=<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ALL</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NOPASSWD:</span> /path/to/command</span></code></pre></div>
</section>
<section id="configure-ssh-server" class="level3">
<h3 class="anchored" data-anchor-id="configure-ssh-server">2. Configure SSH Server</h3>
<p>Next, you will need to configure the ssh server to allow remote access. You can do this by editing the <code>/etc/ssh/sshd_config</code> file and adding/editing the following line:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">AllowUsers</span> airflow</span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PasswordAuthentication</span> no</span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PubkeyAuthentication</span> yes</span></code></pre></div>
<p>This will allow only the <code>airflow</code> user to access the server through ssh and disable password authentication, requiring the use of ssh keys instead.</p>
</section>
<section id="set-up-ssh-keys" class="level3">
<h3 class="anchored" data-anchor-id="set-up-ssh-keys">3. Set Up SSH Keys</h3>
<p>You will also need to generate an ssh key pair on your Airflow machine and copy the public key to the remote machine. You can do this with the following commands (assuming you are logged in as the user that will run Airflow):</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh-keygen</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> ~/.ssh/id_rsa.pub</span></code></pre></div>
<p>Then copy the output of the second command to the <code>~/.ssh/authorized_keys</code> file on the remote machine:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /home/airflow/.ssh</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your_public_key"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /home/airflow/.ssh/authorized_keys</span></code></pre></div>
<p>Make sure that the <code>.ssh</code> folder and <code>authorized_keys</code> file have the correct permissions:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chown</span> airflow:airflow /home/airflow/.ssh/authorized_keys</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chown</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> airflow:airflow /home/airflow/.ssh</span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> 600 /home/airflow/.ssh/authorized_keys</span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> 700 /home/airflow/.ssh</span></code></pre></div>
<p>Test the ssh connection by running the following command from your Airflow machine:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> airflow@your_remote_machine_ip</span></code></pre></div>
<p>If everything is set up correctly, you should be able to connect to the remote machine without being prompted for a password.</p>
</section>
</section>
<section id="airflow-setup" class="level2">
<h2 class="anchored" data-anchor-id="airflow-setup">Airflow Setup</h2>
<p>Now that the remote machine is set up, you can add the task to your Airflow DAG. You will need to use the <code>SSHOperator</code> to run the Docker command on the remote machine. Here is an example of how to do this.</p>
<section id="install-the-required-package" class="level3">
<h3 class="anchored" data-anchor-id="install-the-required-package">1. Install the required package</h3>
<p>You will need to install the <code>apache-airflow-providers-ssh</code> package to use the <code>SSHOperator</code>. You can do this by running the following command (in your Airflow environment):</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install apache-airflow-providers-ssh</span></code></pre></div>
</section>
<section id="create-the-connection" class="level3">
<h3 class="anchored" data-anchor-id="create-the-connection">2. Create the connection</h3>
<p>In the Airflow UI, go to Admin -&gt; Connections and create a new connection with the following settings:</p>
<ul>
<li>Connection Id: <code>remote_docker</code></li>
<li>Conn Type: <code>SSH</code></li>
<li>Host: <code>your_remote_machine_ip</code></li>
<li>Username: <code>airflow</code></li>
<li>Password: (leave it blank)</li>
<li>Extra: <code>{"key_file": "/path/to/your/private/key"}</code></li>
</ul>
</section>
<section id="create-the-dag" class="level3">
<h3 class="anchored" data-anchor-id="create-the-dag">3. Create the DAG</h3>
<p>Now you can create a new DAG that will run the Docker command on the remote machine. Here is an example of how to do this:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"></span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> airflow.models.dag <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DAG</span>
<span id="cb9-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> airflow.providers.ssh.operators.ssh <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SSHOperator</span>
<span id="cb9-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pendulum</span>
<span id="cb9-5"></span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> DAG(</span>
<span id="cb9-8">    dag_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"remote_docker_tasks"</span>,</span>
<span id="cb9-9">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Runs Docker commands on a remote machine"</span>,</span>
<span id="cb9-10">    schedule<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'@daily'</span>,</span>
<span id="cb9-11">    start_date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pendulum.datetime(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2025</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, tz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTC"</span>),</span>
<span id="cb9-12">    catchup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb9-13">    tags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"docker"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"remote"</span>],</span>
<span id="cb9-14">) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dag:</span>
<span id="cb9-15"></span>
<span id="cb9-16">    hello_world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SSHOperator(</span>
<span id="cb9-17">        task_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello_world"</span>,</span>
<span id="cb9-18">        ssh_conn_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"remote_docker"</span>,</span>
<span id="cb9-19">        command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"docker run --rm hello-world"</span>,</span>
<span id="cb9-20">    )</span>
<span id="cb9-21"></span>
<span id="cb9-22">    hello_world</span>
<span id="cb9-23">    </span></code></pre></div>
<p>This DAG will run the <code>hello-world</code> Docker container on the remote machine every day at midnight. You can modify the <code>command</code> parameter to run any Docker command you want.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this guide, I have shown you how to set up Airflow to run Docker containers on a remote machine. I’ll be happy if it saves you a couple of hours of your time. If you have any questions or suggestions, feel free to leave a comment under <a href="https://www.linkedin.com/pulse/run-docker-containers-remotely-airflow-alex-vladimirovich-5tnhe/">the LinkedIn article</a>.</p>


</section>

 ]]></description>
  <category>Airflow</category>
  <category>Docker</category>
  <guid>https://blog.frequentist.org/posts/20250114-airflow-remote-docker/</guid>
  <pubDate>Wed, 08 Jan 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250114-airflow-remote-docker/image.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>BI System Blueprint</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20250106-bi-flowchart/</link>
  <description><![CDATA[ 





<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">Intro</h2>
<p>In this post, I’d like to present a blueprint for a BI system that I’ve been working on. The system is designed to provide insights into the company’s performance and support data-driven decision-making.</p>
</section>
<section id="architecture" class="level2">
<h2 class="anchored" data-anchor-id="architecture">Architecture</h2>
<p>The BI system primarily revolves around Microsoft Power BI, which serves as the key instrument for creating dozens of reports with hundreds of indicators. Data is sourced and structured using various tools and pipelines, with Google BigQuery acting as the central data warehouse.</p>
<p>The system consists of several modules that work together to deliver actionable insights to end-users. The flowchart below illustrates the main components of the system and their interactions.</p>
<div class="cell" data-file="diagrams/architecture.mmd" data-layout-align="default">
<div class="cell-output-display">
<div id="fig-architecture" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-architecture-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div>
<pre class="mermaid mermaid-js" data-label="fig-architecture">---
config:
  theme: default
  look: classic
---
flowchart BT
 subgraph s5["Google BigQuery"]
        n51["Views"]
        n52["Tables"]
  end
 subgraph s6["Extract and transform"]
        n11["ETL scripts"]
        n17["dbt"]
  end
 subgraph s7["Data sources"]
        n61["DBs"]
        n62["APIs"]
        n63["Files"]
        n64["..."]
  end
    n5["Airflow"] -.-&gt; n11 &amp; n17 &amp; s3["Power BI"] &amp; n20["ML models"]
    n52 -- Data --&gt; n20 &amp; n51
    n51 -- Data --&gt; s3
    n11 -- Table data --&gt; n52
    n17 -- Models --&gt; n51
    n20 -- Forecasts --&gt; n52
    s7 -- Data --&gt; n11
    style s5 fill:transparent
    style s6 fill:transparent
    style s7 fill:transparent
</pre>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-architecture-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Data and control flows in the BI system
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="modules" class="level2">
<h2 class="anchored" data-anchor-id="modules">Modules</h2>
<section id="airflow" class="level3">
<h3 class="anchored" data-anchor-id="airflow">Airflow</h3>
<p>The ETL process is orchestrated by Apache Airflow, an open-source platform for programmatically authoring, scheduling, and monitoring workflows. Some tasks are triggered <a href="../20241105-airflow-filesensor/">by the arrival of new data</a>, while others run at predefined intervals.</p>
</section>
<section id="extract-and-transform" class="level3">
<h3 class="anchored" data-anchor-id="extract-and-transform">Extract and Transform</h3>
<p>The first step in the process is collecting data from various sources such as databases, APIs, and files. The collected data is then stored in Google BigQuery.</p>
<div class="cell" data-file="diagrams/etl.mmd" data-layout-align="default">
<div class="cell-output-display">
<div id="fig-etl" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-etl-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div>
<pre class="mermaid mermaid-js" data-label="fig-etl">---
config:
  theme: default
  look: classic
---
flowchart BT
 subgraph s7["PBX"]
        n53["Records"]
        n12["CDR DB"]
  end
 subgraph s8["ERP"]
        n1["ERP reporting&lt;br&gt;subsystem"]
  end
    n1 -- CSV files --&gt; n59["SMB share"]
    n6["Helpdesk software"] -- Tickets --&gt; n11["ETL scripts"]
    n7["PM software"] -- Tasks --&gt; n11
    n8["CMS"] -- SKU metadata --&gt; n11
    n9["IMAP"] -- Messages --&gt; n11
    n12 -- Calls metadata --&gt; n11
    n53 -- WAV files --&gt; n54["Text to Speech"]
    n11 -- Table data --&gt; n57["Google BigQuery"]
    n54 -- Transcribed&lt;br&gt;records --&gt; n11
    n58["Google Analytics"] -- Events flow --&gt; n57
    n59 -- Reports --&gt; n11
    style s7 fill:transparent
    style s8 fill:transparent
</pre>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-etl-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: ETL subsystem
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="dbt" class="level3">
<h3 class="anchored" data-anchor-id="dbt">dbt</h3>
<p>While the data in BigQuery is already structured, further transformation may be required to optimize it for analysis. <em>dbt (data build tool)</em> facilitates this by allowing you to define transformations, often as SQL views, and execute them in a reproducible manner.</p>
</section>
<section id="ml-models" class="level3">
<h3 class="anchored" data-anchor-id="ml-models">ML models</h3>
<p>In addition to traditional BI analytics, the system incorporates machine learning models to predict future outcomes based on historical data. The predicted values are stored in BigQuery and integrated into the reporting process.</p>
</section>
<section id="power-bi" class="level3">
<h3 class="anchored" data-anchor-id="power-bi">Power BI</h3>
<p>The final step is visualizing the data using Power BI, a business analytics tool that provides interactive visualizations and business intelligence capabilities.</p>
<p>The data is fetched from BigQuery and stored in Power BI datasets. Although a direct connection to BigQuery is available, importing the data is necessary to fully leverage the DAX language for creating complex calculations. Data refreshes are triggered by Airflow DAGs after the ETL tasks are completed.</p>
<div class="cell" data-file="diagrams/powerbi.mmd" data-layout-align="default">
<div class="cell-output-display">
<div id="fig-powerbi" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-powerbi-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div>
<pre class="mermaid mermaid-js" data-label="fig-powerbi">---
config:
  theme: default
  look: classic
---
flowchart BT
 subgraph s3["Datasets"]
        n22["Sales"]
        n23["Supply"]
        n24["Finance"]
        n25["HR"]
  end
 subgraph s4["Reports and dashboards"]
        n26["Report 2"]
        n27["Report 3"]
        n29["Report 1"]
        n40["Dashboard 1"]
        n42["..."]
        n41["Report n"]
  end
 subgraph s5["Google BigQuery"]
        n51["Views"]
  end
    n51 --&gt; n24 &amp; n22 &amp; n25 &amp; n23
    n22 --&gt; n26 &amp; n40
    n23 --&gt; n27 &amp; n40 &amp; n41
    n24 --&gt; n29
    n25 --&gt; n40
    style s3 fill:transparent
    style s4 fill:transparent
    style s5 fill:transparent
</pre>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-powerbi-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Power BI reports and dashboards
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In summary, the BI system outlined in this post is purpose-built to deliver deep insights into the company’s performance and empower data-driven decision-making. By integrating tools like ETL pipelines, Airflow for orchestration, dbt for data transformation, and Power BI for advanced analytics and visualization, it establishes a scalable and robust analytics platform tailored to meet evolving business needs.</p>
<div class="cell" data-file="diagrams/overview.mmd" data-layout-align="default">
<div class="cell-output-display">
<div id="fig-conclusion" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-conclusion-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div>
<pre class="mermaid mermaid-js" data-label="fig-conclusion">---
config:
  theme: default
  look: classic
---
flowchart BT
 subgraph s3["Datasets"]
        n22["Sales"]
        n23["Supply"]
        n24["Finance"]
        n25["HR"]
  end
 subgraph s4["Reports and dashboards"]
        n26["Report 1"]
        n27["Report 2"]
        n29["..."]
  end
 subgraph s5["Google BigQuery"]
        n51["Views"]
        n52["Tables"]
  end
 subgraph s7["PBX"]
        n53["Records"]
        n12["CDR DB"]
  end
 subgraph s8["ERP system"]
        n1["ERP reporting&lt;br&gt;subsystem"]
  end
    n51 --&gt; s3
    s3 --&gt; s4
    n1 -- CSV files --&gt; n55["SMB share"]
    n6["Helpdesk software"] -- Tickets --&gt; n11["ETL scripts"]
    n7["PM software"] -- Tasks --&gt; n11
    n8["CMS"] -- SKU metadata --&gt; n11
    n9["IMAP"] -- Messages --&gt; n11
    n12 -- Calls metadata --&gt; n11
    n11 -- Table data --&gt; n52
    n17["dbt"] -- Models --&gt; n51
    n52 -- Data --&gt; n51 &amp; n20["ML models"]
    n20 -- Forecasts --&gt; n52
    n53 -- WAV files --&gt; n54["Text to Speech"]
    n54 -- Transcribed&lt;br&gt;records --&gt; n11
    n55 -- Reports --&gt; n11

    style s3 fill:transparent
    style s4 fill:transparent
    style s5 fill:transparent
    style s7 fill:transparent
    style s8 fill:transparent
</pre>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-conclusion-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: BI system overview
</figcaption>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>BI</category>
  <category>ETL</category>
  <guid>https://blog.frequentist.org/posts/20250106-bi-flowchart/</guid>
  <pubDate>Mon, 06 Jan 2025 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20250106-bi-flowchart/image.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>CV Week 2024</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20241218-cv-week/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In November 2024, the Yandex School of Data Analysis (YSDA) and Yandex conducted an open online intensive course on computer vision, focusing on generative diffusion models that underpin many visual services.</p>
</section>
<section id="format-and-structure" class="level2">
<h2 class="anchored" data-anchor-id="format-and-structure">Format and Structure</h2>
<p><strong>Dates</strong>: November 25–29, 2024.</p>
<p><strong>Format</strong>: All lectures and seminars were pre-recorded and broadcast on YouTube. During the broadcasts, participants could ask questions in the comments and interact with instructors and fellow participants via a dedicated Telegram channel.</p>
<p><strong>Participation and Certification</strong>: The broadcasts were open to all without selection. However, to receive a certificate, participants needed to complete Qualifying assignments on the Yandex Contest platform and submit a final project.</p>
</section>
<section id="lectures-and-seminars" class="level2">
<h2 class="anchored" data-anchor-id="lectures-and-seminars">Lectures and Seminars</h2>
<p>The intensive course’s schedule consisted of lectures and seminars. Five days from Monday to Friday, in the evenings, there were a lecture for approximately an hour and then a seminar where the instructor provided with the implementation of the different aspects of image generation approaches.</p>
<p><a href="https://www.youtube.com/live/E6fzcThxGK0?si=2NuhmHIAKBqXuKW3">YouTube Playlist</a></p>
<p><strong>November 25</strong></p>
<ul>
<li><p>Lecture 1: Introduction to Diffusion Models (Lecturer: Dmitry Baranchuk, Researcher, Yandex Research).</p></li>
<li><p>Seminar 1: Basic Implementation of Diffusion Models (Instructor: Sergey Kastrulin, Researcher, Yandex Research).</p></li>
</ul>
<p><strong>November 26</strong></p>
<ul>
<li><p>Lecture 2: Formulating Diffusion Models through Stochastic and Ordinary Differential Equations (Lecturer: Mikhail Romanov, Developer, Computer Vision Service).</p></li>
<li><p>Seminar 2: Implementing an Efficient Sampler (Instructor: Mikhail Romanov).</p></li>
</ul>
<p><strong>November 27</strong></p>
<ul>
<li><p>Lecture 3: Architectures of Diffusion Models, Training and Sampling Methods, and Text-to-Image Generation (Lecturer: Denis Kuznedelev, Researcher, Yandex Research).</p></li>
<li><p>Seminar 3: Generating Images from Text Descriptions (Instructor: Denis Kuznedelev).</p></li>
</ul>
<p><strong>November 28</strong></p>
<ul>
<li><p>Lecture 4: Distillation of Diffusion Models Using ODE-Based Methods (Lecturer: Nikita Starodubtsev, Researcher, Yandex Research ML Residency).</p></li>
<li><p>Lecture 5: Distillation of Diffusion Models Without ODEs (Lecturer: Dmitry Baranchuk).</p></li>
<li><p>Seminar 4: Implementing Consistent Models for Text-to-Image Generation (Instructor: Nikita Starodubtsev).</p></li>
</ul>
<p><strong>November 29</strong></p>
<ul>
<li><p>Lecture 6: Fine-Tuning Diffusion Models Using Reinforcement Learning Methods (Lecturer: Alexander Shishenya, Developer, Computer Vision Service).</p></li>
<li><p>Lecture 7: YandexART — Industrial Diffusion Model (Lecturer: Sergey Kastrulin).</p></li>
</ul>
</section>
<section id="qualifying-assignment" class="level2">
<h2 class="anchored" data-anchor-id="qualifying-assignment">Qualifying Assignment</h2>
<p>The Qualifying Assignment was a prerequisite for accessing the final project and comprised three programming tasks designed to assess participants’ proficiency in fundamental machine learning concepts and PyTorch implementation.</p>
<section id="reshape-a-tensor" class="level3">
<h3 class="anchored" data-anchor-id="reshape-a-tensor">1. Reshape a Tensor</h3>
<p>The first task required reshaping a list or tensor by swapping its first two dimensions without utilizing PyTorch or NumPy methods. For example:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bbmatrix%7D1%20&amp;%202%20&amp;%203%5C%5C4%20&amp;%205%20&amp;%206%5Cend%7Bbmatrix%7D"> should be transformed into <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bbmatrix%7D1%20&amp;%204%20%5C%5C%202%20&amp;%205%20%5C%5C%203%20&amp;%206%5Cend%7Bbmatrix%7D">.</p>
<p>This task tested participants’ understanding of tensor manipulation at a fundamental level, emphasizing the importance of grasping underlying data structures without relying on high-level library functions.</p>
</section>
<section id="encoder-and-decoder-architecture" class="level3">
<h3 class="anchored" data-anchor-id="encoder-and-decoder-architecture">2. Encoder and Decoder Architecture</h3>
<p>The second task involved implementing the encoder and decoder components of a Variational Autoencoder (VAE) architecture. VAEs are generative models that learn to represent data in a latent space, enabling the generation of new, similar data points. This task assessed participants’ ability to construct neural network architectures.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20241218-cv-week/vae.png" class="img-fluid figure-img"></p>
<figcaption>Variational autoencoder architecture</figcaption>
</figure>
</div>
</section>
<section id="vae-loss-function" class="level3">
<h3 class="anchored" data-anchor-id="vae-loss-function">3. VAE Loss Function</h3>
<p>The third task required identifying and correcting errors in the VAE loss function implementation. To validate the correctness of the function, participants trained the VAE and performed inference on the MNIST digits dataset. The VAE loss function typically comprises two components:</p>
<ul>
<li><p>Reconstruction Loss: Measures how well the decoder reconstructs the input data.</p></li>
<li><p>Kullback-Leibler (KL) Divergence: Regularizes the learned latent space to align with a predefined distribution, often a standard normal distribution.</p></li>
</ul>
<p>Accurate implementation of this loss function is crucial for the VAE to learn meaningful latent representations and generate coherent outputs.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20241218-cv-week/qualifying-mnist.png" class="img-fluid figure-img"></p>
<figcaption>Reconstructed digits using VAE</figcaption>
</figure>
</div>
<p>Each of the first two tasks was worth up to 2 points, while the third task could earn up to 4 points. A minimum of 6 points was required to pass, ensuring that participants had a solid grasp of the necessary concepts to proceed to the final project.</p>
</section>
</section>
<section id="final-project" class="level2">
<h2 class="anchored" data-anchor-id="final-project">Final Project</h2>
<p>In the final project, participants had to distill a multi-step diffusion model into a more efficient, few-step student model, significantly enhancing generation speed.</p>
<p>The project focused on implementing the Consistency Distillation framework, a method that accelerates diffusion models by enforcing self-consistency along learned trajectories.</p>
<p>Participants would apply this technique to distill the <a href="https://huggingface.co/stable-diffusion-v1-5/stable-diffusion-v1-5">Stable Diffusion 1.5</a> (SD 1.5) model, a latent text-to-image diffusion model capable of generating photo-realistic images from textual descriptions.</p>
<p>The project comprised eight tasks, each building upon the previous, guiding participants toward developing a proficient model capable of generating images in just four steps.</p>
<section id="teacher-model" class="level3">
<h3 class="anchored" data-anchor-id="teacher-model">Teacher Model</h3>
<p>The initial model for our experiments is Stable Diffusion 1.5, a pre-trained latent text-to-image diffusion model. This serves as the “teacher” model in our distillation process.</p>
<p>For the prompt: “A sad puppy with large eyes”, running the model with 50 steps and a guidance_scale of 7.5 produces the following high-quality images:</p>
<p><img src="https://blog.frequentist.org/posts/20241218-cv-week/sd-50-steps.png" class="img-fluid"></p>
<p>However, when the number of steps is reduced to 4, the output becomes blurry and lacks detail:</p>
<p><img src="https://blog.frequentist.org/posts/20241218-cv-week/sd-4-steps.png" class="img-fluid"></p>
<p>This demonstrates the trade-off between the number of sampling steps and image quality in diffusion models. Our goal is to bridge this gap by using techniques like Consistency Distillation to achieve similar quality with fewer steps.</p>
</section>
<section id="consistency-training" class="level3">
<h3 class="anchored" data-anchor-id="consistency-training">Consistency Training</h3>
<p>The model will be trained on a subset of the COCO Dataset comprising 5,000 images. To reduce memory consumption, we will train LoRA (Low-Rank Adaptation) adapters for the U-Net convolutional neural network instead of fine-tuning the entire model.</p>
<p>This approach significantly decreases the number of trainable parameters and activation memory, enhancing efficiency during training.</p>
<p>Additionally, implementing techniques such as gradient checkpointing can further reduce memory usage, albeit with a potential increase in training time.</p>
<p>By employing these strategies, we aim to achieve effective model performance while operating within the memory constraints of our training environment.</p>
<p>The result with <code>guidance_scale = 2</code> looks sharper, but the quality is still far from desired.</p>
<p><img src="https://blog.frequentist.org/posts/20241218-cv-week/cm.png" class="img-fluid"></p>
</section>
<section id="consistency-distillation" class="level3">
<h3 class="anchored" data-anchor-id="consistency-distillation">Consistency Distillation</h3>
<p>In the Consistency Distillation phase, we enhance the model’s quality by incorporating a teacher model within the U-Net architecture, utilizing LoRA adapters trained in the previous step. This integration refines the student’s learning process, leading to significantly improved image generation results.</p>
<p>Consistency Distillation is a technique that accelerates diffusion models by enforcing self-consistency along learned trajectories. By aligning the student model’s outputs with those of the teacher model, the student learns to produce high-quality images in fewer steps. Implementing this method with LoRA adapters allows for efficient training, as LoRA reduces the number of trainable parameters, thereby decreasing memory consumption and computational load.</p>
<p><img src="https://blog.frequentist.org/posts/20241218-cv-week/cd.png" class="img-fluid"></p>
</section>
<section id="multi-boundary-consistency-distillation" class="level3">
<h3 class="anchored" data-anchor-id="multi-boundary-consistency-distillation">Multi-boundary Consistency Distillation</h3>
<p>In the Multi-boundary Consistency Distillation phase, we draw inspiration from recent advancements in generative modeling, particularly the work by researchers from Google DeepMind. In their paper “Multistep Consistency Models” (<a href="https://arxiv.org/pdf/2403.06807">arXiv:2403.06807v3</a>), they propose a method that interpolates between consistency models and diffusion models, allowing for a trade-off between sampling speed and quality.</p>
<p>By employing 2 to 8 sampling steps, this approach achieves performance comparable to traditional diffusion models but with significantly reduced computational resources. This reduction in sampling steps leads to decreased memory usage and computational load, making the models more efficient without compromising output quality.</p>
<p>Implementing this technique involves training the model to maintain consistency across multiple steps, effectively enabling it to generate high-quality samples in fewer iterations. This advancement is particularly beneficial for applications requiring rapid generation or operating under resource constraints.</p>
<p><img src="https://blog.frequentist.org/posts/20241218-cv-week/mbcd.png" class="img-fluid"></p>
</section>
<section id="graded-assignments" class="level3">
<h3 class="anchored" data-anchor-id="graded-assignments">Graded Assignments</h3>
<p>There were 4 automatically graded assignments and one teacher graded assignment.</p>
<section id="implementation-of-ddim-solver-step" class="level4">
<h4 class="anchored" data-anchor-id="implementation-of-ddim-solver-step">1. Implementation of DDIM Solver Step</h4>
<p>In diffusion models, the forward diffusion process gradually transforms images into noise, following the distribution:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20q(%5Cmathbf%7Bx%7D_t%20%7C%20%5Cmathbf%7Bx%7D_0)=%20%7BN%7D(%5Cmathbf%7Bx%7D_t%20%7C%20%5Calpha_t%20%5Cmathbf%7Bx%7D_0,%20%5Csigma%5E2_t%20I)"></p>
<p>At time step <img src="https://latex.codecogs.com/png.latex?t">, the noisy image <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D_t"> can be represented as: <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D_t%20=%20%5Calpha_t%20%5Cmathbf%7Bx%7D_0%20+%20%5Csigma_t%20%5Cepsilon">, where <img src="https://latex.codecogs.com/png.latex?%5Cepsilon%7B%5Csim%7D%20%7BN%7D(0,%20I)">.</p>
<p>The goal of the diffusion model is to solve the inverse problem, reconstructing an image from noise. This reverse process is formulated as an ordinary differential equation (ODE):</p>
<p><img src="https://latex.codecogs.com/png.latex?dx%20=%20%5Cleft%5B%20f(%5Cmathbf%7Bx%7D,%20t)%20-%20%5Cfrac%7B1%7D%7B2%7D%20%5Cnabla_%7B%5Cmathbf%7Bx%7D_t%7D%20%5Clog%20p_t(%5Cmathbf%7Bx%7D)%20%5Cright%5D%20dt">, where <img src="https://latex.codecogs.com/png.latex?f(%5Cmathbf%7Bx%7D,%20t)"> is known from the given noise process, and <img src="https://latex.codecogs.com/png.latex?%5Cnabla_%7B%5Cmathbf%7Bx%7D_t%7D%20%5Clog%20p_t(%5Cmathbf%7Bx%7D_t)"> (<em>score function</em>) is estimated using a neural network: <img src="https://latex.codecogs.com/png.latex?s_%5Ctheta(%5Cmathbf%7Bx%7D_t,%20t)%20%5Capprox%20%5Cnabla_%7B%5Cmathbf%7Bx%7D_t%7D%20%5Clog%20p_t(%5Cmathbf%7Bx%7D_t)">.</p>
<p>Thus, having an estimate for <img src="https://latex.codecogs.com/png.latex?%5Cnabla_%7B%5Cmathbf%7Bx%7D_t%7D%20%5Clog%20p_t(%5Cmathbf%7Bx%7D)">, we can solve this ODE starting from random noise and generate a picture.</p>
<p>For this assignment, participants implemented the step from <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D_t"> to <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D_s"> using the Denoising Diffusion Implicit Models (DDIM) framework:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D_s%20=%20DDIM(%5Cepsilon_%5Ctheta,%20%5Cmathbf%7Bx%7D_t,%20t,%20s)%20=%20%5Calpha_s%20%5Ccdot%20%5Cleft(%5Cfrac%7B%5Cmathbf%7Bx%7D_t%20-%20%5Csigma_t%20%5Cepsilon_%5Ctheta%7D%7B%5Calpha_t%7D%20%5Cright)%20+%20%5Csigma_s%20%5Cepsilon_%5Ctheta"></p>
<p>Most of the function was pre-written by the instructors, but participants were required to correctly set <img src="https://latex.codecogs.com/png.latex?%5Calpha_t"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma_t"> using the DDIMScheduler. This task tested participants’ understanding of the underlying mathematical concepts and their ability to implement them in code.</p>
</section>
<section id="implementation-of-noise-process" class="level4">
<h4 class="anchored" data-anchor-id="implementation-of-noise-process">2. Implementation of Noise Process</h4>
<p>The second task involved implementing the function <code>q_sample(x, t, scheduler, noise)</code> to simulate the forward diffusion process. The function follows the mathematical formulation:</p>
<p><img src="https://latex.codecogs.com/png.latex?q(%5Cmathbf%7Bx%7D_t%20%7C%20%5Cmathbf%7Bx%7D_0)=%20%7BN%7D(%5Cmathbf%7Bx%7D_t%20%7C%20%5Calpha_t%20%5Cmathbf%7Bx%7D_0,%20%5Csigma%5E2_t%20I)"> where the noisy image <img src="https://latex.codecogs.com/png.latex?x_t"> at time <img src="https://latex.codecogs.com/png.latex?t"> is calculated as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D_t%20=%20%5Calpha_t%20%5Cmathbf%7Bx%7D_0%20+%20%5Csigma_t%20%5Cepsilon">, where <img src="https://latex.codecogs.com/png.latex?%5Cepsilon%7B%5Csim%7D%20%7BN%7D(0,%20I)">.</p>
<p>Participants were required to:</p>
<ol type="1">
<li><p>Use the <strong>scheduler</strong> to retrieve <img src="https://latex.codecogs.com/png.latex?%5Calpha_t"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma_t"> values for the given timestep <img src="https://latex.codecogs.com/png.latex?t">.</p></li>
<li><p>Generate random noise <img src="https://latex.codecogs.com/png.latex?%5Cepsilon%20%5Csim%20%5Cmathcal%7BN%7D(0,%20I)"> and apply it to the formula above to simulate the noisy image <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D_t">.</p></li>
<li><p>Handle edge cases for boundary points, ensuring the process remains valid when <img src="https://latex.codecogs.com/png.latex?t=0">.</p></li>
</ol>
<p>This assignment focused on implementing the forward diffusion process accurately while accounting for the nuances of boundary conditions, which added complexity to the task.</p>
</section>
<section id="consistency-training-1" class="level4">
<h4 class="anchored" data-anchor-id="consistency-training-1">3. Consistency Training</h4>
<p>Consistency distillation leverages the teacher model to obtain the second point on the ODE trajectory, which can also be computed using the DDIM formula. The task required participants to derive the function for this computation based on the definitions of the noise process and the score function.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cepsilon_%5Ctheta(x_t,%20t)%20=%20-%20%5Csigma_t%20s_%5Ctheta(x_t,%20t)"></p>
<p><img src="https://latex.codecogs.com/png.latex?s_%5Ctheta(x_t,%20t)%20%5Capprox%20%5Cnabla_%7Bx_t%7D%20%5Clog%20q(x_t)%20=%20%5Cmathop%7B%5Cmathbb%7BE%7D%7D_%7B%5Cmathbf%7Bx%7D%5Csim%20p_%7Bdata%7D%7D%5Cleft%20%5B%20%5Cnabla_%7B%5Cmathbf%7Bx%7D_t%7D%20%5Clog%20q(%5Cmathbf%7Bx%7D_t%20%7C%20%5Cmathbf%7Bx%7D)%20%5Cvert%20%5Cmathbf%7Bx%7D_t%20%5Cright%20%5D%20%5Capprox%20%5Cnabla_%7B%5Cmathbf%7Bx%7D_t%7D%20%5Clog%20q(%5Cmathbf%7Bx%7D_t%20%5Cvert%20%5Cmathbf%7Bx%7D)"></p>
</section>
<section id="multi-boundary-timesteps" class="level4">
<h4 class="anchored" data-anchor-id="multi-boundary-timesteps">4. Multi-boundary Timesteps</h4>
<p>The objective of this task was to implement the get_multi_boundary_timesteps function, which generates boundary points for multi-step consistency training. These boundary points define the timesteps used in sampling and play a critical role in the effectiveness of the distillation process.</p>
<p>The task itself was somewhat ambiguous, leaving room for interpretation. Participants were expected to:</p>
<ul>
<li>Understand how multi-boundary timesteps are utilized in multi-step consistency models. Implement the function to output the appropriate boundary points.</li>
<li>Ensure that the timesteps are well-distributed and align with the requirements of the consistency distillation framework.</li>
</ul>
</section>
<section id="generated-images" class="level4">
<h4 class="anchored" data-anchor-id="generated-images">5. Generated Images</h4>
<p>Once all the graded and non-graded tasks were completed, the next step was to train the Multi-boundary Consistency Model. This involved applying the techniques and frameworks developed in earlier tasks to produce high-quality generated images.</p>
<p>After training, participants were required to upload the trained model along with generated results for assessment. This provided an opportunity to showcase the practical implementation of multi-step consistency techniques.</p>
<p>The trained model was evaluated based on its ability to generate images that were consistent and high-quality, even with a reduced number of sampling steps.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout="[[1,1], [1]]">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="CV_week_cd.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Consistency Distillation"><img src="https://blog.frequentist.org/posts/20241218-cv-week/CV_week_cd.png" class="img-fluid figure-img" alt="Consistency Distillation"></a></p>
<figcaption>Consistency Distillation</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="CV_week_mbcd.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="Multi-boundary Consistency Distillation"><img src="https://blog.frequentist.org/posts/20241218-cv-week/CV_week_mbcd.png" class="img-fluid figure-img" alt="Multi-boundary Consistency Distillation"></a></p>
<figcaption>Multi-boundary Consistency Distillation</figcaption>
</figure>
</div>
</div>
</div>
</div>
<section id="sampling-prompts" class="level5">
<h5 class="anchored" data-anchor-id="sampling-prompts">Sampling Prompts</h5>
<ol type="1">
<li>A sad puppy with large eyes.</li>
<li>Astronaut in a jungle, cold color palette, muted colors, detailed, 8k.</li>
<li>A photo of beautiful mountain with realistic sunset and blue lake, highly detailed, masterpiece.</li>
<li>A girl with pale blue hair and a cami tank top.</li>
<li>A lighthouse in a giant wave, origami style.</li>
<li>Belle epoque, christmas, red house in the forest, photo realistic, 8k.</li>
<li>A small cactus with a happy face in the Sahara desert.</li>
<li>Green commercial building with refrigerator and refrigeration units outside.</li>
</ol>
</section>
</section>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Participating in YSDA’s intensive training programs has been both challenging and rewarding. My first experience was during <a href="https://shad.yandex.ru/gptweek">GPT Week</a> in 2023, which did not require a qualifying assignment. The final project involved training a model to summarize articles, with flexibility regarding the architecture and implementation details.</p>
<p>In contrast, CV Week 2024 presented a more rigorous experience. Both the qualifying assignment and the final project demanded significant effort, especially given my limited background in computer vision. This intensive pushed me to expand my knowledge and skills, making the experience both demanding and educational.</p>
<p>For those interested in exploring similar topics, YSDA offers a range of online courses. These resources can provide a solid foundation for tackling advanced subjects in data analysis and machine learning.</p>
<p>Source code and presentations can be found in my GitHub repository: <a href="https://github.com/AxesAccess/CV_week">CV_Week</a>.</p>


</section>

 ]]></description>
  <category>CompVis</category>
  <category>ML</category>
  <guid>https://blog.frequentist.org/posts/20241218-cv-week/</guid>
  <pubDate>Wed, 18 Dec 2024 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20241218-cv-week/image.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Using Airflow FileSensor for Triggering ETL Process</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20241105-airflow-filesensor/</link>
  <description><![CDATA[ 





<section id="abstract" class="level2">
<h2 class="anchored" data-anchor-id="abstract">Abstract</h2>
<p>In this article, we will discuss how to use the Airflow FileSensor to trigger an ETL process. We will walk through the process of setting up a FileSensor in Airflow and using it to monitor a directory for new files. Once a new file is detected, the ETL process will be triggered automatically. This can be a useful technique for automating data processing tasks that rely on the availability of new files.</p>
</section>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Airflow is a popular open-source platform for orchestrating complex data workflows. It allows users to define, schedule, and monitor workflows as directed acyclic graphs (DAGs). Airflow provides a wide range of operators that can be used to perform various tasks, such as executing SQL queries, transferring files, and sending emails.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20241105-airflow-filesensor/AirflowLogo.png" class="img-fluid figure-img" alt="Apache Airflow Logo"></p>
<figcaption>Apache Airflow Logo</figcaption>
</figure>
</div>
<p>One common use case for Airflow is to automate ETL (Extract, Transform, Load) processes. ETL processes involve extracting data from various sources, transforming it into a usable format, and loading it into a data warehouse or other storage system. Airflow provides operators that can be used to perform each step of the ETL process, making it easy to build and schedule complex data pipelines.</p>
<p>In this article, we will focus on the Extract step of the ETL process and discuss how to use the Airflow FileSensor to trigger an ETL process when new files become available.</p>
</section>
<section id="example-use-case" class="level2">
<h2 class="anchored" data-anchor-id="example-use-case">Example Use Case</h2>
<p>Suppose we have a source system that generates CSV files on a scheduled basis. We want to build an ETL process that reads these CSV files, transforms the data, and loads it into a database. To automate this process, we can use the Airflow FileSensor to monitor a directory for changes and trigger the ETL process.</p>
<p>To signal the availability of new files, we can program source system to add a new file to the directory after new CSV files are created. The FileSensor will detect the presence of the new file and trigger the ETL process automatically.</p>
</section>
<section id="setting-up-the-dag" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-dag">Setting up the DAG</h2>
<p>Trigger DAG can be set by creating a new Python file in the <code>dags</code> directory of your Airflow installation. For example, you can create a new file called <code>reports_trigger.py</code> with the following content:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pendulum</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Airflow.models.dag <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DAG</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Airflow.operators.bash <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BashOperator</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Airflow.sensors.filesystem <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> FileSensor</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Airflow.operators.trigger_dagrun <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> TriggerDagRunOperator</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Where to look for the file</span></span>
<span id="cb1-10">FILEPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/Reports/READY"</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The DAG to trigger</span></span>
<span id="cb1-12">DAG_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reports_uploader"</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Central European Time</span></span>
<span id="cb1-14">TZ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CET"</span></span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> DAG(</span>
<span id="cb1-17">    dag_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reports_trigger"</span>,</span>
<span id="cb1-18">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Monitors the appearance of a file and starts a DAG"</span>,</span>
<span id="cb1-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Every 2 hours</span></span>
<span id="cb1-20">    schedule<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5 */2 * * *"</span>,</span>
<span id="cb1-21">    start_date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pendulum.datetime(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2024</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, tz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>TZ),</span>
<span id="cb1-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Don't run backfill</span></span>
<span id="cb1-23">    catchup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb1-24">    tags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trigger"</span>],</span>
<span id="cb1-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only one run at a time</span></span>
<span id="cb1-26">    max_active_runs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-27">) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dag:</span>
<span id="cb1-28"></span>
<span id="cb1-29">    check_flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FileSensor(</span>
<span id="cb1-30">        task_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"check_flag"</span>,</span>
<span id="cb1-31">        filepath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>FILEPATH,</span>
<span id="cb1-32">    )</span>
<span id="cb1-33"></span>
<span id="cb1-34">    remove_flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BashOperator(</span>
<span id="cb1-35">        task_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"remove_flag"</span>,</span>
<span id="cb1-36">        bash_command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rm -f </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>FILEPATH<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb1-37">    )</span>
<span id="cb1-38"></span>
<span id="cb1-39">    trigger_dag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TriggerDagRunOperator(</span>
<span id="cb1-40">        task_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trigger_dag"</span>,</span>
<span id="cb1-41">        trigger_dag_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DAG_ID,</span>
<span id="cb1-42">        logical_date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pendulum.now().add(seconds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-43">    )</span>
<span id="cb1-44">    </span>
<span id="cb1-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the order of the tasks</span></span>
<span id="cb1-46">    check_flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> remove_flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> trigger_dag</span></code></pre></div>
<p>In this example, we define a new DAG called <code>reports_trigger</code> that monitors the appearance of a file <code>READY</code> in the <code>/mnt/Reports</code> directory. When a new file is detected, the next task <code>remove_flag</code> deletes it, and another DAG called <code>reports_uploader</code> is triggered for execution.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20241105-airflow-filesensor/GraphView.png" class="img-fluid figure-img" alt="DAG in Graph View"></p>
<figcaption>DAG in Graph View</figcaption>
</figure>
</div>
</section>
<section id="setting-up-the-source-system" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-source-system">Setting up the source system</h2>
<p>The source system should be programmed to create a new file named <code>READY</code> in the <code>/mnt/Reports</code> directory after new CSV files are created. There is a variety of ways to achieve this, depending on the source system and the tools available.</p>
<p>If the source system is a Windows machine, you can create a batch file that creates the <code>READY</code> file and schedule it to run after the CSV files are generated. For example, you can create a batch file called <code>create_flag.cmd</code> with the following content:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&gt;</span> C:\Users\admin\Reports\<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">%</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
<p>The argument would be the name of the file to create, <code>READY</code> in this case. If you use the Windows Task Scheduler, add new action to run the batch file with the argument <code>READY</code>.</p>
<p>If the source system is a Linux machine, you can create file using the <code>touch</code> command:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">touch</span> /mnt/Reports/READY</span></code></pre></div>
</section>
<section id="setting-up-the-etl-process" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-etl-process">Setting up the ETL Process</h2>
<p>The ETL process is defined within a distinct DAG named <code>reports_uploader</code>, located in a separate Python file in the <code>dags</code> directory of the Airflow installation.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this article, we discussed how to use the Airflow FileSensor to trigger an ETL process when new files become available and how to set up a DAG to monitor a directory for changes. We also discussed how to program the source system to create a new file to signal the availability of new data.</p>
<p>I hope this article has been helpful in understanding how to use the Airflow FileSensor for triggering ETL processes. If you have any further questions or comments, please feel free to leave them int the comments section.</p>


</section>

 ]]></description>
  <category>ETL</category>
  <category>Airflow</category>
  <guid>https://blog.frequentist.org/posts/20241105-airflow-filesensor/</guid>
  <pubDate>Tue, 05 Nov 2024 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20241105-airflow-filesensor/image.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>European Tech Salaries</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20240927-euro-tech-money/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Recently, I stumbled upon a <a href="https://www.reddit.com/r/cscareerquestionsEU/comments/1dcoczz/lets_collect_salaries_before_and_after_taxes_for/">Reddit post</a> where someone was gathering salary data from the tech sector throughout Europe. It piqued my interest to explore how these salaries vary among various countries and positions. So, I chose to employ R for data collection and analysis.</p>
</section>
<section id="data-collection" class="level2">
<h2 class="anchored" data-anchor-id="data-collection">Data Collection</h2>
<p>Let’s start by fetching the data from the Google Sheet.</p>
<details>
<summary>
Show the code
</summary>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">document <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1iTNwiAQ0s5iD6RqI7B30uWqQ8wNJqRnmHvxo5zRffu8"</span></span>
<span id="cb1-2">sheet <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"603717461"</span></span>
<span id="cb1-3">url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(</span>
<span id="cb1-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://docs.google.com/spreadsheets/d/%s/gviz/tq?tqx=out:csv&amp;sheet=%s"</span>,</span>
<span id="cb1-5">  document,</span>
<span id="cb1-6">  sheet</span>
<span id="cb1-7">)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">download.file</span>(url, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">destfile =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/euro-tech-money.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>)</span></code></pre></div>
</details>
<p>Once downloaded, we can load the data into our R environment.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/euro-tech-money.csv"</span>)</span></code></pre></div>
</details>
</div>
<p>The dataset consists of <b>572</b> observations in <b>12</b> columns named <code>Job.Title</code>, <code>Company</code>, <code>City</code>, <code>Seniority</code>, <code>Pre.Tax.TC</code>, <code>After.Tax.TC</code>, <code>Yearly.Savings</code>, <code>Lifestyle</code>, <code>Household.Size</code>, <code>Share.of.Household.Expenses</code>, <code>Country</code>, and <code>Timestamp</code>. See summary below.</p>
<details>
<summary>
Show summary
</summary>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>  Job.Title           Company              City            Seniority        
 Length:572         Length:572         Length:572         Length:572        
 Class :character   Class :character   Class :character   Class :character  
 Mode  :character   Mode  :character   Mode  :character   Mode  :character  
                                                                            
                                                                            
                                                                            
                                                                            
   Pre.Tax.TC      After.Tax.TC     Yearly.Savings    Lifestyle        
 Min.   : 13646   Min.   :  10000   Min.   : -2000   Length:572        
 1st Qu.: 48000   1st Qu.:  32600   1st Qu.:  8000   Class :character  
 Median : 70000   Median :  46500   Median : 17000   Mode  :character  
 Mean   : 85140   Mean   :  58791   Mean   : 23915                     
 3rd Qu.: 99600   3rd Qu.:  65190   3rd Qu.: 30000                     
 Max.   :700000   Max.   :1575000   Max.   :270000                     
 NA's   :11       NA's   :23        NA's   :68                         
 Household.Size  Share.of.Household.Expenses   Country         
 Min.   :1.000   Min.   :  0.0               Length:572        
 1st Qu.:1.000   1st Qu.: 65.0               Class :character  
 Median :2.000   Median :100.0               Mode  :character  
 Mean   :1.853   Mean   : 82.3                                 
 3rd Qu.:2.000   3rd Qu.:100.0                                 
 Max.   :7.000   Max.   :100.0                                 
 NA's   :22      NA's   :55                                    
  Timestamp        
 Length:572        
 Class :character  
 Mode  :character  
                   
                   
                   
                   </code></pre>
</div>
</div>
</details>
</section>
<section id="geography" class="level2">
<h2 class="anchored" data-anchor-id="geography">Geography</h2>
<p>Let’s take a look at the location of respondents. We’re going to load a map of Europe and plot the cities where the respondents are located. The map will also show the number of respondents in each city and their median salary in USD.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(giscoR)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(maps)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the map of Europe</span></span>
<span id="cb4-9">europe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gisco_get_countries</span>(</span>
<span id="cb4-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Europe"</span>,</span>
<span id="cb4-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resolution =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cache_dir =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/tmp/giscoR"</span></span>
<span id="cb4-13">)</span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the cities</span></span>
<span id="cb4-16">cities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> world.cities <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_upper</span>(country.etc) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_upper</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(name, country.etc, long, lat)</span>
<span id="cb4-19"></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change case in the column to title case</span></span>
<span id="cb4-21">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">City =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_title</span>(City))</span>
<span id="cb4-22"></span>
<span id="cb4-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Group responses data frame by the city</span></span>
<span id="cb4-24">by_city <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(data, City, Pre.Tax.TC) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(City) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb4-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resp_count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb4-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_salary =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(Pre.Tax.TC, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-29">  )</span>
<span id="cb4-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Join the cities and responses data frames</span></span>
<span id="cb4-31">by <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> City)</span>
<span id="cb4-32"></span>
<span id="cb4-33">by_city <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(cities, by_city, by)</span>
<span id="cb4-34"></span>
<span id="cb4-35">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> by_city <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(resp_count) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(name, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(name))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb4-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> europe,</span>
<span id="cb4-41">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>,</span>
<span id="cb4-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb4-43">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb4-45">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb4-46">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> long,</span>
<span id="cb4-47">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat,</span>
<span id="cb4-48">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> resp_count,</span>
<span id="cb4-49">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> median_salary</span>
<span id="cb4-50">    ),</span>
<span id="cb4-51">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb4-52">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_c</span>(</span>
<span id="cb4-54">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>,</span>
<span id="cb4-55">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400000</span>)</span>
<span id="cb4-56">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-59">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)</span>
<span id="cb4-60"></span>
<span id="cb4-61">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb4-62">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb4-63">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.margin =</span> grid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb4-64">)</span>
<span id="cb4-65"></span>
<span id="cb4-66"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"image.png"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot =</span> p1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb4-67"></span>
<span id="cb4-68">p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(</span>
<span id="cb4-69">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> by_city <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(resp_count) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>),</span>
<span id="cb4-70">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> long, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> name),</span>
<span id="cb4-71">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb4-72">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-73">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb4-74">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb4-75">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>),</span>
<span id="cb4-76">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.box.margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb4-77">  )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-geography" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-geography-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/fig-geography-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-geography-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Geography of respondents
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="salaries-by-city" class="level2">
<h2 class="anchored" data-anchor-id="salaries-by-city">Salaries by City</h2>
<p>The total number of cities is <b>105</b>. Below is a list of the top 10 and bottom 10 cities with at least 5 respondents, ranked by median salary. While these plots can provide a general idea of the salary distribution, it is not the best idea to compare salaries across cities directly, as the salary may vary depending on other factors like job title or seniority.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb5-2"></span>
<span id="cb5-3">cities_ranked <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(cities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"City"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(City) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_salary =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(Pre.Tax.TC), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resp_count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(resp_count <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(median_salary))</span>
<span id="cb5-9"></span>
<span id="cb5-10"></span>
<span id="cb5-11">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">city_rank =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(City <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> cities_ranked<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>City[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Other"</span>))</span>
<span id="cb5-13">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">city_rank =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(City <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span>(cities_ranked, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>City, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tail"</span>, city_rank))</span>
<span id="cb5-15">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">city_rank =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(city_rank, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tail"</span>)))</span>
<span id="cb5-17"></span>
<span id="cb5-18">xlim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb5-19">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Pre.Tax.TC)</span>
<span id="cb5-21">)</span>
<span id="cb5-22"></span>
<span id="cb5-23">data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(cities_ranked, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"City"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"City"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(city_rank <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tail"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb5-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(City), Pre.Tax.TC, median),</span>
<span id="cb5-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Pre.Tax.TC</span>
<span id="cb5-29">  )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(city_rank), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> median_salary)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_c</span>(</span>
<span id="cb5-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log"</span>,</span>
<span id="cb5-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>,</span>
<span id="cb5-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">begin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>,</span>
<span id="cb5-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">end =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.85</span>,</span>
<span id="cb5-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400000</span>)</span>
<span id="cb5-38">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> xlim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb5-43">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb5-44">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb5-45">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-top-cities" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-top-cities-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/fig-top-cities-1.png" class="img-fluid figure-img" width="768">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-top-cities-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Top and bottom cities by median salary
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="salaries-by-country-and-job-title" class="level2">
<h2 class="anchored" data-anchor-id="salaries-by-country-and-job-title">Salaries by Country and Job Title</h2>
<p>Let’s visualize the median salary by country. Since salaries vary by position, it’s important to include job titles on the axis. However, with <b>249</b> distinct job titles, we need to group them into broader categories for clarity.</p>
<p>In the following plot, the size of the point represents the number of respondents, and the color represents the median salary. The text on the plot shows the median salary for each country and job category.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(cities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"City"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>))</span>
<span id="cb6-2"></span>
<span id="cb6-3">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/job-categories.csv"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Job.Title"</span>)</span>
<span id="cb6-4"></span>
<span id="cb6-5">country_job_title <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to long format</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Country, Job.Category) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb6-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resp_count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb6-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_salary =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(Pre.Tax.TC)</span>
<span id="cb6-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb6-14"></span>
<span id="cb6-15"></span>
<span id="cb6-16">country_job_title <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Job.Category, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(Country, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(Country)))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> resp_count, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> median_salary), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke =</span> T, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_c</span>(</span>
<span id="cb6-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log"</span>,</span>
<span id="cb6-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>,</span>
<span id="cb6-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200000</span>)</span>
<span id="cb6-23">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size_area</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(</span>
<span id="cb6-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb6-27">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(Country, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(Country)))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(resp_count) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb6-28">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(median_salary, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">big.mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>),</span>
<span id="cb6-29">    ),</span>
<span id="cb6-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb6-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb6-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey30"</span>,</span>
<span id="cb6-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb6-34">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb6-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb6-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb6-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb6-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># legend.position = "right",</span></span>
<span id="cb6-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># legend.key.height = unit(20, "pt"),</span></span>
<span id="cb6-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># legend.key.width = unit(5, "pt"),</span></span>
<span id="cb6-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># legend.box.margin = margin(0, 0, 0, 10),</span></span>
<span id="cb6-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># legend.title = element_blank()</span></span>
<span id="cb6-45">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-salaries-balloon-plot" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-salaries-balloon-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/fig-salaries-balloon-plot-1.png" class="img-fluid figure-img" width="768">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-salaries-balloon-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Median salary by country and job title
</figcaption>
</figure>
</div>
</div>
</div>
<p>As we can see, salaries vary significantly by country and job title. Directly comparing salaries across these groups can be misleading due to differences in other influencing factors. To better understand the contribution of each factor, let’s build a linear regression model that accounts for these variables and potentially others, while controlling for confounding factors.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(cities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"City"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>))</span>
<span id="cb7-2">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/job-categories.csv"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Job.Title"</span>)</span>
<span id="cb7-3">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Pre.Tax.TC <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Job.Category <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Seniority, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data1)</span></code></pre></div>
</details>
</div>
</section>
<section id="factors-affecting-salary" class="level2">
<h2 class="anchored" data-anchor-id="factors-affecting-salary">Factors Affecting Salary</h2>
<p>The linear model, built using <code>Country</code>, <code>Job Category</code>, and <code>Seniority</code>, demonstrates decent predictive power, with an adjusted R-squared value of <b>0.82</b>. The model’s coefficients represent the effect (in USD) of each factor on salary. Let’s visualize these coefficients to gain a clearer understanding of the impact of each factor.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tibble)</span>
<span id="cb8-2"></span>
<span id="cb8-3">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">effect =</span> Estimate,</span>
<span id="cb8-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Std..Error</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>,</span>
<span id="cb8-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Pr...t..</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>,</span>
<span id="cb8-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">significant =</span> p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb8-11">  )</span>
<span id="cb8-12"></span>
<span id="cb8-13">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb8-16">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>,</span>
<span id="cb8-17">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Job.Category"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Job Category"</span>,</span>
<span id="cb8-18">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seniority"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seniority"</span></span>
<span id="cb8-19">    )</span>
<span id="cb8-20">  )</span>
<span id="cb8-21"></span>
<span id="cb8-22">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, value))</span>
<span id="cb8-23">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Job.Category"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, value))</span>
<span id="cb8-24">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seniority"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, value))</span>
<span id="cb8-25"></span>
<span id="cb8-26">country_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(variable <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(effect))</span>
<span id="cb8-29">country_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> country_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rownumber =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(country_coef))</span>
<span id="cb8-30"></span>
<span id="cb8-31">xlim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb8-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>error),</span>
<span id="cb8-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>error)</span>
<span id="cb8-34">)</span>
<span id="cb8-35">xscale <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150000</span>)</span></code></pre></div>
</details>
</div>
<p>The plot below illustrates the effect of each country on salary. The dot represents the estimated effect, while the error bars show the standard error. The color of the plot elements and the accompanying text indicate the significance of the effect. Only a few countries have a <em>statistically</em> significant impact on salary at the 0.05 level. However, it is generally better practice to consider the overall differences in salaries across countries.</p>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">country_coef[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> effect, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(value, effect), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> significant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbarh</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> error),</span>
<span id="cb9-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-6">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(p.value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))),</span>
<span id="cb9-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb9-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb9-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span>,</span>
<span id="cb9-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb9-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb9-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb9-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb9-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb9-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span></span>
<span id="cb9-18">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> xlim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> xscale, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb9-24">country_coef[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> effect, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(value, effect), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> significant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbarh</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> error),</span>
<span id="cb9-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-29">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(p.value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))),</span>
<span id="cb9-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb9-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb9-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span>,</span>
<span id="cb9-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb9-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb9-36">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb9-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb9-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb9-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span></span>
<span id="cb9-41">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> xlim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> xscale, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
</details>
<div id="coefficients-plot" class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div id="fig-coefficients-plot-left" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-coefficients-plot-left-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/fig-coefficients-plot-left-1.png" class="img-fluid figure-img" width="384">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-coefficients-plot-left-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Effect of country on salary
</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/coefficients-plot-right-1.png" class="img-fluid figure-img" width="384"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
<p>Next two plots show the effect of job category and seniority on the salary. The interpretation is similar to the previous plot.</p>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(variable <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Job Category"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> effect, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(value, effect), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> significant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbarh</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> error),</span>
<span id="cb10-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb10-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(p.value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))),</span>
<span id="cb10-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb10-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb10-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span>,</span>
<span id="cb10-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb10-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb10-14">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb10-20">model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(variable <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seniority"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace</span>(value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Senior Staff / "</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> effect, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(value, effect), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> significant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbarh</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> error),</span>
<span id="cb10-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb10-27">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(p.value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))),</span>
<span id="cb10-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb10-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb10-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span>,</span>
<span id="cb10-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb10-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb10-34">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb10-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb10-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span></span>
<span id="cb10-38">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma)</span></code></pre></div>
</details>
<div id="coefficients-plot-jobs-seniority" class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div id="fig-coefficients-plot-jobs" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-coefficients-plot-jobs-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/fig-coefficients-plot-jobs-1.png" class="img-fluid figure-img" width="384">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-coefficients-plot-jobs-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Effect of job title on salary
</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div id="fig-coefficients-plot-seniority" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-coefficients-plot-seniority-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/fig-coefficients-plot-seniority-1.png" class="img-fluid figure-img" width="384">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-coefficients-plot-seniority-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: Effect of seniority on salary
</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="taxation" class="level2">
<h2 class="anchored" data-anchor-id="taxation">Taxation</h2>
<p>Net salary is what matters most to employees, but it differs from gross salary. Taxes and social security contributions can significantly reduce take-home pay. Let’s calculate the net salary for each respondent and visualize the distribution of net salaries by country.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb11-2"></span>
<span id="cb11-3">net_by_country <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(data, Country, City, Pre.Tax.TC, After.Tax.TC) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(cities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"City"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tax =</span> Pre.Tax.TC <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> After.Tax.TC) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Country) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb11-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">After.Tax.TC =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(After.Tax.TC, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb11-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tax =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Tax, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb11-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Net =</span> After.Tax.TC,</span>
<span id="cb11-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tax.Percent =</span> Tax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (Net <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Tax)</span>
<span id="cb11-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"variable"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Country, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Net, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Tax.Percent)</span>
<span id="cb11-14"></span>
<span id="cb11-15">net_by_country<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>variable <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb11-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(net_by_country<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>variable, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tax"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"After.Tax.TC"</span>))</span>
<span id="cb11-17"></span>
<span id="cb11-18">net_by_country<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb11-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(net_by_country<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country,</span>
<span id="cb11-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(net_by_country<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(net_by_country<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Net)])</span>
<span id="cb11-21">  )</span>
<span id="cb11-22"></span>
<span id="cb11-23">net_by_country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> variable)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(</span>
<span id="cb11-27">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(variable <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tax"</span>,</span>
<span id="cb11-28">      scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(Tax.Percent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb11-29">    )),</span>
<span id="cb11-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_stack</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb11-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey30"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb11-32">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-net-salary" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-net-salary-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/fig-net-salary-1.png" class="img-fluid figure-img" width="768">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-net-salary-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;7: Net salary by country
</figcaption>
</figure>
</div>
</div>
</div>
<p>We can see that the tax burden varies significantly across countries. While the net salary is the most important factor for employees, it is also important to consider the cost of living in each country.</p>
</section>
<section id="cost-of-living" class="level2">
<h2 class="anchored" data-anchor-id="cost-of-living">Cost of Living</h2>
<p>We have net salary, but how far does it go in each country? Let’s calculate the cost of living for each respondent and visualize the distribution of costs by country.</p>
<p>We have the yearly savings for each respondent, which is the difference between the net salary and the cost of living. Having known household size and share of household expenses, we can calculate the cost of living for a household of a certain size. For this, we are going to employ the linear regression.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(cities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"City"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>))</span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># let's exclude unrealistic values</span></span>
<span id="cb12-3">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Share.of.Household.Expenses <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb12-4">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Yearly.Savings <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> After.Tax.TC)</span>
<span id="cb12-5"></span>
<span id="cb12-6">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cost.of.Living =</span> (After.Tax.TC <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Yearly.Savings) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Share.of.Household.Expenses <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># let's convert Household.Size to a factor</span></span>
<span id="cb12-8">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Household.Size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(Household.Size)))</span>
<span id="cb12-9"></span>
<span id="cb12-10">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Cost.of.Living <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Household.Size, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data1)</span>
<span id="cb12-11"></span>
<span id="cb12-12">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb12-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">effect =</span> Estimate,</span>
<span id="cb12-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Std..Error</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>,</span>
<span id="cb12-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Pr...t..</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>,</span>
<span id="cb12-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">significant =</span> p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb12-20">  )</span>
<span id="cb12-21"></span>
<span id="cb12-22">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb12-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb12-25">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>,</span>
<span id="cb12-26">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Household.Size"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Household Size"</span>,</span>
<span id="cb12-27">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lifestyle"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lifestyle"</span></span>
<span id="cb12-28">    )</span>
<span id="cb12-29">  )</span>
<span id="cb12-30"></span>
<span id="cb12-31">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, value))</span>
<span id="cb12-32">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Household.Size"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, value))</span>
<span id="cb12-33">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lifestyle"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, value))</span>
<span id="cb12-34"></span>
<span id="cb12-35">country_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(variable <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(effect))</span>
<span id="cb12-38">country_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> country_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rownumber =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(country_coef))</span>
<span id="cb12-40"></span>
<span id="cb12-41">xlim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb12-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>error),</span>
<span id="cb12-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>error)</span>
<span id="cb12-44">)</span>
<span id="cb12-45">xscale <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span>)</span></code></pre></div>
</details>
</div>
<p>The model <code>Cost.of.Living ~ 0 + Country + Household.Size</code> has an adjusted R-squared value of <b>0.75</b>. We will not use <code>Lifestyle</code> as a factor in the model, as some of the levels have a small number of observations.</p>
<p>Let’s look at the coefficients for the country variable. Basically, the effect represents cost of living for a single person.</p>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">country_coef[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> effect, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(value, effect), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> significant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbarh</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> error),</span>
<span id="cb13-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb13-6">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(p.value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))),</span>
<span id="cb13-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb13-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb13-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span>,</span>
<span id="cb13-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb13-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb13-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb13-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb13-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb13-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span></span>
<span id="cb13-18">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> xlim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> xscale, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb13-24">country_coef[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb13-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> effect, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(value, effect), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> significant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbarh</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> error),</span>
<span id="cb13-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb13-29">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(p.value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))),</span>
<span id="cb13-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb13-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb13-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span>,</span>
<span id="cb13-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb13-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb13-36">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb13-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb13-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb13-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span></span>
<span id="cb13-41">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> xlim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> xscale, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
</details>
<div id="col-coefficients-plot" class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div id="fig-cost-plot-left" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-cost-plot-left-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/fig-cost-plot-left-1.png" class="img-fluid figure-img" width="384">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-cost-plot-left-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;8: Effect of country on cost of living
</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/cost-plot-right-1.png" class="img-fluid figure-img" width="384"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
<p>Next, we will look at the effect of household size on the cost of living. As expected, total cost of living for the two people is higher than for a single person, but the cost per person is lower for a larger household.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">xscale <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>)</span>
<span id="cb14-2">xlim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000</span>)</span>
<span id="cb14-3"></span>
<span id="cb14-4">model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(variable <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Household Size"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> effect, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(value, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(value)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> significant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbarh</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> error),</span>
<span id="cb14-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb14-10">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(p.value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))),</span>
<span id="cb14-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb14-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb14-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span>,</span>
<span id="cb14-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb14-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb14-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb14-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb14-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb14-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span></span>
<span id="cb14-22">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> xlim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> xscale, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-cost-plot-household" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-cost-plot-household-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/fig-cost-plot-household-1.png" class="img-fluid figure-img" width="384">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-cost-plot-household-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;9: Effect of household size on cost of living
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="savings" class="level2">
<h2 class="anchored" data-anchor-id="savings">Savings</h2>
<p>Finally, let’s look at the distribution of yearly savings by country. We will employ the same approach as before, using a linear regression model to understand the factors affecting savings. We will use <code>Country</code>, <code>Household.Size</code>, <code>Job.Category</code>, <code>Seniority</code>, and <code>Share.of.Household.Expenses</code> as predictors.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(cities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"City"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>))</span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># let's exclude unrealistic values</span></span>
<span id="cb15-3">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Share.of.Household.Expenses <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb15-4">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Yearly.Savings <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> After.Tax.TC)</span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># let's convert Household.Size to a factor</span></span>
<span id="cb15-7">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Household.Size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(Household.Size)))</span>
<span id="cb15-8">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Share.of.Household.Expenses =</span> Share.of.Household.Expenses <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb15-9">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/job-categories.csv"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Job.Title"</span>)</span>
<span id="cb15-10"></span>
<span id="cb15-11">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Yearly.Savings <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Household.Size <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Job.Category <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Seniority <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Share.of.Household.Expenses, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data1)</span>
<span id="cb15-12"></span>
<span id="cb15-13">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb15-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">effect =</span> Estimate,</span>
<span id="cb15-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Std..Error</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>,</span>
<span id="cb15-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Pr...t..</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>,</span>
<span id="cb15-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">significant =</span> p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb15-21">  )</span>
<span id="cb15-22"></span>
<span id="cb15-23">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb15-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb15-26">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>,</span>
<span id="cb15-27">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Household.Size"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Household Size"</span>,</span>
<span id="cb15-28">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lifestyle"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lifestyle"</span></span>
<span id="cb15-29">    )</span>
<span id="cb15-30">  )</span>
<span id="cb15-31"></span>
<span id="cb15-32">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, value))</span>
<span id="cb15-33">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Household.Size"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, value))</span>
<span id="cb15-34">model_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lifestyle"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, value))</span>
<span id="cb15-35"></span>
<span id="cb15-36">country_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(variable <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(effect))</span>
<span id="cb15-39">country_coef <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> country_coef <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rownumber =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(country_coef))</span>
<span id="cb15-40"></span>
<span id="cb15-41">xlim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb15-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>error),</span>
<span id="cb15-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> country_coef<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>error)</span>
<span id="cb15-44">)</span>
<span id="cb15-45">xscale <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75000</span>)</span></code></pre></div>
</details>
</div>
<p>This model performs on a mediocre level, with an adjusted R-squared value of <b>0.56</b>. The coefficients for the country variable represent the expected yearly savings for a single person.</p>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">country_coef[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> effect, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(value, effect), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> significant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbarh</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> error),</span>
<span id="cb16-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb16-6">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(p.value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))),</span>
<span id="cb16-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb16-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb16-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span>,</span>
<span id="cb16-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb16-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb16-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> xlim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> xscale, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb16-20">country_coef[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> effect, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(value, effect), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> significant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbarh</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> effect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> error),</span>
<span id="cb16-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb16-25">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(p.value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))),</span>
<span id="cb16-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb16-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb16-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span>,</span>
<span id="cb16-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb16-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb16-32">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb16-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb16-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb16-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey55"</span></span>
<span id="cb16-37">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> xlim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> xscale, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
</details>
<div id="savings-coefficients-plot" class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div id="fig-savings-plot-left" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-savings-plot-left-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/fig-savings-plot-left-1.png" class="img-fluid figure-img" width="384">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-savings-plot-left-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;10: Effect of country on yearly savings
</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240927-euro-tech-money/index_files/figure-html/savings-plot-right-1.png" class="img-fluid figure-img" width="384"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
<p>Only a few countries show a statistically significant impact on yearly savings. While differences in salary and cost of living across countries and roles are concrete factors, individual spending habits and lifestyle choices play an even more significant role in determining yearly savings.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This analysis offers several key insights. While the following conclusions are statistically significant at the 0.05 level, they may not apply to every individual case.</p>
<ul>
<li><p>The top three countries for <strong>gross salary</strong> are Belgium, Switzerland, and the United Kingdom. These same countries also lead in <strong>net salary</strong>.</p></li>
<li><p>Belgium has the <strong>highest tax burden</strong>, followed by Germany and the UK.</p></li>
<li><p>Switzerland has the <strong>highest cost of living</strong>, with Belgium and the UK also ranking high. Hungary, Spain, and Italy are among the <strong>least expensive countries</strong>.</p></li>
<li><p>The <strong>highest yearly savings</strong> in the sample are found in Georgia and Romania, followed by the UK, Switzerland, and Denmark.</p></li>
</ul>


</section>

 ]]></description>
  <category>Money</category>
  <category>R</category>
  <guid>https://blog.frequentist.org/posts/20240927-euro-tech-money/</guid>
  <pubDate>Fri, 27 Sep 2024 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20240927-euro-tech-money/image.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Python Library for Russian Macroeconomics Data</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20240821-sophisthse/</link>
  <description><![CDATA[ 





<p>The article introduces a Python library called <code>sophisthse</code> that provides access to Russian macroeconomic statistics time series published by the National Research University Higher School of Economics (HSE). The library aims to simplify the process of working with Russian macroeconomic data and facilitate the analysis of economic trends in the country. The article demonstrates how to use the library to list available time series, download data, and visualize the time series data.</p>
<p><img src="https://blog.frequentist.org/posts/20240821-sophisthse/banner.png" class="img-fluid"></p>
<section id="acknowledgments" class="level2">
<h2 class="anchored" data-anchor-id="acknowledgments">Acknowledgments</h2>
<p>The library is a port of the <code>sophisthse</code> R package developed by <a href="https://github.com/bdemeshev">Boris Demeshev</a>. The original package provides similar functionality for working with Russian macroeconomic data in R. The Python version of the library is designed to offer the same features to Python users interested in analyzing Russian economic indicators.</p>
</section>
<section id="source-data" class="level2">
<h2 class="anchored" data-anchor-id="source-data">Source Data</h2>
<p>The <a href="http://sophist.hse.ru/hse/nindex.shtml">sophist.hse.ru</a> website contains wide range of Russian macroeconomic statistics time series, including data on GDP, inflation, unemployment, industrial production, retail sales, and more. The data is originally sourced from the Federal State Statistics Service of the Russian Federation (Rosstat) and other official sources.</p>
</section>
<section id="features" class="level2">
<h2 class="anchored" data-anchor-id="features">Features</h2>
<p>The <code>sophisthse</code> library provides the following features:</p>
<ul>
<li>Listing available tables with time series data</li>
<li>Downloading and caching time series data</li>
</ul>
</section>
<section id="installation" class="level2">
<h2 class="anchored" data-anchor-id="installation">Installation</h2>
<p>You can install the library using <code>pip</code>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install sophisthse</span></code></pre></div>
</section>
<section id="usage" class="level2">
<h2 class="anchored" data-anchor-id="usage">Usage</h2>
<p>Here is an example of how to use the library to download and plot the time series data.</p>
<section id="list-available-time-series" class="level3">
<h3 class="anchored" data-anchor-id="list-available-time-series">List Available Time Series</h3>
<p>Time series are published on the <a href="http://sophist.hse.ru/hse/nindex.shtml">sophist.hse.ru</a> website. Initializing <code>sophisthse</code> class will download the list of available tables. You can list the available tables using the <code>list_tables</code> method:</p>
<div id="128ddfa2" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sophisthse <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sophisthse</span>
<span id="cb2-2"></span>
<span id="cb2-3">sph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sophisthse()</span>
<span id="cb2-4">tables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sph.list_tables()</span>
<span id="cb2-5">tables</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">date</th>
<th data-quarto-table-cell-role="th">name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2020-05-27 15:46:00</td>
<td>AGR_M_I - Copy</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2024-08-08 09:10:00</td>
<td>AGR_M_I</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2024-08-08 09:10:00</td>
<td>AGR_Q_I</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2024-02-11 19:10:00</td>
<td>AGR_Y_DIRI</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2024-07-26 20:04:00</td>
<td>APCI3N</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">284</td>
<td>2010-03-29 12:57:00</td>
<td>vrp</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">285</td>
<td>2010-03-30 12:41:00</td>
<td>vrp_r</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">286</td>
<td>2024-08-08 09:12:00</td>
<td>WAG_M</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">287</td>
<td>2024-06-07 15:03:00</td>
<td>WAG_Q</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">288</td>
<td>2024-03-13 19:36:00</td>
<td>WAG_Y</td>
</tr>
</tbody>
</table>

<p>289 rows × 2 columns</p>
</div>
</div>
</div>
<p>The column named <code>date</code> contains timestamp of the latest update. The dates in this column hint that some tables may be out of date. Let’s take a look at the date of the latest update of the tables.</p>
<div id="f0589363" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">tables[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tables[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>].dt.year</span>
<span id="cb3-2">tables.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>).size().plot(kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bar"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240821-sophisthse/index_files/figure-html/cell-4-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="575" height="450"></p>
</figure>
</div>
</div>
</div>
<p>The 116 out of 289 are being updated through 2024. Let’s take a look at the most recently updated tables.</p>
<div id="67ee61c6" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">tables[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tables[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>].dt.date</span>
<span id="cb4-2">(</span>
<span id="cb4-3">    tables.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>)</span>
<span id="cb4-4">    .agg({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>.join(x)})</span>
<span id="cb4-5">    .reset_index()</span>
<span id="cb4-6">    .sort_values(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>, ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-7">    .head()</span>
<span id="cb4-8">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">date</th>
<th data-quarto-table-cell-role="th">name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">38</td>
<td>2024-08-08</td>
<td>AGR_M_I, AGR_Q_I, BBR_EA2_M_I, BBR_EA2_Q_I, CN...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">37</td>
<td>2024-07-26</td>
<td>APCI3N, BMPM3N, CCPM3N, CPPNF3N, ECOG3N, EMAM3...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">36</td>
<td>2024-06-07</td>
<td>WAG_Q</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">35</td>
<td>2024-06-06</td>
<td>GOV_Q, M_Q</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">34</td>
<td>2024-04-05</td>
<td>INVFC_Q, INVFC_Q_I</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="download-and-plot-time-series" class="level3">
<h3 class="anchored" data-anchor-id="download-and-plot-time-series">Download and Plot Time Series</h3>
<p>According to the <a href="http://sophist.hse.ru/hse/nindex.shtml">sophist.hse.ru</a> website table <code>AGR_M_I</code> provides the index of real agricultural production in column <code>AGR_M_DIRI</code>, and seasonally adjusted one in the <code>AGR_M_DIRI_SA</code>. Let’s download it and take a look at the data.</p>
<div id="e4063bc9" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">agr_m_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sph.get_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AGR_M_I"</span>)</span>
<span id="cb5-2">agr_m_i.tail()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">AGR_M_DIRI</th>
<th data-quarto-table-cell-role="th">AGR_M_DIRI_SA</th>
</tr>
<tr class="even">
<th data-quarto-table-cell-role="th">T</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-02</td>
<td>110.0</td>
<td>353.3</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2024-03</td>
<td>169.6</td>
<td>355.7</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-04</td>
<td>190.3</td>
<td>357.2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2024-05</td>
<td>208.4</td>
<td>358.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-06</td>
<td>213.2</td>
<td>358.5</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>After calling <code>get_table</code>, the data is cached locally. The next time <code>get_table</code> is called, the data will be loaded from the cache. However, if the table is updated on the server, which is checked when the <code>sophisthse</code> class is initialized, the new data will be loaded from the website.</p>
</div>
</div>
<p>The method returns a pandas DataFrame, so we can plot the data using the <code>plot</code> method.</p>
<div id="a1b24d9f" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">agr_m_i.plot()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240821-sophisthse/index_files/figure-html/cell-7-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="593" height="429"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="additional-example" class="level3">
<h3 class="anchored" data-anchor-id="additional-example">Additional Example</h3>
<p>According to the <a href="http://sophist.hse.ru/hse/nindex.shtml">sophist.hse.ru</a> website table <code>FINMAR_M</code> contains data on the financial market.</p>
<div id="51ffa3ad" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">finmar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sph.get_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FINMAR_M"</span>)</span>
<span id="cb7-2">finmar.tail()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">RDEXRO_M</th>
<th data-quarto-table-cell-role="th">RDEXRM_M</th>
<th data-quarto-table-cell-role="th">RTS_M</th>
<th data-quarto-table-cell-role="th">IB_M</th>
<th data-quarto-table-cell-role="th">GKO_M</th>
<th data-quarto-table-cell-role="th">DEP_M</th>
<th data-quarto-table-cell-role="th">CR_M</th>
</tr>
<tr class="even">
<th data-quarto-table-cell-role="th">T</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-03</td>
<td>92.37</td>
<td>92.35</td>
<td>1131.21</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2024-04</td>
<td>91.78</td>
<td>93.05</td>
<td>1165.23</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-05</td>
<td>89.79</td>
<td>90.05</td>
<td>1185.57</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2024-06</td>
<td>85.75</td>
<td>85.75</td>
<td>1134.30</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-07</td>
<td>86.33</td>
<td>86.11</td>
<td>1092.61</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>The first columns are:</p>
<ul>
<li><code>RDEXRO_M</code> - Official exchange rate of the ruble against the US dollar.</li>
<li><code>RDEXRM_M</code> - Exchange rate of the US dollar on the Moscow Exchange.</li>
<li><code>RTS_M</code> - Average <a href="https://en.wikipedia.org/wiki/RTS_Index">RTS index</a>.</li>
</ul>
<p>The last four columns show NaNs for the most recent periods. Let’s take a look at the missing values.</p>
<div id="65d5b75f" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">sns.heatmap(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>finmar.isnull(), cbar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240821-sophisthse/index_files/figure-html/cell-9-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="623" height="480"></p>
</figure>
</div>
</div>
</div>
<p>The heatmap shows that the data in the <code>IB_M</code>, <code>GKO_M</code>, <code>DEP_M</code>, and <code>CR_M</code> columns is not available for the recent years, while the <code>RDEXRO_M</code>, <code>RDEXRM_M</code>, and <code>RTS_M</code> columns have complete data.</p>
<p>Let’s plot the <code>RTS_M</code> column. Due to the economic fluctuations, the RTS index has a lot of volatility. We will add the moving average to the plot.</p>
<div id="0d3f3f2f" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">finmar[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RTS_M"</span>].plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RTS index"</span>)</span>
<span id="cb9-2">finmar[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RTS_M"</span>].rolling(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).mean().plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12-months MA"</span>)</span>
<span id="cb9-3">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240821-sophisthse/index_files/figure-html/cell-10-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="592" height="429"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="further-investigation" class="level2">
<h2 class="anchored" data-anchor-id="further-investigation">Further Investigation</h2>
<p>Looking at the tables, one can assume that the suffixes <code>_M</code>, <code>_Q</code> and <code>_Y</code> in the names mean that the data was sampled monthly, quarterly and annually, respectively. Let’s check this assumption.</p>
<div id="df7c7284" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> guess_period(name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb10-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_M"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> name:</span>
<span id="cb10-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span></span>
<span id="cb10-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Q"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> name:</span>
<span id="cb10-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quarter"</span></span>
<span id="cb10-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Y"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> name:</span>
<span id="cb10-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span></span>
<span id="cb10-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unknown"</span></span>
<span id="cb10-9"></span>
<span id="cb10-10"></span>
<span id="cb10-11">tables[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"period"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tables[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(guess_period)</span>
<span id="cb10-12"></span>
<span id="cb10-13">tables.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"period"</span>).size().plot(kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bar"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240821-sophisthse/index_files/figure-html/cell-11-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="575" height="477"></p>
</figure>
</div>
</div>
</div>
<p>The bar plot shows that the assumption is partially correct. There are tables with unknown sampling frequency. This information can be drawn from the actual series after downloading data. It’s not necessary for demonstrative purposes, so we will skip this step.</p>
<p>Let’s calculate the correlation matrix for the monthly data.</p>
<div id="64b1af90" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> time <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sleep</span>
<span id="cb11-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb11-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb11-4"></span>
<span id="cb11-5"></span>
<span id="cb11-6">monthly_tables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tables.query(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"period == 'month' &amp; year &gt;= 2023"</span>)</span>
<span id="cb11-7"></span>
<span id="cb11-8">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pd.period_range(start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2014-01-01"</span>, end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2025-01-01"</span>, freq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>))</span>
<span id="cb11-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> table <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> monthly_tables[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>]:</span>
<span id="cb11-10">    df_add <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sph.get_table(table)</span>
<span id="cb11-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We don't want to overload the server</span></span>
<span id="cb11-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sleep(randint(1, 3))</span></span>
<span id="cb11-13">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.merge(df_add, left_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-14"></span>
<span id="cb11-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We do not want to deal with NaNs, at least at this time :)</span></span>
<span id="cb11-16">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.dropna(how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"any"</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-17"></span>
<span id="cb11-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep only columns with "_M" suffix to skip derived columns</span></span>
<span id="cb11-19">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [col <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df.columns <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> col.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_M"</span>)]</span>
<span id="cb11-20"></span>
<span id="cb11-21">corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[columns].corr()</span>
<span id="cb11-22"></span>
<span id="cb11-23">sns.heatmap(</span>
<span id="cb11-24">    corr,</span>
<span id="cb11-25">    vmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>,</span>
<span id="cb11-26">    vmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>,</span>
<span id="cb11-27">    xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>corr.columns.values,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># type: ignore</span></span>
<span id="cb11-28">    yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>corr.columns.values,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># type: ignore</span></span>
<span id="cb11-29">    cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"coolwarm"</span>,</span>
<span id="cb11-30">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240821-sophisthse/index_files/figure-html/cell-12-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="622" height="485"></p>
</figure>
</div>
</div>
</div>
<p>The last column (or row) is the <code>WAG_C_M</code>. This is a monthly series of the average nominal wage. It correlates with many economics indicators, and it worth noting that <code>CBEX_M</code> (Consolidated Budget Expenditures) explains almost 84% of <code>WAG_C_M</code> variability. Let’s take a look at these two series.</p>
<div id="e67a6209" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">df_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[columns].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x.mean()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> x.std())</span>
<span id="cb12-2">df_norm[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WAG_C_M"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CBEX_M"</span>]].plot()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240821-sophisthse/index_files/figure-html/cell-13-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="569" height="411"></p>
</figure>
</div>
</div>
</div>
<p>The plot shows that the <code>WAG_C_M</code> series follows the <code>CBEX_M</code> series with great accuracy. This is an interesting observation that can be used in further analysis.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>The <code>sophisthse</code> library provides a convenient way to access and work with Russian macroeconomic time series data. The library simplifies the process of downloading and caching data, making it easier to analyze economic trends in Russia. The library is a valuable resource for researchers, analysts, and anyone interested in studying the Russian economy.</p>


</section>

 ]]></description>
  <category>Time-Series</category>
  <category>Macroeconomics</category>
  <category>Python</category>
  <guid>https://blog.frequentist.org/posts/20240821-sophisthse/</guid>
  <pubDate>Thu, 22 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20240821-sophisthse/image.png" medium="image" type="image/png" height="108" width="144"/>
</item>
<item>
  <title>Kano Method for Prioritization of Features</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20240805-kano-model/</link>
  <description><![CDATA[ 





<p>The Kano model is a theory for product development and customer satisfaction developed in the 1980s by Professor Noriaki Kano. The model classifies customer preferences into five categories: Must-be Quality, One-dimensional Quality, Attractive Quality, Indifferent Quality, and Reverse Quality. The Kano model is used to prioritize features and functionalities in product development based on customer needs and expectations.</p>
<p><img src="https://blog.frequentist.org/posts/20240805-kano-model/features.jpg" class="img-fluid"></p>
<section id="categories-of-the-kano-model" class="level2">
<h2 class="anchored" data-anchor-id="categories-of-the-kano-model">Categories of the Kano Model</h2>
<p><strong>Must-be</strong> features are basic requirements that customers expect. If these features are not present in a product, customers will be dissatisfied. However, the presence of these features does not necessarily lead to customer satisfaction. Must-be Quality features are considered essential for the product.</p>
<blockquote class="blockquote">
<p>Examples: a car must have wheels, a smartphone must have a battery, a website must have a search function.</p>
</blockquote>
<p><strong>One-dimensional</strong> features are directly proportional to customer satisfaction. The more these features are present in a product, the more satisfied customers will be. These features are usually explicitly stated by customers and are easy to measure and quantify.</p>
<blockquote class="blockquote">
<p>Examples: a car with leather seats, a smartphone with a high-resolution camera, a website with fast loading times.</p>
</blockquote>
<p><strong>Attractive</strong> features are unexpected features that delight customers. These features are not explicitly requested by customers but can create a positive emotional response when present. Attractive Quality features can differentiate a product from its competitors and create a competitive advantage.</p>
<blockquote class="blockquote">
<p>Examples: a car with a built-in navigation system, a smartphone with facial recognition technology, a website with personalized recommendations.</p>
</blockquote>
<p><strong>Indifferent</strong> features are neither good nor bad from the customer’s perspective. Customers are indifferent to these features, and their presence or absence does not significantly impact customer satisfaction. These features are often considered “nice to have” but not essential.</p>
<blockquote class="blockquote">
<p>Examples: a car with cup holders, a smartphone with a stylus, a website with social media integration.</p>
</blockquote>
<p><strong>Reverse</strong> features are features that, when present, can lead to customer dissatisfaction. These features may be perceived as unnecessary or even annoying by customers. It is essential to identify and eliminate Reverse Quality features to prevent negative customer experiences.</p>
<blockquote class="blockquote">
<p>Examples: a car with uncomfortable seats, a smartphone with a short battery life, a website with intrusive pop-up ads.</p>
</blockquote>
</section>
<section id="prioritizing-features-with-the-kano-model" class="level2">
<h2 class="anchored" data-anchor-id="prioritizing-features-with-the-kano-model">Prioritizing Features with the Kano Model</h2>
<div id="fig-kano-example" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-kano-example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240805-kano-model/image.png" class="img-fluid figure-img" style="width:50.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-kano-example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Example of a Kano diagram.
</figcaption>
</figure>
</div>
<p>With the Kano model, prioritization of features and functionalities becomes clear and straightforward as that:</p>
<p><strong>a)</strong> keep eye on the <em>Must-be Quality</em> features, as they are essential, <strong>b)</strong> incorporate <em>One-dimensional Quality</em> features to increase customer satisfaction, <strong>c)</strong> consider <em>Attractive Quality</em> features to create a competitive advantage; <strong>d)</strong> eliminate <em>Reverse Quality</em> features, and <strong>e)</strong> save resources by setting <em>Indifferent Quality</em> features as low priority.</p>
</section>
<section id="implementation-of-the-kano-analysis" class="level2">
<h2 class="anchored" data-anchor-id="implementation-of-the-kano-analysis">Implementation of the Kano Analysis</h2>
<p>Implementing the Kano model involves a sequence of steps, beginning with the development of a questionnaire. For each feature, two types of questions are posed: functional and dysfunctional.</p>
<ul>
<li>The <strong>functional question</strong> assesses respondents’ feelings when a feature is present.</li>
<li>The <strong>dysfunctional question</strong> gauges their reactions in the absence of that feature.</li>
</ul>
<p>Each question offers five possible responses, from “I like it” to “I dislike it.” Subsequently, these responses are classified into the five Kano categories.</p>
<div class="cell" data-execution_count="1" data-cap-location="undefined" data-tbl-cap-location="top">
<div id="tbl-cap-margin" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-tbl-cap-location="top" data-execution_count="1" data-cap-location="undefined">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-cap-margin-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: Classification of answers to the Kano questionnaire.
</figcaption>
<div aria-describedby="tbl-cap-margin-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th colspan="5" data-quarto-table-cell-role="th" data-halign="left">Category</th>
</tr>
<tr class="even">
<th data-quarto-table-cell-role="th">Dysfunctional</th>
<th data-quarto-table-cell-role="th">1) I like it</th>
<th data-quarto-table-cell-role="th">2) I expect it</th>
<th data-quarto-table-cell-role="th">3) I am neutral</th>
<th data-quarto-table-cell-role="th">4) I can tolerate it</th>
<th data-quarto-table-cell-role="th">5) I dislike it</th>
</tr>
<tr class="header">
<th data-quarto-table-cell-role="th">Functional</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">1) I like it</td>
<td>Questionable</td>
<td>Attractive</td>
<td>Attractive</td>
<td>Attractive</td>
<td>One-dimensional</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2) I expect it</td>
<td>Reverse</td>
<td>Indifferent</td>
<td>Indifferent</td>
<td>Indifferent</td>
<td>Must-be</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">3) I am neutral</td>
<td>Reverse</td>
<td>Indifferent</td>
<td>Indifferent</td>
<td>Indifferent</td>
<td>Must-be</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">4) I can tolerate it</td>
<td>Reverse</td>
<td>Indifferent</td>
<td>Indifferent</td>
<td>Indifferent</td>
<td>Must-be</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5) I dislike it</td>
<td>Reverse</td>
<td>Reverse</td>
<td>Reverse</td>
<td>Reverse</td>
<td>Questionable</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</figure>
</div>
</div>
<p>After the classification of responses, the next step is to calculate the satisfaction and dissatisfaction scores for each feature. The satisfaction influence score is calculated as the percentage of Attractive and One-dimensional responses relative to the total number of responses.</p>
<p><span id="eq-satisfaction-influence"><img src="https://latex.codecogs.com/png.latex?%20%5Ctext%7BSatisfaction%20Influence%7D%20=%20%5Cdfrac%7BA%20+%20O%7D%7B%20A%20+%20O%20+%20M%20+%20I%20%7D%20%5Ctimes%20100%20%5C%25%20%20%5Ctag%7B1%7D"></span> The dissatisfaction influence score is calculated as the percentage of One-dimensional and Must-be responses relative to the total number of responses.</p>
<p><span id="eq-dissatisfaction-influence"><img src="https://latex.codecogs.com/png.latex?%20%5Ctext%7BDissatisfaction%20Influence%7D%20=%20%20-%20%5Cdfrac%7BO%20+%20M%7D%7BA%20+%20O%20+%20M%20+%20I%7D%20%5Ctimes%20100%20%5C%25%20%20%5Ctag%7B2%7D"></span></p>
<p>The features are then plotted on a Kano diagram, with the dissatisfaction score on the x-axis and the satisfaction score on the y-axis. The features are categorized based on their position in the diagram: Attractive Quality features in the upper left quadrant, One-dimensional Quality features in the upper right quadrant, Must-be Quality features in the lower right quadrant, and Indifferent features in the lower left quadrant, as depicted in the Figure&nbsp;1.</p>
</section>
<section id="example-implementation-of-the-kano-analysis" class="level2">
<h2 class="anchored" data-anchor-id="example-implementation-of-the-kano-analysis">Example implementation of the Kano Analysis</h2>
<section id="conducting-a-kano-survey" class="level3">
<h3 class="anchored" data-anchor-id="conducting-a-kano-survey">Conducting a Kano Survey</h3>
<p>For illustrative purposes, let’s consider existing dataset with responses to a Kano questionnaire from <a href="https://github.com/REPPL/Doing-research-online-the-kano-model">Doing Research Online: The Kano Model</a> project by <a href="https://github.com/REPPL">Alex Reppel</a> published on GitHub under the GPL-3.0 License. The dataset consists of five csv files containing responses to functional and dysfunctional questions for various features, along with demographic information about the respondents.</p>
</section>
<section id="exploratory-data-analysis" class="level3">
<h3 class="anchored" data-anchor-id="exploratory-data-analysis">Exploratory Data Analysis</h3>
<p>Let’s explore data. The dataframe of shape (721, 39) includes an <code>ID</code> column, multiple columns with demographic data such as <code>Income_us</code>, <code>Gender</code>, <code>Age</code>, <code>Employment</code>, and <code>Education</code>, as well as responses to functional and dysfunctional questions (<code>F1_functional</code>, <code>F1_dysfunctional</code>, etc), and columns indicating the importance of certain features to the customer (<code>F1_importance</code>, <code>F2_importance</code>, etc).</p>
<div id="cell-fig-hist-age" class="cell" data-execution_count="3">
<div class="cell-output cell-output-display">
<div id="fig-hist-age" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-hist-age-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240805-kano-model/index_files/figure-html/fig-hist-age-output-1.png" width="661" height="468" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-hist-age-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Histogram of respondents’ age
</figcaption>
</figure>
</div>
</div>
</div>
<p>The customers’ age distribution is relatively balanced, with a slight skew towards younger respondents.</p>
<div>

</div>
<div id="cell-fig-income-empl-hist" class="cell quarto-layout-panel" data-layout-ncol="2" data-execution_count="4">
<div class="quarto-layout-row">
<div class="cell-output cell-output-display quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-income-empl-hist" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-income-empl-hist-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240805-kano-model/index_files/figure-html/fig-income-empl-hist-output-1.png" width="352" height="488" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-income-empl-hist-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Income distribution
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-income-empl-hist" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-income-empl-hist-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240805-kano-model/index_files/figure-html/fig-income-empl-hist-output-2.png" width="352" height="509" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-income-empl-hist-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Employment distribution
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>The income distribution is expectedly skewed to the left. The employment distribution shows that the majority of respondents are employed full-time.</p>
<p>While customer responses might vary based on demographic data, Kano analysis does not consider the demographic characteristics of the respondents.</p>
</section>
<section id="aggregating-responses" class="level3">
<h3 class="anchored" data-anchor-id="aggregating-responses">Aggregating Responses</h3>
<p>Next, we will aggregate the responses to functional and dysfunctional questions for each feature. The table below shows an example of aggregated answers for a feature with ID = F1.</p>
<div class="cell" data-tbl-colwidths="[5,20,15,15,15,15,15]" data-execution_count="9">
<div id="tbl-agg-answers" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-execution_count="9" data-tbl-colwidths="[5,20,15,15,15,15,15]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-agg-answers-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;2: Example of aggregated answers for a feature.
</figcaption>
<div aria-describedby="tbl-agg-answers-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output cell-output-display" data-execution_count="9">
<div>


<table class="dataframe do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Dysfunctional</th>
<th data-quarto-table-cell-role="th">1) I like it</th>
<th data-quarto-table-cell-role="th">2) I expect it</th>
<th data-quarto-table-cell-role="th">3) I am neutral</th>
<th data-quarto-table-cell-role="th">4) I can tolerate it</th>
<th data-quarto-table-cell-role="th">5) I dislike it</th>
</tr>
<tr class="even">
<th data-quarto-table-cell-role="th">ID</th>
<th data-quarto-table-cell-role="th">Functional</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td rowspan="5" data-quarto-table-cell-role="th" data-valign="top">F1_</td>
<td data-quarto-table-cell-role="th">1) I like it</td>
<td>12</td>
<td>10</td>
<td>21</td>
<td>25</td>
<td>9</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2) I expect it</td>
<td>6</td>
<td>6</td>
<td>14</td>
<td>10</td>
<td>3</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">3) I am neutral</td>
<td>15</td>
<td>25</td>
<td>72</td>
<td>29</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">4) I can tolerate it</td>
<td>5</td>
<td>13</td>
<td>12</td>
<td>10</td>
<td>5</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5) I dislike it</td>
<td>14</td>
<td>8</td>
<td>4</td>
<td>2</td>
<td>1</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</figure>
</div>
</div>
</section>
<section id="calculating-satisfaction-and-dissatisfaction-scores" class="level3">
<h3 class="anchored" data-anchor-id="calculating-satisfaction-and-dissatisfaction-scores">Calculating Satisfaction and Dissatisfaction Scores</h3>
<p>After aggregating the responses, we calculate the satisfaction and dissatisfaction scores for each feature using Equation&nbsp;1 and Equation&nbsp;2. The table below shows the qualities: Attractive (<strong>A</strong>), Indifferent (<strong>I</strong>), Must-be (<strong>M</strong>), One-dimensional (<strong>O</strong>), Questionable (<strong>Q</strong>), Reverse (<strong>R</strong>), as well as satisfaction (<strong>S</strong>) and dissatisfaction (<strong>D</strong>) scores for each feature.</p>
<div class="cell" data-tbl-align="center" data-execution_count="10">
<div id="tbl-scores" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-tbl-align="center" data-execution_count="10">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-scores-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;3: Qualities and satisfaction and dissatisfaction scores for each feature.
</figcaption>
<div aria-describedby="tbl-scores-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output cell-output-display" data-execution_count="10">
<style type="text/css">
#T_1e201_row0_col3, #T_1e201_row1_col5, #T_1e201_row2_col5, #T_1e201_row3_col5, #T_1e201_row4_col3, #T_1e201_row5_col3, #T_1e201_row6_col5, #T_1e201_row7_col5, #T_1e201_row8_col2, #T_1e201_row9_col5, #T_1e201_row10_col3 {
  background-color: lightgreen;
}
</style>

<table id="T_1e201" class="do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th class="blank level0" data-quarto-table-cell-role="th">&nbsp;</th>
<th id="T_1e201_level0_col0" class="col_heading level0 col0" data-quarto-table-cell-role="th">ID</th>
<th id="T_1e201_level0_col1" class="col_heading level0 col1" data-quarto-table-cell-role="th">Question</th>
<th id="T_1e201_level0_col2" class="col_heading level0 col2" data-quarto-table-cell-role="th">A</th>
<th id="T_1e201_level0_col3" class="col_heading level0 col3" data-quarto-table-cell-role="th">I</th>
<th id="T_1e201_level0_col4" class="col_heading level0 col4" data-quarto-table-cell-role="th">M</th>
<th id="T_1e201_level0_col5" class="col_heading level0 col5" data-quarto-table-cell-role="th">O</th>
<th id="T_1e201_level0_col6" class="col_heading level0 col6" data-quarto-table-cell-role="th">Q</th>
<th id="T_1e201_level0_col7" class="col_heading level0 col7" data-quarto-table-cell-role="th">R</th>
<th id="T_1e201_level0_col8" class="col_heading level0 col8" data-quarto-table-cell-role="th">S</th>
<th id="T_1e201_level0_col9" class="col_heading level0 col9" data-quarto-table-cell-role="th">D</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td id="T_1e201_level0_row0" class="row_heading level0 row0" data-quarto-table-cell-role="th">0</td>
<td id="T_1e201_row0_col0" class="data row0 col0">F1</td>
<td id="T_1e201_row0_col1" class="data row0 col1">If your funds are stored in a way that does not have to be linked to your identity, how do you feel?</td>
<td id="T_1e201_row0_col2" class="data row0 col2">17</td>
<td id="T_1e201_row0_col3" class="data row0 col3">57</td>
<td id="T_1e201_row0_col4" class="data row0 col4">3</td>
<td id="T_1e201_row0_col5" class="data row0 col5">3</td>
<td id="T_1e201_row0_col6" class="data row0 col6">4</td>
<td id="T_1e201_row0_col7" class="data row0 col7">16</td>
<td id="T_1e201_row0_col8" class="data row0 col8">24</td>
<td id="T_1e201_row0_col9" class="data row0 col9">-7</td>
</tr>
<tr class="even">
<td id="T_1e201_level0_row1" class="row_heading level0 row1" data-quarto-table-cell-role="th">1</td>
<td id="T_1e201_row1_col0" class="data row1 col0">F2</td>
<td id="T_1e201_row1_col1" class="data row1 col1">If it is easy to store funds, how do you feel?</td>
<td id="T_1e201_row1_col2" class="data row1 col2">22</td>
<td id="T_1e201_row1_col3" class="data row1 col3">27</td>
<td id="T_1e201_row1_col4" class="data row1 col4">14</td>
<td id="T_1e201_row1_col5" class="data row1 col5">30</td>
<td id="T_1e201_row1_col6" class="data row1 col6">3</td>
<td id="T_1e201_row1_col7" class="data row1 col7">4</td>
<td id="T_1e201_row1_col8" class="data row1 col8">56</td>
<td id="T_1e201_row1_col9" class="data row1 col9">-48</td>
</tr>
<tr class="odd">
<td id="T_1e201_level0_row2" class="row_heading level0 row2" data-quarto-table-cell-role="th">2</td>
<td id="T_1e201_row2_col0" class="data row2 col0">F3</td>
<td id="T_1e201_row2_col1" class="data row2 col1">If you can access your funds wherever and whenever you want, how do you feel?</td>
<td id="T_1e201_row2_col2" class="data row2 col2">15</td>
<td id="T_1e201_row2_col3" class="data row2 col3">18</td>
<td id="T_1e201_row2_col4" class="data row2 col4">14</td>
<td id="T_1e201_row2_col5" class="data row2 col5">47</td>
<td id="T_1e201_row2_col6" class="data row2 col6">3</td>
<td id="T_1e201_row2_col7" class="data row2 col7">3</td>
<td id="T_1e201_row2_col8" class="data row2 col8">66</td>
<td id="T_1e201_row2_col9" class="data row2 col9">-65</td>
</tr>
<tr class="even">
<td id="T_1e201_level0_row3" class="row_heading level0 row3" data-quarto-table-cell-role="th">3</td>
<td id="T_1e201_row3_col0" class="data row3 col0">F4</td>
<td id="T_1e201_row3_col1" class="data row3 col1">If it is guaranteed that no one else can access your funds without your permission, how do you feel?</td>
<td id="T_1e201_row3_col2" class="data row3 col2">5</td>
<td id="T_1e201_row3_col3" class="data row3 col3">12</td>
<td id="T_1e201_row3_col4" class="data row3 col4">22</td>
<td id="T_1e201_row3_col5" class="data row3 col5">53</td>
<td id="T_1e201_row3_col6" class="data row3 col6">4</td>
<td id="T_1e201_row3_col7" class="data row3 col7">4</td>
<td id="T_1e201_row3_col8" class="data row3 col8">63</td>
<td id="T_1e201_row3_col9" class="data row3 col9">-82</td>
</tr>
<tr class="odd">
<td id="T_1e201_level0_row4" class="row_heading level0 row4" data-quarto-table-cell-role="th">4</td>
<td id="T_1e201_row4_col0" class="data row4 col0">F5</td>
<td id="T_1e201_row4_col1" class="data row4 col1">If relevant information is always easy to find, how do you feel?</td>
<td id="T_1e201_row4_col2" class="data row4 col2">22</td>
<td id="T_1e201_row4_col3" class="data row4 col3">34</td>
<td id="T_1e201_row4_col4" class="data row4 col4">12</td>
<td id="T_1e201_row4_col5" class="data row4 col5">21</td>
<td id="T_1e201_row4_col6" class="data row4 col6">5</td>
<td id="T_1e201_row4_col7" class="data row4 col7">6</td>
<td id="T_1e201_row4_col8" class="data row4 col8">49</td>
<td id="T_1e201_row4_col9" class="data row4 col9">-37</td>
</tr>
<tr class="even">
<td id="T_1e201_level0_row5" class="row_heading level0 row5" data-quarto-table-cell-role="th">5</td>
<td id="T_1e201_row5_col0" class="data row5 col0">F6</td>
<td id="T_1e201_row5_col1" class="data row5 col1">If you can transfer funds without having to link that transaction to your name, how do you feel?</td>
<td id="T_1e201_row5_col2" class="data row5 col2">26</td>
<td id="T_1e201_row5_col3" class="data row5 col3">50</td>
<td id="T_1e201_row5_col4" class="data row5 col4">2</td>
<td id="T_1e201_row5_col5" class="data row5 col5">5</td>
<td id="T_1e201_row5_col6" class="data row5 col6">4</td>
<td id="T_1e201_row5_col7" class="data row5 col7">14</td>
<td id="T_1e201_row5_col8" class="data row5 col8">38</td>
<td id="T_1e201_row5_col9" class="data row5 col9">-8</td>
</tr>
<tr class="odd">
<td id="T_1e201_level0_row6" class="row_heading level0 row6" data-quarto-table-cell-role="th">6</td>
<td id="T_1e201_row6_col0" class="data row6 col0">F7</td>
<td id="T_1e201_row6_col1" class="data row6 col1">If it is easy to transfer funds, how do you feel?</td>
<td id="T_1e201_row6_col2" class="data row6 col2">20</td>
<td id="T_1e201_row6_col3" class="data row6 col3">24</td>
<td id="T_1e201_row6_col4" class="data row6 col4">17</td>
<td id="T_1e201_row6_col5" class="data row6 col5">34</td>
<td id="T_1e201_row6_col6" class="data row6 col6">4</td>
<td id="T_1e201_row6_col7" class="data row6 col7">2</td>
<td id="T_1e201_row6_col8" class="data row6 col8">57</td>
<td id="T_1e201_row6_col9" class="data row6 col9">-54</td>
</tr>
<tr class="even">
<td id="T_1e201_level0_row7" class="row_heading level0 row7" data-quarto-table-cell-role="th">7</td>
<td id="T_1e201_row7_col0" class="data row7 col0">F8</td>
<td id="T_1e201_row7_col1" class="data row7 col1">If you can transfer your funds wherever and whenever you want, how do you feel?</td>
<td id="T_1e201_row7_col2" class="data row7 col2">21</td>
<td id="T_1e201_row7_col3" class="data row7 col3">20</td>
<td id="T_1e201_row7_col4" class="data row7 col4">18</td>
<td id="T_1e201_row7_col5" class="data row7 col5">35</td>
<td id="T_1e201_row7_col6" class="data row7 col6">4</td>
<td id="T_1e201_row7_col7" class="data row7 col7">2</td>
<td id="T_1e201_row7_col8" class="data row7 col8">60</td>
<td id="T_1e201_row7_col9" class="data row7 col9">-56</td>
</tr>
<tr class="odd">
<td id="T_1e201_level0_row8" class="row_heading level0 row8" data-quarto-table-cell-role="th">8</td>
<td id="T_1e201_row8_col0" class="data row8 col0">F9</td>
<td id="T_1e201_row8_col1" class="data row8 col1">If funds are transferred almost instantaneous, how do you feel?</td>
<td id="T_1e201_row8_col2" class="data row8 col2">40</td>
<td id="T_1e201_row8_col3" class="data row8 col3">23</td>
<td id="T_1e201_row8_col4" class="data row8 col4">7</td>
<td id="T_1e201_row8_col5" class="data row8 col5">22</td>
<td id="T_1e201_row8_col6" class="data row8 col6">4</td>
<td id="T_1e201_row8_col7" class="data row8 col7">3</td>
<td id="T_1e201_row8_col8" class="data row8 col8">67</td>
<td id="T_1e201_row8_col9" class="data row8 col9">-31</td>
</tr>
<tr class="even">
<td id="T_1e201_level0_row9" class="row_heading level0 row9" data-quarto-table-cell-role="th">9</td>
<td id="T_1e201_row9_col0" class="data row9 col0">F10</td>
<td id="T_1e201_row9_col1" class="data row9 col1">If it is guaranteed that no one else can manipulate transfers you have initiated, how do you feel?</td>
<td id="T_1e201_row9_col2" class="data row9 col2">5</td>
<td id="T_1e201_row9_col3" class="data row9 col3">15</td>
<td id="T_1e201_row9_col4" class="data row9 col4">25</td>
<td id="T_1e201_row9_col5" class="data row9 col5">49</td>
<td id="T_1e201_row9_col6" class="data row9 col6">4</td>
<td id="T_1e201_row9_col7" class="data row9 col7">2</td>
<td id="T_1e201_row9_col8" class="data row9 col8">58</td>
<td id="T_1e201_row9_col9" class="data row9 col9">-79</td>
</tr>
<tr class="odd">
<td id="T_1e201_level0_row10" class="row_heading level0 row10" data-quarto-table-cell-role="th">10</td>
<td id="T_1e201_row10_col0" class="data row10 col0">F11</td>
<td id="T_1e201_row10_col1" class="data row10 col1">If relevant information on how to make transfers is always easy to find, how do you feel?</td>
<td id="T_1e201_row10_col2" class="data row10 col2">24</td>
<td id="T_1e201_row10_col3" class="data row10 col3">30</td>
<td id="T_1e201_row10_col4" class="data row10 col4">10</td>
<td id="T_1e201_row10_col5" class="data row10 col5">26</td>
<td id="T_1e201_row10_col6" class="data row10 col6">6</td>
<td id="T_1e201_row10_col7" class="data row10 col7">4</td>
<td id="T_1e201_row10_col8" class="data row10 col8">56</td>
<td id="T_1e201_row10_col9" class="data row10 col9">-40</td>
</tr>
</tbody>
</table>
</div>
</div>
</figure>
</div>
</div>
</section>
<section id="plotting-the-kano-diagram" class="level3">
<h3 class="anchored" data-anchor-id="plotting-the-kano-diagram">Plotting the Kano Diagram</h3>
<p>The last step is to plot the features on a Kano diagram. The quadrant in which the feature is located indicates a Kano category. The further the from the center, the higher the influence on satisfaction or dissatisfaction.</p>
<div id="cell-fig-kano-diagram" class="cell" data-execution_count="11">
<div class="cell-output cell-output-display">
<div id="fig-kano-diagram" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-kano-diagram-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.frequentist.org/posts/20240805-kano-model/index_files/figure-html/fig-kano-diagram-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="627" height="508">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-kano-diagram-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Kano diagram
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="application-of-the-kano-model" class="level2">
<h2 class="anchored" data-anchor-id="application-of-the-kano-model">Application of the Kano Model</h2>
<p>The Kano model can be applied in product development to prioritize features and functionalities based on customer needs and expectations. By categorizing features into the five Kano categories, product managers can identify which features are essential, which are nice to have, and which can create a competitive advantage.</p>
<p>The Kano model can also help product managers understand customer preferences and make informed decisions about resource allocation and product development. By focusing on Must-be Quality and One-dimensional Quality features, product managers can ensure that the product meets basic customer requirements and maximizes customer satisfaction.</p>
<p>In conclusion, the Kano model is a valuable tool for prioritizing features and functionalities in product development. By understanding customer preferences and categorizing features into the five Kano categories, product managers can create products that meet customer needs and expectations, leading to higher customer satisfaction and competitive advantage.</p>


</section>

 ]]></description>
  <category>Marketing</category>
  <category>Product</category>
  <category>Python</category>
  <guid>https://blog.frequentist.org/posts/20240805-kano-model/</guid>
  <pubDate>Mon, 05 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20240805-kano-model/image.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Merging Customers Records Using Graphs in Python</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20240731-customers-graphs/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Traditional relational databases and spreadsheets fall short in capturing complex relationships among customers. Enter graph theory – a powerful framework for representing and analyzing interconnected data. By visualizing customer relationships as a graph, we can uncover hidden patterns, identify clusters, and improve data quality.</p>
</section>
<section id="motivation" class="level2">
<h2 class="anchored" data-anchor-id="motivation">Motivation</h2>
<p>Over time, customers records can become fragmented and duplicated. For example, a customer may use multiple email addresses or phone numbers when interacting with a company. Creating a new record for each email or phone can lead to duplicate records for the same customer. This is especially common in B2B scenarios, where customers often have multiple representatives. Furthermore, some customers represent multiple companies, and their records may be duplicated across different companies.</p>
<p>Doing any type of marketing analysis on such dataset can lead to incorrect results. We cannot be sure about the latest purchase, the total amount spent, or the number of orders. Is this customer a loyal one or not? Is that customer a new one or not? Is this customer going to leave us or they just started buying from another company? Do we need to send a discount to this customer or not? To answer these questions, we need to have customers database defragmented and deduplicated.</p>
<p>Merging records manually can be time-consuming and error-prone. By using graphs, we can represent the relationships between customers, emails, and phones and find groups of connected customers. This can help us identify duplicate records and perform actions depending on our business logic.</p>
</section>
<section id="sample-data" class="level2">
<h2 class="anchored" data-anchor-id="sample-data">Sample Data</h2>
<p>We have three datasets: <code>customers</code>, <code>emails</code>, and <code>phones.</code> Each customer can have multiple emails and phones. The names, emails, and phones are generated randomly and do not correspond to real people, though the structure of the data is similar to what you might find in a real-world scenario. In fact, it <em>is</em> the sample taken from the real data, but the names and other personal information are generated randomly to replace the actual ones.</p>
<div id="d22ded2e" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">customers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/customers.csv"</span>)</span>
<span id="cb1-2">emails <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/emails.csv"</span>)</span>
<span id="cb1-3">phones <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/phones.csv"</span>)</span></code></pre></div>
</div>
<p>Take a look at the data.</p>
<div id="0b932ff1" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">customers.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">customer_id</th>
<th data-quarto-table-cell-role="th">name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>330087</td>
<td>William Sparks</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>443237</td>
<td>Joseph Williams</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>329867</td>
<td>Eddie Porter</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="777783d7" class="cell" data-execution_count="4">
<div class="cell-output cell-output-stdout">
<pre><code>Length: 1000 Unique: 1000</code></pre>
</div>
</div>
<div id="fdcb909c" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">emails.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">customer_id</th>
<th data-quarto-table-cell-role="th">email</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>599100</td>
<td>brian12@example.net</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>330087</td>
<td>emyers@example.com</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>25494</td>
<td>cindymurphy@example.net</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="1d1b3864" class="cell" data-execution_count="6">
<div class="cell-output cell-output-stdout">
<pre><code>Length: 957 Unique: 626 Duplicated: 331 Empty: 0</code></pre>
</div>
</div>
<div id="646c57f9" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">phones.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">customer_id</th>
<th data-quarto-table-cell-role="th">phone</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>15962</td>
<td>876.997.0254</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>99723</td>
<td>001-706-213-0362</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>99723</td>
<td>886.527.4420x90003</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="ee643cb3" class="cell" data-execution_count="8">
<div class="cell-output cell-output-stdout">
<pre><code>Length: 855 Unique: 524 Duplicated: 331 Empty: 0</code></pre>
</div>
</div>
</section>
<section id="icons-for-nodes" class="level2">
<h2 class="anchored" data-anchor-id="icons-for-nodes">Icons for Nodes</h2>
<p>Next chunk of code creates a dictionary of icons for different types of nodes in the graph. It will be used later to visualize the subgraphs.</p>
<div id="9bbbb540" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PIL</span>
<span id="cb8-2"></span>
<span id="cb8-3">icons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb8-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"icons/customer.png"</span>,</span>
<span id="cb8-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"phone"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"icons/phone.png"</span>,</span>
<span id="cb8-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"icons/email.png"</span>,</span>
<span id="cb8-7">}</span>
<span id="cb8-8"></span>
<span id="cb8-9">images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: PIL.Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(fname) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k, fname <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> icons.items()}</span></code></pre></div>
</div>
</section>
<section id="creating-a-graph" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-graph">Creating a Graph</h2>
<p>Let’s create graph and add nodes. Each node will represent a customer, email, or phone. We will use the images dictionary to assign an image to each node, but it’s not necessary for the procedure, as well as setting the type of the node.</p>
<div id="2309f98e" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.Graph()</span>
<span id="cb9-2"></span>
<span id="cb9-3">nodes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> emails[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>].dropna().unique():</span>
<span id="cb9-6">    G.add_node(x, image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>images[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>)</span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> phones[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"phone"</span>].dropna().unique():</span>
<span id="cb9-9">    G.add_node(x, image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>images[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"phone"</span>], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"phone"</span>)</span>
<span id="cb9-10"></span>
<span id="cb9-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> customers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer_id"</span>].unique():</span>
<span id="cb9-12">    G.add_node(x, image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>images[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer"</span>], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer"</span>)</span></code></pre></div>
</div>
<p>Next, we will add edges to the graph. The edges will connect customers with their emails and phones.</p>
<div id="6aeb13e8" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">edges <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> customers[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer_id"</span>]].merge(emails).values:</span>
<span id="cb10-4">    edges.append(x)</span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> customers[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer_id"</span>]].merge(phones).values:</span>
<span id="cb10-7">    edges.append(x)</span>
<span id="cb10-8"></span>
<span id="cb10-9">G.add_edges_from(edges)</span></code></pre></div>
</div>
</section>
<section id="finding-groups-of-connected-customers" class="level2">
<h2 class="anchored" data-anchor-id="finding-groups-of-connected-customers">Finding Groups of Connected Customers</h2>
<p>Customers that share the same email or phone will be connected by the edges. Let’s find groups of connected customers.</p>
<div id="6e717621" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">groups <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(nx.connected_components(G))</span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Groups:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(groups))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Groups: 559</code></pre>
</div>
</div>
</section>
<section id="visualizing-the-graph" class="level2">
<h2 class="anchored" data-anchor-id="visualizing-the-graph">Visualizing the Graph</h2>
<p>The number of connected components is rather large to visualize all of them, and most of the groups will contain only a few nodes. Let’s find the groups with the largest number of nodes and visualize them.</p>
<div id="4723db96" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame([groups]).T</span>
<span id="cb13-2">df.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"group"</span>]</span>
<span id="cb13-3">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"group"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>)</span>
<span id="cb13-4">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size"</span>].hist(bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, log<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb13-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Group Size Distribution"</span>)</span>
<span id="cb13-6">plt.show()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-7">plt.close()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240731-customers-graphs/index_files/figure-html/cell-14-output-1.png" width="573" height="431" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>The simplest way to visualize the graph is to use the draw function from the <code>networkx</code> library. We will use the <code>nx.draw</code> function to visualize the graph. We will create a grid of subplots and visualize the top groups. Parameter <code>seed</code> is set to 42 to make the layout reproducible.</p>
<div id="b27b6fce" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb14-2"></span>
<span id="cb14-3">top_groups <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb14-4">    df.sort_values(</span>
<span id="cb14-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size"</span>,</span>
<span id="cb14-6">        ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb14-7">    )</span>
<span id="cb14-8">    .head(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(axes.flatten()))</span>
<span id="cb14-9">    .index</span>
<span id="cb14-10">)</span>
<span id="cb14-11"></span>
<span id="cb14-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, g <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(top_groups):</span>
<span id="cb14-13">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axes.flatten()[i]</span>
<span id="cb14-14">    subgraph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> G.subgraph(groups[g])</span>
<span id="cb14-15">    pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.spring_layout(subgraph, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb14-16">    nx.draw(</span>
<span id="cb14-17">        subgraph,</span>
<span id="cb14-18">        pos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pos,</span>
<span id="cb14-19">        with_labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb14-20">        node_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb14-21">        ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax,</span>
<span id="cb14-22">    )</span>
<span id="cb14-23">    ax.set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Group </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>g<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-24"></span>
<span id="cb14-25">plt.tight_layout()</span>
<span id="cb14-26">plt.show()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-27">plt.close()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240731-customers-graphs/index_files/figure-html/cell-15-output-1.png" width="758" height="566" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>There are literally constellations of different shapes and sizes. Let’s visualize some of them in more detail.</p>
</section>
<section id="visualizing-subgraphs" class="level2">
<h2 class="anchored" data-anchor-id="visualizing-subgraphs">Visualizing Subgraphs</h2>
<p>Let’s visualize one of the largest group in more detail. We will use the <code>nx.draw_networkx_edges</code> function to draw the edges and the <code>imshow</code> function to display the icons of the nodes. We will also add the customer id to the customers’ nodes. The value of parameter <code>seed</code> is set to the same value as in the previous chunk to keep the layout. You can change it to see different layouts.</p>
<div id="63041e7f" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">subgraph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> G.subgraph(groups[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">91</span>])</span>
<span id="cb15-2">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb15-3"></span>
<span id="cb15-4">pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.spring_layout(subgraph, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb15-5"></span>
<span id="cb15-6">nx.draw_networkx_edges(</span>
<span id="cb15-7">    subgraph,</span>
<span id="cb15-8">    pos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pos,</span>
<span id="cb15-9">    ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax,</span>
<span id="cb15-10">    arrows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb15-11">    arrowstyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>,</span>
<span id="cb15-12">    min_source_margin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb15-13">    min_target_margin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb15-14">)</span>
<span id="cb15-15"></span>
<span id="cb15-16"></span>
<span id="cb15-17">tr_figure <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.transData.transform</span>
<span id="cb15-18">tr_axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.transFigure.inverted().transform</span>
<span id="cb15-19"></span>
<span id="cb15-20"></span>
<span id="cb15-21">icon_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (ax.get_xlim()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ax.get_xlim()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.015</span></span>
<span id="cb15-22">icon_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> icon_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span></span>
<span id="cb15-23"></span>
<span id="cb15-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> subgraph.nodes:</span>
<span id="cb15-25">    xf, yf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tr_figure(pos[n])</span>
<span id="cb15-26">    xa, ya <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tr_axes((xf, yf))</span>
<span id="cb15-27">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.axes([xa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> icon_center, ya <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> icon_center, icon_size, icon_size])</span>
<span id="cb15-28">    a.imshow(subgraph.nodes[n][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"image"</span>])</span>
<span id="cb15-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> G.nodes[n][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer"</span>:</span>
<span id="cb15-30">        a.text(</span>
<span id="cb15-31">            <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb15-32">            <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb15-33">            n,</span>
<span id="cb15-34">            ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb15-35">            va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb15-36">            fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb15-37">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb15-38">            backgroundcolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb15-39">            bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb15-40">        )</span>
<span id="cb15-41">    a.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb15-42"></span>
<span id="cb15-43">sns.despine(left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb15-44"></span>
<span id="cb15-45">plt.show()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-46">plt.close()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240731-customers-graphs/index_files/figure-html/cell-16-output-1.png" width="614" height="611" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="why-graphs-and-not-sql" class="level2">
<h2 class="anchored" data-anchor-id="why-graphs-and-not-sql">Why Graphs and Not SQL?</h2>
<p>We can see here that the customers in this group form pretty complex relationships. A customer may be connected to another one by the phone numbers, and the other one may be connected to the third one by the email, forming a chain of connections. I believe that it is nearly impossible to find this kind of relationship using SQL. The more complex the relationships are, the more time and effort it will take to find them using SQL. For example, if we have a chain of 10 customers, where each customer is connected to the next one by the phone number, it will take 10 joins to find this chain using SQL. If we have 100 customers in the chain, it will take 100 joins to find it using SQL, and the query will probably never complete. But it takes fractions of a second to find it using the graph.</p>
</section>
<section id="assigning-groups-to-customers" class="level2">
<h2 class="anchored" data-anchor-id="assigning-groups-to-customers">Assigning Groups to Customers</h2>
<p>Finally, we will assign a group to each customer. For that, we will expand the groups list and create a new DataFrame with the <code>group_id</code> and <code>customer_id</code> columns.</p>
<div id="157edc97" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame([groups]).T</span>
<span id="cb16-2">df.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer_id"</span>]</span>
<span id="cb16-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.explode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer_id"</span>)</span>
<span id="cb16-4">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"group_id"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.index</span>
<span id="cb16-5">df.tail(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">customer_id</th>
<th data-quarto-table-cell-role="th">group_id</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">557</td>
<td>601053</td>
<td>557</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">558</td>
<td>571.212.7377x69843</td>
<td>558</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">558</td>
<td>590385</td>
<td>558</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Note that <code>customer_id</code> column contains phone numbers and emails as well as customer ids, but when we merge the data, there will remain only the customer ids.</p>
<div id="da7ce215" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">customers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> customers.merge(df)</span>
<span id="cb17-2">customers.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">customer_id</th>
<th data-quarto-table-cell-role="th">name</th>
<th data-quarto-table-cell-role="th">group_id</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>330087</td>
<td>William Sparks</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>443237</td>
<td>Joseph Williams</td>
<td>4</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>329867</td>
<td>Eddie Porter</td>
<td>6</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Let’s check the number of customers and unique customer ids to make sure that we didn’t lose any customers neither we added duplicates.</p>
<div id="37fedf06" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(customers), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(customers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"customer_id"</span>].unique())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>(1000, 1000)</code></pre>
</div>
</div>
<p>Looks good. Now we can save the data to the file.</p>
<div id="e71a5f54" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">customers.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/customers_grouped.csv"</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this article, we explored how to merge customer records using graphs. We created a graph of customers, emails, and phones and found groups of connected customers. We assigned a group to each customer and saved the data to a file. This approach can help us identify duplicate records and perform actions depending on our business logic. We also visualized the graph and subgraphs to better understand the relationships between customers. This can be useful for marketing analysis, customer segmentation, and other tasks that require a deep understanding of customer relationships.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Graphs</category>
  <guid>https://blog.frequentist.org/posts/20240731-customers-graphs/</guid>
  <pubDate>Wed, 31 Jul 2024 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20240731-customers-graphs/image.png" medium="image" type="image/png" height="108" width="144"/>
</item>
<item>
  <title>Exploring Geospatial Insights with R and rnaturalearth</title>
  <dc:creator>Aleksei </dc:creator>
  <link>https://blog.frequentist.org/posts/20240725-views-of-russia/</link>
  <description><![CDATA[ 





<p>The article showcases the utilization of the <code>rnaturalearth</code> package for handling geographical data. This package provides valuable tools and functions for working with spatial information, making it a powerful resource for data analysts and researchers interested in geographic analyses.</p>
<p>Today, I stumbled upon an article discussing the approval ratings of Russia among people from various nations around the world. As I examined the list, which was sorted from worst to best, a hypothesis formed in my mind: <strong>Could the distance between this particular country and others correlate with its citizens’ approval of its international affairs?</strong> To explore this, I promptly collected data and calculated the geographical distances between the boundaries of Russia and those of the countries in the list. The null hypothesis posits that distance has no impact on approval rates, while the alternative hypothesis suggests that distance does indeed influence approval levels.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>())</span>
<span id="cb1-2"></span>
<span id="cb1-3">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ne_countries</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medium"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">returnclass =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf"</span>)</span>
<span id="cb1-4"></span>
<span id="cb1-5">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ViewsOfRussia2024.csv"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7">by <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(admin <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> country)</span>
<span id="cb1-8">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(world, df, by)</span>
<span id="cb1-9"></span>
<span id="cb1-10">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> world[world<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>admin <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Antarctica"</span>, ]</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> world) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> approval)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis_c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># theme_void() +</span></span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>, </span>
<span id="cb1-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>), </span>
<span id="cb1-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.width =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>), </span>
<span id="cb1-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% who have a favorable view of Russia"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240725-views-of-russia/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">countries <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ne_countries</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">returnclass =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf"</span>)</span>
<span id="cb2-2">russia <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(countries, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Russia"</span>, admin))</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invisible</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sf_use_s2</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>))</span>
<span id="cb2-5"></span>
<span id="cb2-6">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowwise</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distB =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_distance</span>(russia, countries[countries<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>admin <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> country, ])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb2-8"></span>
<span id="cb2-9">df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>distB <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"([0-9</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.]+)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span>, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>distB)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000000</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(approval <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> distB, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df)</span>
<span id="cb2-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = approval ~ distB, data = df)

Residuals:
    Min      1Q  Median      3Q     Max 
-23.345 -11.519  -4.029  13.302  28.339 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)   22.406      3.859   5.806 1.91e-06 ***
distB          1.513      0.814   1.859   0.0723 .  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 16.02 on 32 degrees of freedom
  (1 observation deleted due to missingness)
Multiple R-squared:  0.09743,   Adjusted R-squared:  0.06922 
F-statistic: 3.454 on 1 and 32 DF,  p-value: 0.07231</code></pre>
</div>
</div>
<p>The model explains less than 10% of variability. P-value for distance is 0.072, so the null hypothesis cannot be rejected at the level of 0.05. Scatter plot also shows no obvious trend.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qplot</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>distB, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>approval) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240725-views-of-russia/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>It emerged that the geographical distance between boundaries was statistically insignificant. However, I propose an alternative hypothesis in this scenario. Russia, being an exceptionally vast country, shares proximity with Asian nations in its eastern part. Interestingly, these eastern countries exhibit a more favorable attitude toward Russia compared to their European counterparts. One plausible explanation for this discrepancy is the absence of significant Russian territorial interests in Asia. Since Moscow, the capital, lies in the western part of Russia, <strong>let’s measure the distance between capitals and explore this further using regression analysis</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">cities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ne_download</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"populated_places"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">returnclass =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reading layer `ne_110m_populated_places' from data source 
  `/tmp/Rtmp1g0rpV/ne_110m_populated_places.shp' using driver `ESRI Shapefile'
Simple feature collection with 243 features and 137 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -175.2206 ymin: -41.29207 xmax: 179.2166 ymax: 64.14346
Geodetic CRS:  WGS 84</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">capitals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cities[cities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FEATURECLA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Admin-0 capital"</span>, ]</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">capitals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> capitals <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(ADM0NAME, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep_all =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb8-2">moscow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cities[cities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>NAME <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Moscow"</span>, ]</span>
<span id="cb8-3"></span>
<span id="cb8-4">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ViewsOfRussia2024.csv"</span>)</span>
<span id="cb8-5"></span>
<span id="cb8-6">by <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> ADM0NAME)</span>
<span id="cb8-7">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(df, capitals, by) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(country, approval, NAME)</span>
<span id="cb8-8"></span>
<span id="cb8-9">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowwise</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distC =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_distance</span>(moscow, capitals[capitals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>NAME <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> NAME, ])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb8-11">df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>distC <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"([0-9</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.]+)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span>, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>distC)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000000</span></span>
<span id="cb8-12"></span>
<span id="cb8-13">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(approval <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> distC, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df)</span>
<span id="cb8-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = approval ~ distC, data = df)

Residuals:
    Min      1Q  Median      3Q     Max 
-27.205 -14.005  -1.208  14.432  27.698 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  21.7485     5.1834   4.196 0.000192 ***
distC         0.9300     0.6958   1.337 0.190512    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 16.21 on 33 degrees of freedom
Multiple R-squared:  0.05135,   Adjusted R-squared:  0.02261 
F-statistic: 1.786 on 1 and 33 DF,  p-value: 0.1905</code></pre>
</div>
</div>
<p>Unfortunately, using the distance between capitals didn’t yield meaningful results either.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qplot</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>distC, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>approval) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240725-views-of-russia/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>In my search for additional regressors, I included GDP per capita,</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ViewsOfRussia2024.csv"</span>)</span>
<span id="cb11-2"></span>
<span id="cb11-3">by <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> admin)</span>
<span id="cb11-4">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(df, countries, by) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(country, approval, gdp_md, pop_est, economy)</span>
<span id="cb11-5"></span>
<span id="cb11-6">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gdp_pc =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> gdp_md <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pop_est)</span>
<span id="cb11-7"></span>
<span id="cb11-8">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(approval <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> gdp_pc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df)</span>
<span id="cb11-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = approval ~ gdp_pc, data = df)

Residuals:
    Min      1Q  Median      3Q     Max 
-29.612  -6.029   1.617   4.936  22.483 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 42.26819    2.63352  16.050  &lt; 2e-16 ***
gdp_pc      -0.67906    0.09049  -7.505 1.52e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 10.15 on 32 degrees of freedom
  (1 observation deleted due to missingness)
Multiple R-squared:  0.6377,    Adjusted R-squared:  0.6264 
F-statistic: 56.32 on 1 and 32 DF,  p-value: 1.521e-08</code></pre>
</div>
</div>
<p>and it yielded promising results. The coefficient associated with GDP showed a remarkably low p-value of 1.52e-08, providing strong evidence against the null hypothesis. The coefficient of determination (R-squared) was also quite favorable at 0.6377, indicating that the model captures a substantial portion of the variation in approval rates. The coefficient with <code>gdp_pc</code> indicates that for every additional thousand USD of GDP per capita, there is a corresponding 0.7 percentage point decrease in the approval rate.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qplot</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gdp_pc, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>approval) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDP per capita, K"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% who have a favorable view of Russia"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240725-views-of-russia/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>In an effort to enhance predictive power, one can explore the possibility of non-linear dependencies. Let’s consider using the logarithm of GDP as a predictor.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(approval <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(gdp_pc), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = approval ~ log(gdp_pc), data = df)

Residuals:
    Min      1Q  Median      3Q     Max 
-22.983  -5.332  -0.769   3.175  28.181 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)   58.164      3.828  15.194 3.46e-16 ***
log(gdp_pc)  -12.052      1.371  -8.794 4.77e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 9.125 on 32 degrees of freedom
  (1 observation deleted due to missingness)
Multiple R-squared:  0.7073,    Adjusted R-squared:  0.6982 
F-statistic: 77.33 on 1 and 32 DF,  p-value: 4.77e-10</code></pre>
</div>
</div>
<p>The resulting model yields an impressive R² value of 0.7073, indicating that it explains the vast amount of the variation. Additionally, the p-value of 4.77e-10 provides the strongest evidence against the null hypothesis.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gdp_pc), df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>approval) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Logarithm of GDP per capita"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% who have a favorable view of Russia"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240725-views-of-russia/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>However, this improved model is more complex and less straightforward to explain. Allow me to attempt an interpretation: If a country’s GDP per capita is 1% lower than another country’s, it tends to have 0.12% more people who approve of Russia.</p>
<p>Now that we’ve obtained the regression model, we can use it to make predictions for the remaining countries and visualize the results on a map. By assigning colors based on predicted approval rates, we’ll create an informative and visually appealing representation.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ne_countries</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medium"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">returnclass =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf"</span>)</span>
<span id="cb17-2"></span>
<span id="cb17-3">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> world[world<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>admin <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Antarctica"</span>, ]</span>
<span id="cb17-4"></span>
<span id="cb17-5">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> world <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gdp_pc =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> gdp_md <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pop_est)</span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invisible</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">na.omit</span>(world, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gdp_pc"</span>))</span>
<span id="cb17-8"></span>
<span id="cb17-9">pred <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(model, world)</span>
<span id="cb17-10"></span>
<span id="cb17-11">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(world, pred)</span>
<span id="cb17-12"></span>
<span id="cb17-13">by <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(admin <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> country)</span>
<span id="cb17-14">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(world, df, by)</span>
<span id="cb17-15"></span>
<span id="cb17-16">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(world, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">approval =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coalesce</span>(approval, pred))</span>
<span id="cb17-17"></span>
<span id="cb17-18">world[world<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>admin <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Russia"</span>, ]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>approval <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb17-19"></span>
<span id="cb17-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> world) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> approval)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis_c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>, </span>
<span id="cb17-24">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>), </span>
<span id="cb17-25">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.width =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>), </span>
<span id="cb17-26">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://blog.frequentist.org/posts/20240725-views-of-russia/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>R</category>
  <category>Geo</category>
  <guid>https://blog.frequentist.org/posts/20240725-views-of-russia/</guid>
  <pubDate>Thu, 25 Jul 2024 00:00:00 GMT</pubDate>
  <media:content url="https://blog.frequentist.org/posts/20240725-views-of-russia/image.png" medium="image" type="image/png" height="89" width="144"/>
</item>
</channel>
</rss>
